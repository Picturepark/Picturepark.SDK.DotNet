{
  "x-generator": "NSwag v11.18.7.0 (NJsonSchema v9.10.70.0 (Newtonsoft.Json v9.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Picturepark CloudManager API V1",
    "description": "OpenAPI specification of Picturepark CloudManager API V1",
    "contact": {
      "name": "Picturepark sales",
      "email": "sales@picturepark.com"
    },
    "version": "1.0"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/customer/{customerAlias}/cdn/purge": {
      "post": {
        "tags": [
          "Cdn"
        ],
        "operationId": "Cdn_PurgeCdnForCustomer",
        "parameters": [
          {
            "type": "string",
            "name": "customerAlias",
            "in": "path",
            "required": true,
            "nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessProcess"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/backup/customer/repository": {
      "put": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_CreateCustomerSnapshotRepository",
        "requestBody": {
          "x-name": "snapshotRepositoryCustomerCreateRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnapshotRepositoryCustomerCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotRepository"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/backup/customer/snapshot": {
      "put": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_CreateSnapshot",
        "requestBody": {
          "x-name": "snapshotCustomerCreateRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnapshotCustomerCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotEnqueueResult"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/backup/customer/restore": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_RestoreSnapshot",
        "requestBody": {
          "x-name": "snapshotCustomerRestoreRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnapshotCustomerRestoreRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotRestore"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/backup/environment/repository": {
      "put": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_CreateEnvironmentSnapshotRepository",
        "requestBody": {
          "x-name": "snapshotRepositoryEnvironmentCreateRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnapshotRepositoryEnvironmentCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotRepository"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/backup/environment/snapshot": {
      "put": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_CreateSnapshot2",
        "requestBody": {
          "x-name": "snapshotEnvironmentCreateRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnapshotEnvironmentCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotEnqueueResult"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/backup/environment/restore": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_RestoreSnapshot2",
        "requestBody": {
          "x-name": "snapshotEnvironmentRestoreRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnapshotEnvironmentRestoreRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotRestore"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/backup/customer/snapshot/search": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_SearchSnapshots",
        "requestBody": {
          "x-name": "snapshotCustomerSearchRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnapshotCustomerSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotCustomerSearchResult"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/backup/customer/repository/search": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_SearchRepositories",
        "requestBody": {
          "x-name": "searchRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnapshotRepositoryCustomerSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotRepositorySearchResult"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/backup/environment/repository/search": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_SearchRepositories2",
        "requestBody": {
          "x-name": "searchRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnapshotRepositoryEnvironmentSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotRepositorySearchResult"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/backup/customer/clone": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_CloneCustomer",
        "requestBody": {
          "x-name": "cloneRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnapshotCustomerCloneRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/backup/snapshot/cleanup": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_Cleanup",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotsCleanupResult"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/backup/customer/export": {
      "put": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_Export",
        "parameters": [
          {
            "type": "string",
            "name": "timeout",
            "in": "query",
            "format": "time-span",
            "nullable": true
          }
        ],
        "requestBody": {
          "x-name": "customerExportRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerExportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerExportResult"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "\nor\nValidation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "",
                "schema": {
                  "$ref": "#/components/schemas/SnapshotTimeoutException"
                }
              },
              {
                "description": "Validation exception",
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            ]
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/backup/snapshot/{repositoryName}/archive": {
      "put": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_ArchiveRepository",
        "parameters": [
          {
            "type": "string",
            "name": "repositoryName",
            "in": "path",
            "required": true,
            "nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotRepository"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/backup/snapshot/{repositoryName}": {
      "get": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_GetRepository",
        "parameters": [
          {
            "type": "string",
            "name": "repositoryName",
            "in": "path",
            "required": true,
            "nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotRepository"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/contentBackup/outputs/complete": {
      "post": {
        "tags": [
          "ContentBackup"
        ],
        "operationId": "ContentBackup_CompleteOutputBackup",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentBackupCompleteByOutputRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/contentBackup/contents/searchMissing": {
      "post": {
        "tags": [
          "ContentBackup"
        ],
        "operationId": "ContentBackup_SearchMissingContentBackups",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentBackupSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentBackupSearchResult"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/contentBackup/enable": {
      "post": {
        "tags": [
          "ContentBackup"
        ],
        "operationId": "ContentBackup_EnableContentBackup",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentBackupEnableRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/contentBackup/disable": {
      "post": {
        "tags": [
          "ContentBackup"
        ],
        "operationId": "ContentBackup_DisableContentBackup",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentBackupDisableRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/contentBackup/cancelRecovery": {
      "post": {
        "tags": [
          "ContentBackup"
        ],
        "operationId": "ContentBackup_CancelContentBackupRecovery",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentBackupCancelRecoveryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/contentBackup/forceCompleteRecovery": {
      "post": {
        "tags": [
          "ContentBackup"
        ],
        "operationId": "ContentBackup_ForceCompleteContentBackupRecovery",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentBackupForceCompleteRecoveryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/customer": {
      "post": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Create",
        "requestBody": {
          "x-name": "createRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerConfiguration"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Update",
        "requestBody": {
          "x-name": "updateRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerConfiguration"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/customer/{customerId}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Get",
        "parameters": [
          {
            "type": "string",
            "name": "customerId",
            "in": "path",
            "required": true,
            "nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerConfiguration"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Delete",
        "parameters": [
          {
            "type": "string",
            "name": "customerId",
            "in": "path",
            "required": true,
            "nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/customer/search": {
      "get": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_List",
        "parameters": [
          {
            "type": "string",
            "name": "customerId",
            "in": "query",
            "required": true,
            "nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerSearchResult"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Search",
        "requestBody": {
          "x-name": "searchRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerSearchResult"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/customer/{customerId}/users": {
      "get": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_GetAllUsers",
        "parameters": [
          {
            "type": "string",
            "name": "customerId",
            "in": "path",
            "required": true,
            "nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/customer/{customerAlias}/restore": {
      "post": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Restore",
        "parameters": [
          {
            "type": "string",
            "name": "customerAlias",
            "in": "path",
            "required": true,
            "nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/customer/{customerAlias}/searchIndex/reindex": {
      "post": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Reindex",
        "parameters": [
          {
            "type": "string",
            "name": "customerAlias",
            "in": "path",
            "required": true,
            "nullable": false
          }
        ],
        "requestBody": {
          "x-name": "reindexRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchIndexReindexRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Index"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/customer/{customerAlias}/metadataLanguage": {
      "post": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_CreateMetadataLanguage",
        "parameters": [
          {
            "type": "string",
            "name": "customerAlias",
            "in": "path",
            "required": true,
            "nullable": false
          },
          {
            "type": "string",
            "name": "timeout",
            "in": "query",
            "format": "time-span",
            "nullable": true
          }
        ],
        "requestBody": {
          "x-name": "metadataLanguageCreateRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerMetadataLanguageCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentProcess"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/service/customer/serviceProvider": {
      "post": {
        "tags": [
          "CustomerServiceProvider"
        ],
        "operationId": "CustomerServiceProvider_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerServiceProviderCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerServiceProvider"
                }
              }
            }
          },
          "404": {
            "x-nullable": true,
            "description": "Service provoider with this id could not be found\nor\nCustomer with this alias could not be found\nor\nEntity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Service provoider with this id could not be found",
                "schema": {
                  "$ref": "#/components/schemas/ServiceProviderNotFoundException"
                }
              },
              {
                "description": "Customer with this alias could not be found",
                "schema": {
                  "$ref": "#/components/schemas/CustomerAliasNotFoundException"
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            ]
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/service/customer/{customerAlias}/serviceProvider/{serviceProviderId}": {
      "delete": {
        "tags": [
          "CustomerServiceProvider"
        ],
        "operationId": "CustomerServiceProvider_Delete",
        "parameters": [
          {
            "type": "string",
            "name": "customerAlias",
            "in": "path",
            "required": true,
            "nullable": false
          },
          {
            "type": "string",
            "name": "serviceProviderId",
            "in": "path",
            "required": true,
            "nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "x-nullable": true,
            "description": "Service provoider with this id could not be found\nor\nCustomer with this alias could not be found\nor\nEntity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Service provoider with this id could not be found",
                "schema": {
                  "$ref": "#/components/schemas/ServiceProviderNotFoundException"
                }
              },
              {
                "description": "Customer with this alias could not be found",
                "schema": {
                  "$ref": "#/components/schemas/CustomerAliasNotFoundException"
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            ]
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/service/environment": {
      "post": {
        "tags": [
          "Environment"
        ],
        "operationId": "Environment_CreateEnvironment",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentConfiguration"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/service/environment/version": {
      "get": {
        "tags": [
          "Environment"
        ],
        "operationId": "Environment_GetVersion",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionInfo"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/environmentProcesses/{processId}": {
      "get": {
        "tags": [
          "EnvironmentProcess"
        ],
        "operationId": "EnvironmentProcess_Get",
        "parameters": [
          {
            "type": "string",
            "name": "processId",
            "in": "path",
            "required": true,
            "nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentProcess"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/environmentProcesses/{processId}/wait": {
      "get": {
        "tags": [
          "EnvironmentProcess"
        ],
        "operationId": "EnvironmentProcess_WaitForLifecycle",
        "parameters": [
          {
            "type": "string",
            "name": "processId",
            "in": "path",
            "required": true,
            "nullable": false
          },
          {
            "type": "array",
            "name": "lifecycles",
            "in": "query",
            "collectionFormat": "multi",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/EnvironmentProcessLifeCycle"
            }
          },
          {
            "type": "string",
            "name": "timeout",
            "in": "query",
            "format": "time-span",
            "nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentProcessWaitResult"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/environmentProcesses/{processId}/cancel": {
      "post": {
        "tags": [
          "EnvironmentProcess"
        ],
        "operationId": "EnvironmentProcess_Cancel",
        "parameters": [
          {
            "type": "string",
            "name": "processId",
            "in": "path",
            "required": true,
            "nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/environmentProcesses/{processId}/acknowledge": {
      "post": {
        "tags": [
          "EnvironmentProcess"
        ],
        "operationId": "EnvironmentProcess_Acknowledge",
        "parameters": [
          {
            "type": "string",
            "name": "processId",
            "in": "path",
            "required": true,
            "nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/environmentProcesses/search": {
      "post": {
        "tags": [
          "EnvironmentProcess"
        ],
        "operationId": "EnvironmentProcess_Search",
        "requestBody": {
          "x-name": "searchRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentProcessSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentProcessSearchResult"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/customer/{customerAlias}/sampleData": {
      "put": {
        "tags": [
          "SampleData"
        ],
        "operationId": "SampleData_create",
        "parameters": [
          {
            "type": "string",
            "name": "customerAlias",
            "in": "path",
            "required": true,
            "nullable": false
          }
        ],
        "requestBody": {
          "x-name": "dataGenerationCreateRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataGenerationCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/services/shutdownAll": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Service_ShutdownAll",
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/services/restartAll": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Service_RestartAll",
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/services/{serviceName}/restart": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Service_RestartService",
        "parameters": [
          {
            "type": "string",
            "name": "serviceName",
            "in": "path",
            "required": true,
            "nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/services/{serviceName}/shutdown": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Service_ShutdownService",
        "parameters": [
          {
            "type": "string",
            "name": "serviceName",
            "in": "path",
            "required": true,
            "nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/services/pingAllActiveNodes": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Service_PingAllActiveNodes",
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/services/getAllActiveNodes": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Service_GetAllActiveNodes",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NodeInfo"
                  }
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/service/serviceProvider": {
      "post": {
        "tags": [
          "ServiceProvider"
        ],
        "operationId": "ServiceProvider_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceProviderCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceProvider"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/service/serviceProvider/{serviceProviderId}": {
      "delete": {
        "tags": [
          "ServiceProvider"
        ],
        "operationId": "ServiceProvider_Delete",
        "parameters": [
          {
            "type": "string",
            "name": "serviceProviderId",
            "in": "path",
            "required": true,
            "nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "x-nullable": true,
            "description": "Service provoider with this id could not be found\nor\nEntity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Service provoider with this id could not be found",
                "schema": {
                  "$ref": "#/components/schemas/ServiceProviderNotFoundException"
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            ]
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/updates/environment": {
      "get": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_GetAvailableEnvironmentUpdates",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UpdateInfo"
                  }
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/updates/environment/version": {
      "get": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_GetEnvironmentVersion",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionInfo"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/updates/environment/reactivate": {
      "post": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_ReactivateEnvironment",
        "requestBody": {
          "x-name": "reactivationRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReactivationEnvironmentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/updates/environment/deactivate": {
      "post": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_DeactivateEnvironment",
        "requestBody": {
          "x-name": "deactivationRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeactivationEnvironmentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/updates/environment/update": {
      "post": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_UpdateEnvironment",
        "requestBody": {
          "x-name": "updateRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEnvironmentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentProcess"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/updates/customers/{customerId}": {
      "get": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_GetAvailableCustomerUpdates",
        "parameters": [
          {
            "type": "string",
            "name": "customerId",
            "in": "path",
            "required": true,
            "nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UpdateInfo"
                  }
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/updates/customers/version": {
      "get": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_GetCustomerVersions",
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerVersionInfo"
                  }
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/updates/customers/{customerId}/version": {
      "get": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_GetCustomerVersion",
        "parameters": [
          {
            "type": "string",
            "name": "customerId",
            "in": "path",
            "required": true,
            "nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerVersionInfo"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/updates/customers/reactivate": {
      "post": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_ReactivateCustomers",
        "requestBody": {
          "x-name": "reactivationRequests",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ReactivationCustomerRequest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/updates/customers/deactivate": {
      "post": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_DeactivateCustomers",
        "requestBody": {
          "x-name": "deactivationRequests",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeactivationCustomerRequest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/updates/customers/update": {
      "post": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_UpdateCustomers",
        "requestBody": {
          "x-name": "updateRequests",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateCustomerRequest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnvironmentProcess"
                  }
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/{customerAlias}/{userId}/getUserDeveloperFlag": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "User_GetUserDeveloperFlag",
        "parameters": [
          {
            "type": "string",
            "name": "customerAlias",
            "in": "path",
            "required": true,
            "nullable": false
          },
          {
            "type": "string",
            "name": "userId",
            "in": "path",
            "required": true,
            "nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/{customerAlias}/updateUserDeveloperFlag": {
      "put": {
        "tags": [
          "User"
        ],
        "operationId": "User_UpdateUserDeveloperFlag",
        "parameters": [
          {
            "type": "string",
            "name": "customerAlias",
            "in": "path",
            "required": true,
            "nullable": false
          }
        ],
        "requestBody": {
          "x-name": "userDeveloperFlagUpdateRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDeveloperFlagUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDeveloperFlagUpdateRequest"
                }
              }
            }
          },
          "500": {
            "x-nullable": true,
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "x-nullable": true,
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkNotFoundException"
                }
              }
            }
          },
          "409": {
            "x-nullable": true,
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "400": {
            "x-nullable": true,
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "BusinessProcess": {
        "type": "object",
        "discriminator": {
          "propertyName": "kind",
          "mapping": {
            "BusinessProcessBulkResponse": {
              "$ref": "#/components/schemas/BusinessProcessBulkResponse"
            }
          }
        },
        "additionalProperties": false,
        "required": [
          "supportsCancellation",
          "businessProcessScope",
          "lifeCycle",
          "startDate",
          "endDate",
          "finished",
          "kind"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "processDefinitionId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "referenceDocType": {
            "type": "string"
          },
          "supportsCancellation": {
            "type": "boolean"
          },
          "businessProcessScope": {
            "$ref": "#/components/schemas/BusinessProcessScope"
          },
          "lifeCycle": {
            "$ref": "#/components/schemas/BusinessProcessLifeCycle"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "finished": {
            "type": "boolean"
          },
          "stateHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BusinessProcessState"
            }
          },
          "currentState": {
            "type": "string"
          },
          "processDefinitionName": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          }
        }
      },
      "BusinessProcessScope": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "System",
          "User"
        ],
        "enum": [
          "System",
          "User"
        ]
      },
      "BusinessProcessLifeCycle": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Draft",
          "InProgress",
          "Succeeded",
          "Cancelled",
          "CancellationInProgress",
          "Failed",
          "SucceededWithErrors"
        ],
        "enum": [
          "Draft",
          "InProgress",
          "Succeeded",
          "Cancelled",
          "CancellationInProgress",
          "Failed",
          "SucceededWithErrors"
        ]
      },
      "BusinessProcessState": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "timestamp"
        ],
        "properties": {
          "state": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorResponse"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "exception": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          },
          "traceJobId": {
            "type": "string"
          }
        }
      },
      "BusinessProcessBulkResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "response": {
            "$ref": "#/components/schemas/BulkResponse"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/BusinessProcess"
          }
        ]
      },
      "BulkResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "rows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkResponseRow"
            }
          }
        }
      },
      "BulkResponseRow": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "version",
          "succeeded",
          "status"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "integer",
            "format": "int64"
          },
          "error": {
            "type": "string"
          },
          "succeeded": {
            "type": "boolean"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PictureparkException": {
        "type": "object",
        "discriminator": {
          "propertyName": "kind",
          "mapping": {
            "PictureparkBusinessException": {
              "$ref": "#/components/schemas/PictureparkBusinessException"
            },
            "PictureparkValidationException": {
              "$ref": "#/components/schemas/PictureparkValidationException"
            },
            "PictureparkConflictException": {
              "$ref": "#/components/schemas/PictureparkConflictException"
            },
            "PictureparkTimeoutException": {
              "$ref": "#/components/schemas/PictureparkTimeoutException"
            },
            "PictureparkForbiddenException": {
              "$ref": "#/components/schemas/PictureparkForbiddenException"
            },
            "UserEmailAlreadyExistsException": {
              "$ref": "#/components/schemas/UserEmailAlreadyExistsException"
            },
            "UserRoleAssignedException": {
              "$ref": "#/components/schemas/UserRoleAssignedException"
            },
            "UserNotFoundException": {
              "$ref": "#/components/schemas/UserNotFoundException"
            },
            "UserInactiveOrDeletedException": {
              "$ref": "#/components/schemas/UserInactiveOrDeletedException"
            },
            "TermsOfServiceNotNewestException": {
              "$ref": "#/components/schemas/TermsOfServiceNotNewestException"
            },
            "UnableToReinviteNotInvitedUserException": {
              "$ref": "#/components/schemas/UnableToReinviteNotInvitedUserException"
            },
            "RenderingException": {
              "$ref": "#/components/schemas/RenderingException"
            },
            "ServiceProviderDeleteException": {
              "$ref": "#/components/schemas/ServiceProviderDeleteException"
            },
            "ServiceProviderCreateException": {
              "$ref": "#/components/schemas/ServiceProviderCreateException"
            },
            "ServiceProviderNotFoundException": {
              "$ref": "#/components/schemas/ServiceProviderNotFoundException"
            },
            "PictureparkNotFoundException": {
              "$ref": "#/components/schemas/PictureparkNotFoundException"
            },
            "DocumentVersionNotFoundException": {
              "$ref": "#/components/schemas/DocumentVersionNotFoundException"
            },
            "DefaultChannelDeleteException": {
              "$ref": "#/components/schemas/DefaultChannelDeleteException"
            },
            "ElasticVersionUpdateException": {
              "$ref": "#/components/schemas/ElasticVersionUpdateException"
            },
            "InvalidVersionException": {
              "$ref": "#/components/schemas/InvalidVersionException"
            },
            "EnvironmentNotDeactivatedException": {
              "$ref": "#/components/schemas/EnvironmentNotDeactivatedException"
            },
            "EnvironmentNotFoundException": {
              "$ref": "#/components/schemas/EnvironmentNotFoundException"
            },
            "EnvironmentDeactivationException": {
              "$ref": "#/components/schemas/EnvironmentDeactivationException"
            },
            "ShareNotFoundException": {
              "$ref": "#/components/schemas/ShareNotFoundException"
            },
            "ShareByTokenNotFoundException": {
              "$ref": "#/components/schemas/ShareByTokenNotFoundException"
            },
            "TokenGenerationException": {
              "$ref": "#/components/schemas/TokenGenerationException"
            },
            "ShareExpiredException": {
              "$ref": "#/components/schemas/ShareExpiredException"
            },
            "OutputIdNotFoundException": {
              "$ref": "#/components/schemas/OutputIdNotFoundException"
            },
            "OutputNotFoundException": {
              "$ref": "#/components/schemas/OutputNotFoundException"
            },
            "LeaseNotAcquiredException": {
              "$ref": "#/components/schemas/LeaseNotAcquiredException"
            },
            "OperationInProgressException": {
              "$ref": "#/components/schemas/OperationInProgressException"
            },
            "RetryException": {
              "$ref": "#/components/schemas/RetryException"
            },
            "OwnerTokenNotFoundException": {
              "$ref": "#/components/schemas/OwnerTokenNotFoundException"
            },
            "InvalidStateException": {
              "$ref": "#/components/schemas/InvalidStateException"
            },
            "PictureparkArgumentNullException": {
              "$ref": "#/components/schemas/PictureparkArgumentNullException"
            },
            "ObjectTypeMismatchException": {
              "$ref": "#/components/schemas/ObjectTypeMismatchException"
            },
            "InvalidStateTransitionException": {
              "$ref": "#/components/schemas/InvalidStateTransitionException"
            },
            "FailedToLockException": {
              "$ref": "#/components/schemas/FailedToLockException"
            },
            "PictureparkOperationCanceledException": {
              "$ref": "#/components/schemas/PictureparkOperationCanceledException"
            },
            "PictureparkApplicationException": {
              "$ref": "#/components/schemas/PictureparkApplicationException"
            },
            "MissingCustomerDefaultLanguageException": {
              "$ref": "#/components/schemas/MissingCustomerDefaultLanguageException"
            },
            "InvalidArgumentException": {
              "$ref": "#/components/schemas/InvalidArgumentException"
            },
            "UnknownException": {
              "$ref": "#/components/schemas/UnknownException"
            },
            "OwnerTokenInUseException": {
              "$ref": "#/components/schemas/OwnerTokenInUseException"
            },
            "CustomerViolationException": {
              "$ref": "#/components/schemas/CustomerViolationException"
            },
            "CustomerAliasNotFoundException": {
              "$ref": "#/components/schemas/CustomerAliasNotFoundException"
            },
            "CustomerAliasInUseException": {
              "$ref": "#/components/schemas/CustomerAliasInUseException"
            },
            "CustomerNotDeactivatedException": {
              "$ref": "#/components/schemas/CustomerNotDeactivatedException"
            },
            "CustomerDeactivationException": {
              "$ref": "#/components/schemas/CustomerDeactivationException"
            },
            "CustomerHostNotFoundException": {
              "$ref": "#/components/schemas/CustomerHostNotFoundException"
            },
            "CustomerNotFoundException": {
              "$ref": "#/components/schemas/CustomerNotFoundException"
            },
            "CustomerNotActiveException": {
              "$ref": "#/components/schemas/CustomerNotActiveException"
            },
            "ConfigurationIndexNotFoundException": {
              "$ref": "#/components/schemas/ConfigurationIndexNotFoundException"
            },
            "DuplicateSearchIndexDocException": {
              "$ref": "#/components/schemas/DuplicateSearchIndexDocException"
            },
            "SearchIndexDocNotFoundException": {
              "$ref": "#/components/schemas/SearchIndexDocNotFoundException"
            },
            "IndexDocumentNotFoundException": {
              "$ref": "#/components/schemas/IndexDocumentNotFoundException"
            },
            "DuplicateAliasException": {
              "$ref": "#/components/schemas/DuplicateAliasException"
            },
            "SearchIndexNotFoundException": {
              "$ref": "#/components/schemas/SearchIndexNotFoundException"
            },
            "DefaultSearchIndexDeleteException": {
              "$ref": "#/components/schemas/DefaultSearchIndexDeleteException"
            },
            "SearchIndexInUseException": {
              "$ref": "#/components/schemas/SearchIndexInUseException"
            },
            "IndexException": {
              "$ref": "#/components/schemas/IndexException"
            },
            "IndexMappingException": {
              "$ref": "#/components/schemas/IndexMappingException"
            },
            "DuplicatedSearchBehaviourException": {
              "$ref": "#/components/schemas/DuplicatedSearchBehaviourException"
            },
            "SearchStringLeadingWildcardException": {
              "$ref": "#/components/schemas/SearchStringLeadingWildcardException"
            },
            "DuplicateAggregatorException": {
              "$ref": "#/components/schemas/DuplicateAggregatorException"
            },
            "InvalidDateTimeFormatException": {
              "$ref": "#/components/schemas/InvalidDateTimeFormatException"
            },
            "InvalidSortFieldException": {
              "$ref": "#/components/schemas/InvalidSortFieldException"
            },
            "DocumentVersionConflictException": {
              "$ref": "#/components/schemas/DocumentVersionConflictException"
            },
            "RedisDatabaseExceededException": {
              "$ref": "#/components/schemas/RedisDatabaseExceededException"
            },
            "DuplicateDocumentException": {
              "$ref": "#/components/schemas/DuplicateDocumentException"
            },
            "ObjectStoreResponseException": {
              "$ref": "#/components/schemas/ObjectStoreResponseException"
            },
            "ObjectStoreException": {
              "$ref": "#/components/schemas/ObjectStoreException"
            },
            "QueryException": {
              "$ref": "#/components/schemas/QueryException"
            },
            "PermissionOwnershipTransferException": {
              "$ref": "#/components/schemas/PermissionOwnershipTransferException"
            },
            "PermissionSetNotFoundException": {
              "$ref": "#/components/schemas/PermissionSetNotFoundException"
            },
            "DuplicateRightException": {
              "$ref": "#/components/schemas/DuplicateRightException"
            },
            "PermissionValidationException": {
              "$ref": "#/components/schemas/PermissionValidationException"
            },
            "UnsupportedListItemChangeCommandException": {
              "$ref": "#/components/schemas/UnsupportedListItemChangeCommandException"
            },
            "ListItemLayerException": {
              "$ref": "#/components/schemas/ListItemLayerException"
            },
            "ListItemNotFoundException": {
              "$ref": "#/components/schemas/ListItemNotFoundException"
            },
            "ListItemCyclicDependencyException": {
              "$ref": "#/components/schemas/ListItemCyclicDependencyException"
            },
            "DeleteListItemsWithReferencesException": {
              "$ref": "#/components/schemas/DeleteListItemsWithReferencesException"
            },
            "ListItemUpdateManyException": {
              "$ref": "#/components/schemas/ListItemUpdateManyException"
            },
            "TransferInfoNotFoundException": {
              "$ref": "#/components/schemas/TransferInfoNotFoundException"
            },
            "FileTransferNotFoundException": {
              "$ref": "#/components/schemas/FileTransferNotFoundException"
            },
            "InvalidTransferTypeException": {
              "$ref": "#/components/schemas/InvalidTransferTypeException"
            },
            "TransferNotFoundException": {
              "$ref": "#/components/schemas/TransferNotFoundException"
            },
            "WrongChunkSizeException": {
              "$ref": "#/components/schemas/WrongChunkSizeException"
            },
            "MissingDependenciesException": {
              "$ref": "#/components/schemas/MissingDependenciesException"
            },
            "RelationSelfReferencingException": {
              "$ref": "#/components/schemas/RelationSelfReferencingException"
            },
            "InvalidChangeCommandFieldTypeInvalidException": {
              "$ref": "#/components/schemas/InvalidChangeCommandFieldTypeInvalidException"
            },
            "InvalidChangeCommandFieldNotFoundException": {
              "$ref": "#/components/schemas/InvalidChangeCommandFieldNotFoundException"
            },
            "InvalidChangeCommandSchemaChangeInvalidException": {
              "$ref": "#/components/schemas/InvalidChangeCommandSchemaChangeInvalidException"
            },
            "InvalidMetadataException": {
              "$ref": "#/components/schemas/InvalidMetadataException"
            },
            "RelationNotFoundException": {
              "$ref": "#/components/schemas/RelationNotFoundException"
            },
            "RelationTypeNotFoundException": {
              "$ref": "#/components/schemas/RelationTypeNotFoundException"
            },
            "RelationTypeTargetDocTypeMismatchException": {
              "$ref": "#/components/schemas/RelationTypeTargetDocTypeMismatchException"
            },
            "AggregationNameInvalidException": {
              "$ref": "#/components/schemas/AggregationNameInvalidException"
            },
            "SchemaFieldOverwriteTypeMismatchException": {
              "$ref": "#/components/schemas/SchemaFieldOverwriteTypeMismatchException"
            },
            "SchemaFieldOverwriteIdException": {
              "$ref": "#/components/schemas/SchemaFieldOverwriteIdException"
            },
            "SchemaFieldIdDuplicatedException": {
              "$ref": "#/components/schemas/SchemaFieldIdDuplicatedException"
            },
            "SchemaFieldSchemaIndexInfoSimpleSearchNestingException": {
              "$ref": "#/components/schemas/SchemaFieldSchemaIndexInfoSimpleSearchNestingException"
            },
            "SchemaFieldSchemaIndexInfoNestingException": {
              "$ref": "#/components/schemas/SchemaFieldSchemaIndexInfoNestingException"
            },
            "SchemaFieldIdUppercaseException": {
              "$ref": "#/components/schemas/SchemaFieldIdUppercaseException"
            },
            "SchemaIdLowercaseException": {
              "$ref": "#/components/schemas/SchemaIdLowercaseException"
            },
            "SchemaInfoNotFoundException": {
              "$ref": "#/components/schemas/SchemaInfoNotFoundException"
            },
            "IndexedFieldThresholdExceededException": {
              "$ref": "#/components/schemas/IndexedFieldThresholdExceededException"
            },
            "SortableFieldThresholdExceededException": {
              "$ref": "#/components/schemas/SortableFieldThresholdExceededException"
            },
            "DuplicateSchemaInfoException": {
              "$ref": "#/components/schemas/DuplicateSchemaInfoException"
            },
            "SchemaFieldNumberRangeException": {
              "$ref": "#/components/schemas/SchemaFieldNumberRangeException"
            },
            "SchemaInUseContentSchemaException": {
              "$ref": "#/components/schemas/SchemaInUseContentSchemaException"
            },
            "SchemaInUseListItemException": {
              "$ref": "#/components/schemas/SchemaInUseListItemException"
            },
            "SchemaInUseContentException": {
              "$ref": "#/components/schemas/SchemaInUseContentException"
            },
            "SchemaInUseFieldException": {
              "$ref": "#/components/schemas/SchemaInUseFieldException"
            },
            "SchemaNotFoundInSearchIndexException": {
              "$ref": "#/components/schemas/SchemaNotFoundInSearchIndexException"
            },
            "DuplicateMetadataDisplayPatternException": {
              "$ref": "#/components/schemas/DuplicateMetadataDisplayPatternException"
            },
            "DuplicateSchemaException": {
              "$ref": "#/components/schemas/DuplicateSchemaException"
            },
            "SchemaImportEmptyException": {
              "$ref": "#/components/schemas/SchemaImportEmptyException"
            },
            "SchemaImportVersionMismatchException": {
              "$ref": "#/components/schemas/SchemaImportVersionMismatchException"
            },
            "SchemaCyclicDependencyException": {
              "$ref": "#/components/schemas/SchemaCyclicDependencyException"
            },
            "SchemaInheritanceFieldIndexDeviationException": {
              "$ref": "#/components/schemas/SchemaInheritanceFieldIndexDeviationException"
            },
            "SchemaInheritanceTypeDeviationException": {
              "$ref": "#/components/schemas/SchemaInheritanceTypeDeviationException"
            },
            "SchemaValidationException": {
              "$ref": "#/components/schemas/SchemaValidationException"
            },
            "SchemaSortFieldException": {
              "$ref": "#/components/schemas/SchemaSortFieldException"
            },
            "SchemaFieldIdException": {
              "$ref": "#/components/schemas/SchemaFieldIdException"
            },
            "SchemaFieldTypeChangeException": {
              "$ref": "#/components/schemas/SchemaFieldTypeChangeException"
            },
            "SchemaFieldIndexException": {
              "$ref": "#/components/schemas/SchemaFieldIndexException"
            },
            "SchemaFieldNotSortableException": {
              "$ref": "#/components/schemas/SchemaFieldNotSortableException"
            },
            "SchemaFieldNotSearchableException": {
              "$ref": "#/components/schemas/SchemaFieldNotSearchableException"
            },
            "SchemaNoContentException": {
              "$ref": "#/components/schemas/SchemaNoContentException"
            },
            "SchemaParentChangeException": {
              "$ref": "#/components/schemas/SchemaParentChangeException"
            },
            "SchemaMissingTypeException": {
              "$ref": "#/components/schemas/SchemaMissingTypeException"
            },
            "SchemaPermissionException": {
              "$ref": "#/components/schemas/SchemaPermissionException"
            },
            "SchemaNoLayerException": {
              "$ref": "#/components/schemas/SchemaNoLayerException"
            },
            "SchemaIdException": {
              "$ref": "#/components/schemas/SchemaIdException"
            },
            "SchemaInUseException": {
              "$ref": "#/components/schemas/SchemaInUseException"
            },
            "SchemaNotFoundException": {
              "$ref": "#/components/schemas/SchemaNotFoundException"
            },
            "SystemSchemaInvalidModificationException": {
              "$ref": "#/components/schemas/SystemSchemaInvalidModificationException"
            },
            "SchemaFieldRelationSchemaSystemSchemaException": {
              "$ref": "#/components/schemas/SchemaFieldRelationSchemaSystemSchemaException"
            },
            "SchemaFieldRelationSchemaTypeUnsupportedException": {
              "$ref": "#/components/schemas/SchemaFieldRelationSchemaTypeUnsupportedException"
            },
            "SchemaMultipleTypesException": {
              "$ref": "#/components/schemas/SchemaMultipleTypesException"
            },
            "MissingDisplayPatternForCustomerDefaultLanguageException": {
              "$ref": "#/components/schemas/MissingDisplayPatternForCustomerDefaultLanguageException"
            },
            "DeleteContentsWithRelationsException": {
              "$ref": "#/components/schemas/DeleteContentsWithRelationsException"
            },
            "ContentMetadataUpdateManyException": {
              "$ref": "#/components/schemas/ContentMetadataUpdateManyException"
            },
            "ContentNotFoundException": {
              "$ref": "#/components/schemas/ContentNotFoundException"
            },
            "ContentLayerInvalidException": {
              "$ref": "#/components/schemas/ContentLayerInvalidException"
            },
            "ContentFileReplaceTypeMismatchException": {
              "$ref": "#/components/schemas/ContentFileReplaceTypeMismatchException"
            },
            "BusinessProcessWaitTimeoutException": {
              "$ref": "#/components/schemas/BusinessProcessWaitTimeoutException"
            },
            "BusinessProcessEngineRequestException": {
              "$ref": "#/components/schemas/BusinessProcessEngineRequestException"
            },
            "BusinessProcessNotFoundException": {
              "$ref": "#/components/schemas/BusinessProcessNotFoundException"
            },
            "BusinessProcessDefinitionNotFoundException": {
              "$ref": "#/components/schemas/BusinessProcessDefinitionNotFoundException"
            },
            "BusinessProcessDefinitionCreateException": {
              "$ref": "#/components/schemas/BusinessProcessDefinitionCreateException"
            },
            "SchemaFieldImportMismatchException": {
              "$ref": "#/components/schemas/SchemaFieldImportMismatchException"
            },
            "SchemaFieldImportRelatedSchemaMismatchException": {
              "$ref": "#/components/schemas/SchemaFieldImportRelatedSchemaMismatchException"
            },
            "SchemaFieldImportTypeMismatchException": {
              "$ref": "#/components/schemas/SchemaFieldImportTypeMismatchException"
            },
            "SnapshotTimeoutException": {
              "$ref": "#/components/schemas/SnapshotTimeoutException"
            },
            "SnapshotFailedException": {
              "$ref": "#/components/schemas/SnapshotFailedException"
            },
            "AddMetadataLanguageTimeoutException": {
              "$ref": "#/components/schemas/AddMetadataLanguageTimeoutException"
            },
            "EnvironmentProcessAlreadyRunningException": {
              "$ref": "#/components/schemas/EnvironmentProcessAlreadyRunningException"
            },
            "EnvironmentProcessNotFoundException": {
              "$ref": "#/components/schemas/EnvironmentProcessNotFoundException"
            },
            "EnvironmentProcessWaitTimeoutException": {
              "$ref": "#/components/schemas/EnvironmentProcessWaitTimeoutException"
            },
            "NoTermsOfServiceDefinedException": {
              "$ref": "#/components/schemas/NoTermsOfServiceDefinedException"
            },
            "AtLeastOneActiveTermsOfServiceMustExistException": {
              "$ref": "#/components/schemas/AtLeastOneActiveTermsOfServiceMustExistException"
            },
            "ForbiddenHtmlElementsUsedException": {
              "$ref": "#/components/schemas/ForbiddenHtmlElementsUsedException"
            },
            "BusinessProcessStateNotHitException": {
              "$ref": "#/components/schemas/BusinessProcessStateNotHitException"
            },
            "BusinessProcessLifeCycleNotHitException": {
              "$ref": "#/components/schemas/BusinessProcessLifeCycleNotHitException"
            }
          }
        },
        "additionalProperties": false,
        "required": [
          "traceLevel",
          "httpStatusCode",
          "kind"
        ],
        "properties": {
          "traceLevel": {
            "$ref": "#/components/schemas/TraceLevel"
          },
          "traceId": {
            "type": "string"
          },
          "traceJobId": {
            "type": "string"
          },
          "httpStatusCode": {
            "type": "integer",
            "format": "int32"
          },
          "kind": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Exception"
          }
        ]
      },
      "TraceLevel": {
        "type": "string",
        "description": "",
        "x-enumFlags": true,
        "x-enumNames": [
          "Critical",
          "Error",
          "Warning",
          "Information",
          "Verbose"
        ],
        "enum": [
          "Critical",
          "Error",
          "Warning",
          "Information",
          "Verbose"
        ]
      },
      "Exception": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "message": {
            "type": "string"
          },
          "innerException": {
            "$ref": "#/components/schemas/Exception"
          },
          "stackTrace": {
            "type": "string"
          },
          "source": {
            "type": "string"
          }
        }
      },
      "PictureparkBusinessException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customerId": {
            "type": "string"
          },
          "customerAlias": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          }
        ]
      },
      "PictureparkValidationException": {
        "type": "object",
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "PictureparkConflictException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "reference": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "PictureparkTimeoutException": {
        "type": "object",
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "PictureparkForbiddenException": {
        "type": "object",
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "UserEmailAlreadyExistsException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "UserRoleAssignedException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userRoleId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "UserNotFoundException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "missingUserId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "UserInactiveOrDeletedException": {
        "type": "object",
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkForbiddenException"
          }
        ]
      },
      "TermsOfServiceNotNewestException": {
        "type": "object",
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "UnableToReinviteNotInvitedUserException": {
        "type": "object",
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "RenderingException": {
        "type": "object",
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "ServiceProviderDeleteException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "serviceProviderId": {
            "type": "string"
          },
          "detailedErrorMessage": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          }
        ]
      },
      "ServiceProviderCreateException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userId": {
            "type": "string"
          },
          "externalId": {
            "type": "string"
          },
          "virtualHost": {
            "type": "string"
          },
          "detailErrorMessage": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          }
        ]
      },
      "ServiceProviderNotFoundException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "missingServiceProviderId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          }
        ]
      },
      "DocumentVersionNotFoundException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "documentId": {
            "type": "string"
          },
          "documentVersion": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          }
        ]
      },
      "PictureparkNotFoundException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "reference": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "DefaultChannelDeleteException": {
        "type": "object",
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "ElasticVersionUpdateException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "expectedVersion": {
            "type": "string"
          },
          "actualVersion": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          }
        ]
      },
      "InvalidVersionException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "component": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          }
        ]
      },
      "EnvironmentNotDeactivatedException": {
        "type": "object",
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          }
        ]
      },
      "EnvironmentNotFoundException": {
        "type": "object",
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          }
        ]
      },
      "EnvironmentDeactivationException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "deactivationMessage": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          }
        ]
      },
      "ShareNotFoundException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "shareId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          }
        ]
      },
      "ShareByTokenNotFoundException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "token": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          }
        ]
      },
      "TokenGenerationException": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "retries"
        ],
        "properties": {
          "retries": {
            "type": "integer",
            "format": "int64"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "ShareExpiredException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "token": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "OutputIdNotFoundException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "outputId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          }
        ]
      },
      "OutputNotFoundException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "contentId": {
            "type": "string"
          },
          "outputFormatId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "LeaseNotAcquiredException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "resourceId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "OperationInProgressException": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "leaseResourceType"
        ],
        "properties": {
          "leaseResourceType": {
            "$ref": "#/components/schemas/LeaseResourceType"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "LeaseResourceType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "SchemaEditing"
        ],
        "enum": [
          "SchemaEditing"
        ]
      },
      "RetryException": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "retries"
        ],
        "properties": {
          "retries": {
            "type": "integer",
            "format": "int32"
          },
          "innerExceptionDetail": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "OwnerTokenNotFoundException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ownerTokenUserIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          }
        ]
      },
      "InvalidStateException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "resourceId": {
            "type": "string"
          },
          "state": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "PictureparkArgumentNullException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "argumentName": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "ObjectTypeMismatchException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "InvalidStateTransitionException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "transition": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/InvalidStateException"
          }
        ]
      },
      "FailedToLockException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "resourceId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "PictureparkOperationCanceledException": {
        "type": "object",
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "PictureparkApplicationException": {
        "type": "object",
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "MissingCustomerDefaultLanguageException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customerDefaultLanguage": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "InvalidArgumentException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "argumentName": {
            "type": "string"
          },
          "argumentValue": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "UnknownException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "exceptionDetail": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "OwnerTokenInUseException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ownerTokenUserId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "CustomerViolationException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "expectedCustomerId": {
            "type": "string"
          },
          "currentCustomerId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          }
        ]
      },
      "CustomerAliasNotFoundException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customerAlias": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          }
        ]
      },
      "CustomerAliasInUseException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "existingCustomerId": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "CustomerNotDeactivatedException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customerId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          }
        ]
      },
      "CustomerDeactivationException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customerId": {
            "type": "string"
          },
          "deactivationMessage": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          }
        ]
      },
      "CustomerHostNotFoundException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "hostName": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          }
        ]
      },
      "CustomerNotFoundException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customerId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          }
        ]
      },
      "CustomerNotActiveException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customerId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          }
        ]
      },
      "ConfigurationIndexNotFoundException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "configurationIndex": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          }
        ]
      },
      "DuplicateSearchIndexDocException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "searchIndexDocId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "SearchIndexDocNotFoundException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "searchIndexDocId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "IndexDocumentNotFoundException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "indexId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "DuplicateAliasException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "indexAlias": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          }
        ]
      },
      "SearchIndexNotFoundException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "searchIndexId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "DefaultSearchIndexDeleteException": {
        "type": "object",
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "SearchIndexInUseException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "searchIndex": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "IndexException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "indexName": {
            "type": "string"
          },
          "debugInformation": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "IndexMappingException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "indexName": {
            "type": "string"
          },
          "debugInformation": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "DuplicatedSearchBehaviourException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "duplicatedSearchBehaviours": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SearchStringLeadingWildcardException": {
        "type": "object",
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "DuplicateAggregatorException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "aggregatorName": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "InvalidDateTimeFormatException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "string"
          },
          "expectedFormat": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "InvalidSortFieldException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "fieldName": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "DocumentVersionConflictException": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "documentVersion"
        ],
        "properties": {
          "documentId": {
            "type": "string"
          },
          "documentType": {
            "type": "string"
          },
          "documentVersion": {
            "type": "integer",
            "format": "int64"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkConflictException"
          }
        ]
      },
      "RedisDatabaseExceededException": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "customerCount",
          "maxCount",
          "startIndex",
          "redisDatabaseCount"
        ],
        "properties": {
          "customerId": {
            "type": "string"
          },
          "customerCount": {
            "type": "integer",
            "format": "int32"
          },
          "maxCount": {
            "type": "integer",
            "format": "int32"
          },
          "startIndex": {
            "type": "integer",
            "format": "int32"
          },
          "redisDatabaseCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          }
        ]
      },
      "DuplicateDocumentException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "documentId": {
            "type": "string"
          },
          "documentType": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "ObjectStoreResponseException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "rowErrorMessages": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "ObjectStoreException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "rowErrorMessages": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "QueryException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "debugInformation": {
            "type": "string"
          },
          "serverError": {
            "$ref": "#/components/schemas/StorageServerError"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "StorageServerError": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "status"
        ],
        "properties": {
          "error": {
            "$ref": "#/components/schemas/StorageError"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "StorageError": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "index": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "resourceId": {
            "type": "string"
          },
          "resourceType": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "rootCause": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StorageRootCause"
            }
          },
          "causedBy": {
            "$ref": "#/components/schemas/StorageCausedBy"
          }
        }
      },
      "StorageRootCause": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "index": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "resourceId": {
            "type": "string"
          },
          "resourceType": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "StorageCausedBy": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "reason": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "innerCausedBy": {
            "$ref": "#/components/schemas/StorageCausedBy"
          }
        }
      },
      "PermissionOwnershipTransferException": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "missingUserRight"
        ],
        "properties": {
          "transferUserId": {
            "type": "string"
          },
          "missingUserRight": {
            "$ref": "#/components/schemas/UserRight"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "UserRight": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "ManageContent",
          "ManageSharings",
          "ManageTransfer",
          "ManageChannels",
          "ManageSchemas",
          "ManageUsers",
          "ManageUserRoles",
          "ManagePermissions",
          "ManageSearchIndexes",
          "ManageCollections",
          "ManageListItems",
          "ManageServiceProviders",
          "ManageEmbeds",
          "ManageTemplates",
          "ManageTermsOfService"
        ],
        "enum": [
          "ManageContent",
          "ManageSharings",
          "ManageTransfer",
          "ManageChannels",
          "ManageSchemas",
          "ManageUsers",
          "ManageUserRoles",
          "ManagePermissions",
          "ManageSearchIndexes",
          "ManageCollections",
          "ManageListItems",
          "ManageServiceProviders",
          "ManageEmbeds",
          "ManageTemplates",
          "ManageTermsOfService"
        ]
      },
      "PermissionSetNotFoundException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "permissionSetIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          }
        ]
      },
      "DuplicateRightException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "permissionSetId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "PermissionValidationException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "permission": {
            "type": "string"
          },
          "operation": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "UnsupportedListItemChangeCommandException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "commandType": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "ListItemLayerException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "listItemId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "ListItemNotFoundException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "listItemIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          }
        ]
      },
      "ListItemCyclicDependencyException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "listItemIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "DeleteListItemsWithReferencesException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "referencesList": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "references": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "ListItemUpdateManyException": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "failedItemsCount",
          "totalItemsCount"
        ],
        "properties": {
          "failedItemsCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalItemsCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "TransferInfoNotFoundException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "transferInfoId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          }
        ]
      },
      "FileTransferNotFoundException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "fileTransferId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          }
        ]
      },
      "InvalidTransferTypeException": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "transferType"
        ],
        "properties": {
          "transferType": {
            "$ref": "#/components/schemas/TransferType"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "TransferType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "FileUpload",
          "FileUploadAutoImport",
          "WebDownload",
          "SchemaImport"
        ],
        "enum": [
          "FileUpload",
          "FileUploadAutoImport",
          "WebDownload",
          "SchemaImport"
        ]
      },
      "TransferNotFoundException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "transferId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          }
        ]
      },
      "WrongChunkSizeException": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "actual",
          "expected"
        ],
        "properties": {
          "actual": {
            "type": "integer",
            "format": "int64"
          },
          "expected": {
            "type": "integer",
            "format": "int64"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "MissingDependenciesException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "itemIds": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "RelationSelfReferencingException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "itemId": {
            "type": "string"
          },
          "itemType": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "InvalidChangeCommandFieldTypeInvalidException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "commandType": {
            "type": "string"
          },
          "fieldId": {
            "type": "string"
          },
          "schemaId": {
            "type": "string"
          },
          "fieldActualType": {
            "type": "string"
          },
          "fieldExpectedType": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "InvalidChangeCommandFieldNotFoundException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "commandTypeName": {
            "type": "string"
          },
          "fieldId": {
            "type": "string"
          },
          "schemaId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "InvalidChangeCommandSchemaChangeInvalidException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "commandTypeName": {
            "type": "string"
          },
          "schemaId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "InvalidMetadataException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "metadataErrors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetadataError"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "MetadataError": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "lineNumber",
          "linePosition"
        ],
        "properties": {
          "errorType": {
            "type": "string"
          },
          "lineNumber": {
            "type": "integer",
            "format": "int32"
          },
          "linePosition": {
            "type": "integer",
            "format": "int32"
          },
          "path": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "schemaId": {
            "type": "string"
          }
        }
      },
      "RelationNotFoundException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "relationId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "RelationTypeNotFoundException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "relationType": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "RelationTypeTargetDocTypeMismatchException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "relationType": {
            "type": "string"
          },
          "targetDocType": {
            "type": "string"
          },
          "expectedTargetDocType": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "AggregationNameInvalidException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "aggregationName": {
            "type": "string"
          },
          "aggregationPrefix": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaFieldOverwriteTypeMismatchException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          },
          "fieldId": {
            "type": "string"
          },
          "fieldOverwriteType": {
            "type": "string"
          },
          "fieldType": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaFieldOverwriteIdException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          },
          "fieldId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaFieldIdDuplicatedException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          },
          "fieldId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaFieldSchemaIndexInfoSimpleSearchNestingException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          },
          "fieldId": {
            "type": "string"
          },
          "relatedFieldId": {
            "type": "string"
          },
          "relatedOuterFieldId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaFieldSchemaIndexInfoNestingException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          },
          "fieldId": {
            "type": "string"
          },
          "relatedFieldId": {
            "type": "string"
          },
          "relatedOuterFieldId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaFieldIdUppercaseException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          },
          "fieldId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaIdLowercaseException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaInfoNotFoundException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          }
        ]
      },
      "IndexedFieldThresholdExceededException": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "indexedFieldCount",
          "indexedFieldThreshold"
        ],
        "properties": {
          "schemaId": {
            "type": "string"
          },
          "indexedFieldCount": {
            "type": "number",
            "format": "double"
          },
          "indexedFieldThreshold": {
            "type": "integer",
            "format": "int32"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SortableFieldThresholdExceededException": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "sortableFieldCount",
          "sortableFieldThreshold"
        ],
        "properties": {
          "schemaId": {
            "type": "string"
          },
          "sortableFieldCount": {
            "type": "number",
            "format": "double"
          },
          "sortableFieldThreshold": {
            "type": "integer",
            "format": "int32"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "DuplicateSchemaInfoException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "SchemaFieldNumberRangeException": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "minValue",
          "maxValue"
        ],
        "properties": {
          "fieldId": {
            "type": "string"
          },
          "propertyName": {
            "type": "string"
          },
          "minValue": {
            "type": "number",
            "format": "decimal"
          },
          "maxValue": {
            "type": "number",
            "format": "decimal"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaInUseContentSchemaException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          },
          "contentSchemaIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaInUseListItemException": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "listItemCount"
        ],
        "properties": {
          "schemaId": {
            "type": "string"
          },
          "listItemCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaInUseContentException": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "contentCount"
        ],
        "properties": {
          "schemaId": {
            "type": "string"
          },
          "contentCount": {
            "type": "integer",
            "format": "int64"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaInUseFieldException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          },
          "fieldNamespaces": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaNotFoundInSearchIndexException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "searchIndexId": {
            "type": "string"
          },
          "schemaId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "DuplicateMetadataDisplayPatternException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          },
          "displayPatternId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "DuplicateSchemaException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaImportEmptyException": {
        "type": "object",
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaImportVersionMismatchException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "providedVersion": {
            "type": "string"
          },
          "expectedVersion": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaCyclicDependencyException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaInheritanceFieldIndexDeviationException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaInheritanceTypeDeviationException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaValidationException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          },
          "exceptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PictureparkBusinessException"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaSortFieldException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          },
          "fieldId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaFieldIdException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          },
          "fieldId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaFieldTypeChangeException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          },
          "fieldId": {
            "type": "string"
          },
          "oldTypeName": {
            "type": "string"
          },
          "newTypeName": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaFieldIndexException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          },
          "fieldId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaFieldNotSortableException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "fieldId": {
            "type": "string"
          },
          "schemaId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaFieldNotSearchableException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "fieldId": {
            "type": "string"
          },
          "schemaId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaNoContentException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaParentChangeException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          },
          "oldSchemaParentId": {
            "type": "string"
          },
          "newSchemaParentId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaMissingTypeException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          },
          "expectedSchemaTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SchemaType"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Content",
          "Layer",
          "List",
          "Struct"
        ],
        "enum": [
          "Content",
          "Layer",
          "List",
          "Struct"
        ]
      },
      "SchemaPermissionException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaNoLayerException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaIdException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaInUseException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          },
          "exceptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PictureparkBusinessException"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaNotFoundException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          }
        ]
      },
      "SystemSchemaInvalidModificationException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaFieldRelationSchemaSystemSchemaException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          },
          "fieldId": {
            "type": "string"
          },
          "relationSchemaId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaFieldRelationSchemaTypeUnsupportedException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          },
          "fieldId": {
            "type": "string"
          },
          "relationSchemaId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaMultipleTypesException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          },
          "schemaTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "MissingDisplayPatternForCustomerDefaultLanguageException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          },
          "missingTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DisplayPatternType"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "DisplayPatternType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Thumbnail",
          "List",
          "Detail",
          "Name"
        ],
        "enum": [
          "Thumbnail",
          "List",
          "Detail",
          "Name"
        ]
      },
      "DeleteContentsWithRelationsException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "relationList": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "relations": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "ContentMetadataUpdateManyException": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "failedItemsCount",
          "totalItemsCount"
        ],
        "properties": {
          "failedItemsCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalItemsCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "ContentNotFoundException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "contentIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          }
        ]
      },
      "ContentLayerInvalidException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "contentId": {
            "type": "string"
          },
          "layerIds": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "ContentFileReplaceTypeMismatchException": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "originalContentType",
          "newContentType"
        ],
        "properties": {
          "contentId": {
            "type": "string"
          },
          "originalContentType": {
            "$ref": "#/components/schemas/ContentType"
          },
          "newContentType": {
            "$ref": "#/components/schemas/ContentType"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "ContentType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Unknown",
          "Bitmap",
          "VectorGraphic",
          "RawImage",
          "InterchangeDocument",
          "WordProcessingDocument",
          "TextDocument",
          "DesktopPublishingDocument",
          "Presentation",
          "Spreadsheet",
          "Archive",
          "Audio",
          "Video",
          "Font",
          "Multimedia",
          "Application",
          "SourceCode",
          "Database",
          "Cad",
          "Model3d",
          "ContentItem"
        ],
        "enum": [
          "Unknown",
          "Bitmap",
          "VectorGraphic",
          "RawImage",
          "InterchangeDocument",
          "WordProcessingDocument",
          "TextDocument",
          "DesktopPublishingDocument",
          "Presentation",
          "Spreadsheet",
          "Archive",
          "Audio",
          "Video",
          "Font",
          "Multimedia",
          "Application",
          "SourceCode",
          "Database",
          "Cad",
          "Model3d",
          "ContentItem"
        ]
      },
      "BusinessProcessWaitTimeoutException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "businessProcessId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkTimeoutException"
          }
        ]
      },
      "BusinessProcessEngineRequestException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "businessProcessId": {
            "type": "string"
          },
          "engineError": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "BusinessProcessNotFoundException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "businessProcessId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          }
        ]
      },
      "BusinessProcessDefinitionNotFoundException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "processDefinitionId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          }
        ]
      },
      "BusinessProcessDefinitionCreateException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "processDefinitionIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "SchemaFieldImportMismatchException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          },
          "importingFieldIds": {
            "type": "string"
          },
          "existingFieldIds": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaFieldImportRelatedSchemaMismatchException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          },
          "fieldId": {
            "type": "string"
          },
          "importingRelatedSchemaId": {
            "type": "string"
          },
          "existingRelatedSchemaId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SchemaFieldImportTypeMismatchException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaId": {
            "type": "string"
          },
          "fieldId": {
            "type": "string"
          },
          "importingFieldType": {
            "type": "string"
          },
          "existingFieldType": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "SnapshotTimeoutException": {
        "type": "object",
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkTimeoutException"
          }
        ]
      },
      "SnapshotFailedException": {
        "type": "object",
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "AddMetadataLanguageTimeoutException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "environmentProcessId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkTimeoutException"
          }
        ]
      },
      "EnvironmentProcessAlreadyRunningException": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "environmentProcessType"
        ],
        "properties": {
          "environmentProcessType": {
            "$ref": "#/components/schemas/EnvironmentProcessType"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "EnvironmentProcessType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "AddMetadataLanguage",
          "CustomerUpdate",
          "EnvironmentUpdate"
        ],
        "enum": [
          "AddMetadataLanguage",
          "CustomerUpdate",
          "EnvironmentUpdate"
        ]
      },
      "EnvironmentProcessNotFoundException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "environmentProcessId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          }
        ]
      },
      "EnvironmentProcessWaitTimeoutException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "environmentProcessId": {
            "type": "string"
          },
          "waitedLifecycles": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkTimeoutException"
          }
        ]
      },
      "NoTermsOfServiceDefinedException": {
        "type": "object",
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          }
        ]
      },
      "AtLeastOneActiveTermsOfServiceMustExistException": {
        "type": "object",
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "ForbiddenHtmlElementsUsedException": {
        "type": "object",
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          }
        ]
      },
      "BusinessProcessStateNotHitException": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "businessProcessId": {
            "type": "string"
          },
          "expected": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "actual": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkTimeoutException"
          }
        ]
      },
      "BusinessProcessLifeCycleNotHitException": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "actual"
        ],
        "properties": {
          "businessProcessId": {
            "type": "string"
          },
          "expected": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BusinessProcessLifeCycle"
            }
          },
          "actual": {
            "$ref": "#/components/schemas/BusinessProcessLifeCycle"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkTimeoutException"
          }
        ]
      },
      "SnapshotRepositoryCustomerCreateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customerAlias": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/SnapshotRepositoryBaseCreateRequest"
          }
        ]
      },
      "SnapshotRepositoryBaseCreateRequest": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "startTime"
        ],
        "properties": {
          "repositoryName": {
            "type": "string"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SnapshotRepository": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "entityType",
          "isArchived"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "entityId": {
            "type": "string"
          },
          "entityType": {
            "$ref": "#/components/schemas/BackupEntityType"
          },
          "isArchived": {
            "type": "boolean"
          }
        }
      },
      "BackupEntityType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Enviroment",
          "Customer"
        ],
        "enum": [
          "Enviroment",
          "Customer"
        ]
      },
      "SnapshotCustomerCreateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customerAlias": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/SnapshotBaseCreateRequest"
          }
        ]
      },
      "SnapshotBaseCreateRequest": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "snapshotInactive",
          "reason",
          "timestamp"
        ],
        "properties": {
          "snapshotName": {
            "type": "string",
            "description": "The SnapshotName. Must be unique.\nThe name usually will be enriched with Reason, ContractVersion and DateTime information."
          },
          "repositoryName": {
            "type": "string",
            "description": "The Repository in which the snapshot will be created."
          },
          "indices": {
            "type": "array",
            "description": "The Indices being part of the snapshot.",
            "items": {
              "type": "string"
            }
          },
          "snapshotInactive": {
            "type": "boolean",
            "description": "Snapshot also if the entity is inactive."
          },
          "reason": {
            "description": "The snapshot backup reason will be added to the snapshot name.",
            "allOf": [
              {
                "$ref": "#/components/schemas/BackupReason"
              }
            ]
          },
          "timestamp": {
            "type": "string",
            "description": "Timestamp when creating the requst (utc). If there is a more recent snapshot in the repository, it will keep/return the latest one,\ninstead of creating a new one.",
            "format": "date-time"
          },
          "tokenId": {
            "type": "string"
          }
        }
      },
      "BackupReason": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Custom",
          "Update",
          "Deletion"
        ],
        "enum": [
          "Custom",
          "Update",
          "Deletion"
        ]
      },
      "SnapshotEnqueueResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tokenId": {
            "type": "string"
          }
        }
      },
      "SnapshotCustomerRestoreRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customerAlias": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/SnapshotBaseRestoreRequest"
          }
        ]
      },
      "SnapshotBaseRestoreRequest": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "snapshotName": {
            "type": "string"
          },
          "repositoryName": {
            "type": "string"
          },
          "indices": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SnapshotRestore": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "restoreDate"
        ],
        "properties": {
          "restoreDate": {
            "type": "string",
            "format": "date-time"
          },
          "repositoryName": {
            "type": "string"
          },
          "snapshotName": {
            "type": "string"
          },
          "indices": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SnapshotRepositoryEnvironmentCreateRequest": {
        "type": "object",
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/SnapshotRepositoryBaseCreateRequest"
          }
        ]
      },
      "SnapshotEnvironmentCreateRequest": {
        "type": "object",
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/SnapshotBaseCreateRequest"
          }
        ]
      },
      "SnapshotEnvironmentRestoreRequest": {
        "type": "object",
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/SnapshotBaseRestoreRequest"
          }
        ]
      },
      "SnapshotCustomerSearchRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "start",
          "limit"
        ],
        "properties": {
          "searchString": {
            "type": "string"
          },
          "start": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "repositoryNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "customerAlias": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          }
        }
      },
      "SnapshotCustomerSearchResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "elapsedMilliseconds"
        ],
        "properties": {
          "elapsedMilliseconds": {
            "type": "integer",
            "format": "int64"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResultOfSnapshot"
          }
        ]
      },
      "BaseResultOfSnapshot": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalResults",
          "results"
        ],
        "properties": {
          "totalResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "minLength": 1,
            "items": {
              "$ref": "#/components/schemas/Snapshot"
            }
          },
          "pageToken": {
            "type": "string"
          },
          "queryDebugInformation": {
            "$ref": "#/components/schemas/QueryDebugInformation"
          }
        }
      },
      "Snapshot": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "durationInMilliseconds",
          "endTime",
          "endTimeInMilliseconds",
          "repositoryStartTime",
          "repositoryIsArchived",
          "startTime",
          "startTimeInMilliseconds",
          "entityType",
          "restoreDate"
        ],
        "properties": {
          "durationInMilliseconds": {
            "type": "integer",
            "description": "The snapshot creation DurationInMilliseconds.",
            "format": "int64"
          },
          "endTime": {
            "type": "string",
            "description": "The snapshot EndTime.",
            "format": "date-time"
          },
          "endTimeInMilliseconds": {
            "type": "integer",
            "description": "The snapshot EndTimeInMilliseconds.",
            "format": "int64"
          },
          "failures": {
            "type": "array",
            "description": "The snapshot elastic search shard Falures.",
            "items": {
              "$ref": "#/components/schemas/SnapshotShardFailure"
            }
          },
          "indices": {
            "type": "array",
            "description": "The snapshot Indices.",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "description": "The snapshot Name."
          },
          "repositoryName": {
            "type": "string",
            "description": "The repository name."
          },
          "repositoryStartTime": {
            "type": "string",
            "description": "The repository start time.",
            "format": "date-time"
          },
          "repositoryIsArchived": {
            "type": "boolean",
            "description": "Is the repository already archived?"
          },
          "startTime": {
            "type": "string",
            "description": "The snapshot StartTime.",
            "format": "date-time"
          },
          "startTimeInMilliseconds": {
            "type": "integer",
            "description": "The snapshot StartTimeInMilliseconds.",
            "format": "int64"
          },
          "state": {
            "type": "string",
            "description": "The snapshot State."
          },
          "entityId": {
            "type": "string"
          },
          "entityType": {
            "$ref": "#/components/schemas/BackupEntityType"
          },
          "restoreDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SnapshotShardFailure": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "index": {
            "type": "string",
            "description": "The Index having the shard failure."
          },
          "nodeId": {
            "type": "string",
            "description": "The elastic search NodeId."
          },
          "reason": {
            "type": "string",
            "description": "The elastic serach shard failure Reason."
          },
          "shardId": {
            "type": "string",
            "description": "The failing elastic search ShardId."
          },
          "status": {
            "type": "string",
            "description": "The snapshot failure status."
          }
        }
      },
      "QueryDebugInformation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "general": {
            "type": "string"
          },
          "auditTrail": {
            "type": "string"
          },
          "request": {},
          "response": {}
        }
      },
      "SnapshotRepositoryCustomerSearchRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customerId": {
            "type": "string"
          },
          "customerAlias": {
            "type": "string"
          }
        }
      },
      "SnapshotRepositorySearchResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalResults"
        ],
        "properties": {
          "totalResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SnapshotRepository"
            }
          }
        }
      },
      "SnapshotRepositoryEnvironmentSearchRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "environmentId": {
            "type": "string"
          }
        }
      },
      "SnapshotCustomerCloneRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "snapshotName": {
            "type": "string"
          },
          "repositoryName": {
            "type": "string"
          },
          "sourceCustomerAlias": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "customerAlias": {
            "type": "string"
          },
          "customerHosts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "corsAllowedHosts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "storagePath": {
            "type": "string"
          },
          "baseUrl": {
            "type": "string"
          },
          "redirectUri": {
            "type": "string"
          }
        }
      },
      "Customer": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "lifeCycle"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "deactivationComment": {
            "type": "string"
          },
          "customerHosts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "mainCatalog": {
            "type": "string"
          },
          "contractVersion": {
            "type": "string"
          },
          "storagePath": {
            "type": "string"
          },
          "watermarkPath": {
            "type": "string"
          },
          "logoPath": {
            "type": "string"
          },
          "lifeCycle": {
            "$ref": "#/components/schemas/LifeCycle"
          }
        }
      },
      "LifeCycle": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Draft",
          "Active",
          "Inactive",
          "Deleted"
        ],
        "enum": [
          "Draft",
          "Active",
          "Inactive",
          "Deleted"
        ]
      },
      "SnapshotsCleanupResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "cleanupTime"
        ],
        "properties": {
          "repositories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cleanupTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CustomerExportRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "keepRepository"
        ],
        "properties": {
          "customerAlias": {
            "type": "string"
          },
          "keepRepository": {
            "type": "boolean"
          }
        }
      },
      "CustomerExportResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customerId": {
            "type": "string"
          },
          "repositoryName": {
            "type": "string"
          },
          "snapshotName": {
            "type": "string"
          }
        }
      },
      "ContentBackupCompleteByOutputRequest": {
        "type": "object",
        "description": "Request to mark a backup of an Output completed",
        "additionalProperties": false,
        "properties": {
          "customerId": {
            "type": "string"
          },
          "outputId": {
            "type": "string"
          },
          "contentId": {
            "type": "string"
          },
          "businessProcessId": {
            "type": "string",
            "description": "Id of the business process tracking the output, if any (i.e. in case of ContentBackupRecovery mode)"
          }
        }
      },
      "ContentBackupSearchRequest": {
        "type": "object",
        "description": "Request to search aggregation values for Contents",
        "additionalProperties": false,
        "required": [
          "exclusionTime",
          "limit"
        ],
        "properties": {
          "customerId": {
            "type": "string"
          },
          "exclusionTime": {
            "type": "string",
            "description": "Time span relative to now for which missing backup timestamp is not considered a missing backup",
            "format": "time-span"
          },
          "limit": {
            "type": "integer",
            "description": "Limits the document count of the result set. Defaults to 30.",
            "format": "int32",
            "default": 30
          },
          "pageToken": {
            "type": "string",
            "description": "To get a large amount of data, page token returned from the response can be used to get all data."
          }
        }
      },
      "ContentBackupSearchResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalResults"
        ],
        "properties": {
          "totalResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pageToken": {
            "type": "string"
          }
        }
      },
      "ContentBackupEnableRequest": {
        "type": "object",
        "description": "Request to search aggregation values for Contents",
        "additionalProperties": false,
        "properties": {
          "customerId": {
            "type": "string"
          }
        }
      },
      "ContentBackupDisableRequest": {
        "type": "object",
        "description": "Request to search aggregation values for Contents",
        "additionalProperties": false,
        "properties": {
          "customerId": {
            "type": "string"
          }
        }
      },
      "ContentBackupCancelRecoveryRequest": {
        "type": "object",
        "description": "Request to search aggregation values for Contents",
        "additionalProperties": false,
        "properties": {
          "customerId": {
            "type": "string"
          },
          "businessProcessId": {
            "type": "string"
          }
        }
      },
      "ContentBackupForceCompleteRecoveryRequest": {
        "type": "object",
        "description": "Request to search aggregation values for Contents",
        "additionalProperties": false,
        "properties": {
          "customerId": {
            "type": "string"
          },
          "businessProcessId": {
            "type": "string"
          }
        }
      },
      "CustomerCreateRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "useSsl",
          "enableQueryDetails",
          "elasticSearchNumberOfShards",
          "elasticSearchNumberOfReplicas",
          "rootContentSearchIndexNumberOfShards",
          "rootContentSearchIndexNumberOfReplicas",
          "rootListItemSearchIndexNumberOfShards",
          "rootListItemSearchIndexNumberOfReplicas",
          "indexedFieldThreshold",
          "sortableFieldThreshold",
          "contentRetentionTime",
          "listItemRetentionTime",
          "snapshotRetentionTime",
          "snapshotFullbackupScheduleTime",
          "contentBackupState",
          "apiCallsPerMinute"
        ],
        "properties": {
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          },
          "baseUrl": {
            "type": "string"
          },
          "storagePath": {
            "type": "string"
          },
          "watermarkPath": {
            "type": "string"
          },
          "logoPath": {
            "type": "string"
          },
          "customerHosts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "useSsl": {
            "type": "boolean"
          },
          "enableQueryDetails": {
            "type": "boolean"
          },
          "cdnConfiguration": {
            "$ref": "#/components/schemas/CdnConfigurationBase"
          },
          "supportContactEmailAddress": {
            "type": "string"
          },
          "identityServerProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityServerProvider"
            }
          },
          "serviceProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerServiceProvider"
            }
          },
          "corsAllowedHosts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "elasticSearchNumberOfShards": {
            "type": "integer",
            "format": "int32"
          },
          "elasticSearchNumberOfReplicas": {
            "type": "integer",
            "format": "int32"
          },
          "rootContentSearchIndexNumberOfShards": {
            "type": "integer",
            "format": "int32"
          },
          "rootContentSearchIndexNumberOfReplicas": {
            "type": "integer",
            "format": "int32"
          },
          "rootListItemSearchIndexNumberOfShards": {
            "type": "integer",
            "format": "int32"
          },
          "rootListItemSearchIndexNumberOfReplicas": {
            "type": "integer",
            "format": "int32"
          },
          "indexedFieldThreshold": {
            "type": "integer",
            "format": "int32"
          },
          "sortableFieldThreshold": {
            "type": "integer",
            "format": "int32"
          },
          "noReplyEmailAddress": {
            "type": "string"
          },
          "languageConfiguration": {
            "$ref": "#/components/schemas/LanguageConfiguration"
          },
          "outputFormats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutputFormat"
            }
          },
          "businessProcessEngineConnectionString": {
            "type": "string"
          },
          "contentRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "listItemRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "snapshotRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "snapshotFullbackupScheduleTime": {
            "type": "string",
            "format": "time-span"
          },
          "createTransferBusinessProcess": {
            "type": "string"
          },
          "adminUser": {
            "$ref": "#/components/schemas/User"
          },
          "adminUserPassword": {
            "type": "string"
          },
          "contentBackupState": {
            "$ref": "#/components/schemas/ContentBackupState"
          },
          "apiCallsPerMinute": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CdnConfigurationBase": {
        "type": "object",
        "discriminator": {
          "propertyName": "kind",
          "mapping": {
            "FastlyCdnConfiguration": {
              "$ref": "#/components/schemas/FastlyCdnConfiguration"
            }
          }
        },
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "kind"
        ],
        "properties": {
          "url": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          }
        }
      },
      "FastlyCdnConfiguration": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "apiToken": {
            "type": "string"
          },
          "serviceId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/CdnConfigurationBase"
          }
        ]
      },
      "IdentityServerProvider": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "CustomerServiceProvider": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allowedMessages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerAllowedMessage"
            }
          },
          "allowedCommands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerAllowedCommand"
            }
          },
          "userRoleIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "settings": {
            "type": "string"
          }
        }
      },
      "CustomerAllowedMessage": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "target": {
            "type": "string"
          }
        }
      },
      "CustomerAllowedCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "LanguageConfiguration": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "systemLanguages": {
            "type": "array",
            "description": "A list of languages serving as system languages.",
            "items": {
              "type": "string"
            }
          },
          "metadataLanguages": {
            "type": "array",
            "description": "A list of languages serving as metadata languages.",
            "items": {
              "type": "string"
            }
          },
          "defaultLanguage": {
            "type": "string",
            "description": "The default language. Not the be confused with the metadata fallback language x-default."
          }
        }
      },
      "OutputFormat": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "static",
          "system",
          "dynamic",
          "dataExtraction",
          "temporary",
          "render"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "names": {
            "$ref": "#/components/schemas/TranslatedStringDictionary"
          },
          "static": {
            "type": "boolean"
          },
          "system": {
            "type": "boolean"
          },
          "dynamic": {
            "type": "boolean"
          },
          "dataExtraction": {
            "type": "boolean"
          },
          "temporary": {
            "type": "boolean"
          },
          "sourceOutputFormats": {
            "$ref": "#/components/schemas/SourceOutputFormats"
          },
          "render": {
            "type": "boolean"
          },
          "format": {
            "$ref": "#/components/schemas/FormatBase"
          }
        }
      },
      "TranslatedStringDictionary": {
        "type": "object",
        "description": "A custom dictionary type to distinguish language specific class properties.",
        "additionalProperties": false,
        "allOf": [
          {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        ]
      },
      "SourceOutputFormats": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "image": {
            "type": "string"
          },
          "video": {
            "type": "string"
          },
          "document": {
            "type": "string"
          },
          "audio": {
            "type": "string"
          }
        }
      },
      "FormatBase": {
        "type": "object",
        "discriminator": {
          "propertyName": "kind",
          "mapping": {
            "ImageFormatBase": {
              "$ref": "#/components/schemas/ImageFormatBase"
            },
            "OriginalFormat": {
              "$ref": "#/components/schemas/OriginalFormat"
            },
            "JpegFormat": {
              "$ref": "#/components/schemas/JpegFormat"
            },
            "PngFormat": {
              "$ref": "#/components/schemas/PngFormat"
            },
            "TiffFormat": {
              "$ref": "#/components/schemas/TiffFormat"
            },
            "VideoFormatBase": {
              "$ref": "#/components/schemas/VideoFormatBase"
            },
            "AudioFormatBase": {
              "$ref": "#/components/schemas/AudioFormatBase"
            },
            "Mp4VideoFormat": {
              "$ref": "#/components/schemas/Mp4VideoFormat"
            },
            "VideoPresetFormat": {
              "$ref": "#/components/schemas/VideoPresetFormat"
            },
            "VideoSpriteFormat": {
              "$ref": "#/components/schemas/VideoSpriteFormat"
            },
            "VideoStillFormat": {
              "$ref": "#/components/schemas/VideoStillFormat"
            },
            "AacAudioFormat": {
              "$ref": "#/components/schemas/AacAudioFormat"
            },
            "AudioPresetFormat": {
              "$ref": "#/components/schemas/AudioPresetFormat"
            },
            "AudioStillFormat": {
              "$ref": "#/components/schemas/AudioStillFormat"
            },
            "Mp3AudioFormat": {
              "$ref": "#/components/schemas/Mp3AudioFormat"
            },
            "DocumentFormatBase": {
              "$ref": "#/components/schemas/DocumentFormatBase"
            },
            "DocumentStillFormat": {
              "$ref": "#/components/schemas/DocumentStillFormat"
            },
            "PdfFormat": {
              "$ref": "#/components/schemas/PdfFormat"
            }
          }
        },
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "kind"
        ],
        "properties": {
          "kind": {
            "type": "string"
          }
        }
      },
      "ImageFormatBase": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "colorTransformationIntent",
          "renderFirstFrameOnly",
          "keepClippingPath",
          "cloneExif",
          "cloneIptc",
          "cloneAdobeResources",
          "cloneXmp"
        ],
        "properties": {
          "colorProfile": {
            "$ref": "#/components/schemas/ColorProfile"
          },
          "colorTransformationIntent": {
            "$ref": "#/components/schemas/ColorTransformationIntent"
          },
          "horizontalResolution": {
            "type": "number",
            "format": "double"
          },
          "verticalResolution": {
            "type": "number",
            "format": "double"
          },
          "renderFirstFrameOnly": {
            "type": "boolean"
          },
          "keepClippingPath": {
            "type": "boolean"
          },
          "cloneExif": {
            "type": "boolean"
          },
          "cloneIptc": {
            "type": "boolean"
          },
          "cloneAdobeResources": {
            "type": "boolean"
          },
          "cloneXmp": {
            "type": "boolean"
          },
          "resizeAction": {
            "$ref": "#/components/schemas/ResizeAction"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageActionBase"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/FormatBase"
          }
        ]
      },
      "ColorProfile": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "AdobeRgb1998",
          "AppleRgb",
          "ColorMatchRgb",
          "EciRgbV1",
          "EciRgbV2",
          "Srgb",
          "SrgbColorSpaceProfile",
          "EuropeIsoCoatedFogra27",
          "EuroscaleCoated",
          "EuroscaleUncoated",
          "IsoCoated",
          "IsoCoatedEciV2",
          "JapanColor2001Coated",
          "JapanColor2001Uncoated",
          "JapanColor2002Newspaper",
          "JapanWebCoated",
          "UsSheetfedCoated",
          "UsSheetfedUncoated",
          "UsWebCoatedSwop",
          "UsWebUncoated",
          "IsoCoatedV2Grey1cBas",
          "IsoCoated300EciV2",
          "CoatedFogra27",
          "CoatedFogra39",
          "UncoatedFogra29",
          "WebCoatedFogra28",
          "WebCoatedSwop2006Grade3",
          "WebCoatedSwop2006Grade5",
          "Isonewspaper26v4",
          "Isonewspaper26v4Grey"
        ],
        "enum": [
          "AdobeRgb1998",
          "AppleRgb",
          "ColorMatchRgb",
          "EciRgbV1",
          "EciRgbV2",
          "Srgb",
          "SrgbColorSpaceProfile",
          "EuropeIsoCoatedFogra27",
          "EuroscaleCoated",
          "EuroscaleUncoated",
          "IsoCoated",
          "IsoCoatedEciV2",
          "JapanColor2001Coated",
          "JapanColor2001Uncoated",
          "JapanColor2002Newspaper",
          "JapanWebCoated",
          "UsSheetfedCoated",
          "UsSheetfedUncoated",
          "UsWebCoatedSwop",
          "UsWebUncoated",
          "IsoCoatedV2Grey1cBas",
          "IsoCoated300EciV2",
          "CoatedFogra27",
          "CoatedFogra39",
          "UncoatedFogra29",
          "WebCoatedFogra28",
          "WebCoatedSwop2006Grade3",
          "WebCoatedSwop2006Grade5",
          "Isonewspaper26v4",
          "Isonewspaper26v4Grey"
        ]
      },
      "ColorTransformationIntent": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "RelativeColorimetricBpc",
          "AbsoluteColorimetric",
          "Perceptual",
          "RelativeColorimetric",
          "Saturation"
        ],
        "enum": [
          "RelativeColorimetricBpc",
          "AbsoluteColorimetric",
          "Perceptual",
          "RelativeColorimetric",
          "Saturation"
        ]
      },
      "ResizeAction": {
        "type": "object",
        "description": "Does not implement the IImageAction interface. The ResizeAction is directly exposed within ImageFormat.",
        "additionalProperties": false,
        "required": [
          "width",
          "height",
          "resizeMode"
        ],
        "properties": {
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "resizeMode": {
            "$ref": "#/components/schemas/ResizeMode"
          }
        }
      },
      "ResizeMode": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Fit",
          "Shrink",
          "Resize"
        ],
        "enum": [
          "Fit",
          "Shrink",
          "Resize"
        ]
      },
      "ImageActionBase": {
        "type": "object",
        "discriminator": {
          "propertyName": "kind",
          "mapping": {
            "AlphaHandlingAction": {
              "$ref": "#/components/schemas/AlphaHandlingAction"
            },
            "CropAction": {
              "$ref": "#/components/schemas/CropAction"
            },
            "UnsharpenMaskAction": {
              "$ref": "#/components/schemas/UnsharpenMaskAction"
            },
            "WatermarkAction": {
              "$ref": "#/components/schemas/WatermarkAction"
            }
          }
        },
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "kind"
        ],
        "properties": {
          "kind": {
            "type": "string"
          }
        }
      },
      "AlphaHandlingAction": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "alphaHandling"
        ],
        "properties": {
          "alphaHandling": {
            "$ref": "#/components/schemas/AlphaHandling"
          },
          "replacementRgbColorHexCode": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ImageActionBase"
          }
        ]
      },
      "AlphaHandling": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "DiscardAlpha",
          "ReplaceAlpha",
          "ReplaceInvertedAlpha"
        ],
        "enum": [
          "DiscardAlpha",
          "ReplaceAlpha",
          "ReplaceInvertedAlpha"
        ]
      },
      "CropAction": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "x",
          "y",
          "width",
          "height"
        ],
        "properties": {
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ImageActionBase"
          }
        ]
      },
      "UnsharpenMaskAction": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "amount",
          "radius",
          "threshold"
        ],
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          },
          "radius": {
            "type": "number",
            "format": "double"
          },
          "threshold": {
            "type": "number",
            "format": "double"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ImageActionBase"
          }
        ]
      },
      "WatermarkAction": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "opacity",
          "widthRatio",
          "heightRatio"
        ],
        "properties": {
          "watermarkFilePath": {
            "type": "string"
          },
          "watermarkText": {
            "type": "string"
          },
          "marginLeft": {
            "type": "integer",
            "format": "int32"
          },
          "marginTop": {
            "type": "integer",
            "format": "int32"
          },
          "marginRight": {
            "type": "integer",
            "format": "int32"
          },
          "marginBottom": {
            "type": "integer",
            "format": "int32"
          },
          "opacity": {
            "type": "number",
            "format": "double"
          },
          "widthRatio": {
            "type": "number",
            "format": "double"
          },
          "heightRatio": {
            "type": "number",
            "format": "double"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ImageActionBase"
          }
        ]
      },
      "OriginalFormat": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "defaultOutputExtension": {
            "type": "string"
          },
          "allowedOutputExtensions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/FormatBase"
          }
        ]
      },
      "JpegFormat": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "quality",
          "isProgressive",
          "chromaSubsamplingEnabled"
        ],
        "properties": {
          "quality": {
            "type": "integer",
            "format": "int32"
          },
          "isProgressive": {
            "type": "boolean"
          },
          "chromaSubsamplingEnabled": {
            "type": "boolean"
          },
          "defaultOutputExtension": {
            "type": "string"
          },
          "allowedOutputExtensions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ImageFormatBase"
          }
        ]
      },
      "PngFormat": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "interlaced"
        ],
        "properties": {
          "interlaced": {
            "type": "boolean"
          },
          "defaultOutputExtension": {
            "type": "string"
          },
          "allowedOutputExtensions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ImageFormatBase"
          }
        ]
      },
      "TiffFormat": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "alphaPremultiplied",
          "compressionType",
          "includeUnspecifiedTiffExtraChannels"
        ],
        "properties": {
          "alphaPremultiplied": {
            "type": "boolean"
          },
          "compressionType": {
            "$ref": "#/components/schemas/CompressionType"
          },
          "includeUnspecifiedTiffExtraChannels": {
            "type": "boolean"
          },
          "defaultOutputExtension": {
            "type": "string"
          },
          "allowedOutputExtensions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/ImageFormatBase"
          }
        ]
      },
      "CompressionType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "None",
          "Lzw",
          "Rle",
          "Zip"
        ],
        "enum": [
          "None",
          "Lzw",
          "Rle",
          "Zip"
        ]
      },
      "VideoFormatBase": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/FormatBase"
          }
        ]
      },
      "Mp4VideoFormat": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "preset"
        ],
        "properties": {
          "resizeAction": {
            "$ref": "#/components/schemas/ResizeAction2"
          },
          "audioCodec": {
            "description": "Gets or sets the encoding audio codec.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AudioFormatBase"
              }
            ]
          },
          "preset": {
            "description": "Gets or sets the encoding codec preset.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Preset"
              }
            ]
          },
          "defaultOutputExtension": {
            "type": "string"
          },
          "allowedOutputExtensions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/VideoFormatBase"
          }
        ]
      },
      "ResizeAction2": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "width",
          "height",
          "resizeMode"
        ],
        "properties": {
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "resizeMode": {
            "$ref": "#/components/schemas/ResizeMode"
          }
        }
      },
      "AudioFormatBase": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/FormatBase"
          }
        ]
      },
      "Preset": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "ultrafast",
          "superfast",
          "veryfast",
          "faster",
          "fast",
          "medium",
          "slow",
          "slower"
        ],
        "enum": [
          "ultrafast",
          "superfast",
          "veryfast",
          "faster",
          "fast",
          "medium",
          "slow",
          "slower"
        ]
      },
      "VideoPresetFormat": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "videoPresetId"
        ],
        "properties": {
          "videoPresetId": {
            "type": "string",
            "description": "Id of Squeeze preset.",
            "format": "guid"
          },
          "customerId": {
            "type": "string"
          },
          "defaultOutputExtension": {
            "type": "string"
          },
          "allowedOutputExtensions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/VideoFormatBase"
          }
        ]
      },
      "VideoSpriteFormat": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "maxNumberOfSprites",
          "quality"
        ],
        "properties": {
          "spriteResizeAction": {
            "$ref": "#/components/schemas/ResizeAction2"
          },
          "maxNumberOfSprites": {
            "type": "integer",
            "format": "int32"
          },
          "quality": {
            "type": "integer",
            "format": "int32"
          },
          "defaultOutputExtension": {
            "type": "string"
          },
          "allowedOutputExtensions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/VideoFormatBase"
          }
        ]
      },
      "VideoStillFormat": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "positionInSeconds"
        ],
        "properties": {
          "defaultOutputExtension": {
            "type": "string"
          },
          "allowedOutputExtensions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "positionInSeconds": {
            "type": "integer",
            "format": "int32"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/VideoFormatBase"
          }
        ]
      },
      "AacAudioFormat": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "profile",
          "coder"
        ],
        "properties": {
          "defaultOutputExtension": {
            "type": "string"
          },
          "allowedOutputExtensions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "profile": {
            "description": "Gets or sets the encoding profile.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Profile"
              }
            ]
          },
          "coder": {
            "description": "Gets or sets the encoding coder.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Coder"
              }
            ]
          },
          "bitrate": {
            "type": "integer",
            "description": "Gets or sets the bitrate of the encoding.",
            "format": "int32"
          },
          "variableBitRate": {
            "type": "integer",
            "description": "Gets or sets the encoding variable bit rate (VBR) - 1 is lowest quality and 5 is highest quality.",
            "format": "int32"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/AudioFormatBase"
          }
        ]
      },
      "Profile": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "aac_low",
          "mpeg2_aac_low",
          "aac_ltp",
          "aac_main"
        ],
        "enum": [
          "aac_low",
          "mpeg2_aac_low",
          "aac_ltp",
          "aac_main"
        ]
      },
      "Coder": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "twoloop",
          "anmr",
          "fast"
        ],
        "enum": [
          "twoloop",
          "anmr",
          "fast"
        ]
      },
      "AudioPresetFormat": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "audioPresetId"
        ],
        "properties": {
          "audioPresetId": {
            "type": "string",
            "description": "Id of Squeeze preset.",
            "format": "guid"
          },
          "defaultOutputExtension": {
            "type": "string"
          },
          "allowedOutputExtensions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/AudioFormatBase"
          }
        ]
      },
      "AudioStillFormat": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "defaultOutputExtension": {
            "type": "string"
          },
          "allowedOutputExtensions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/AudioFormatBase"
          }
        ]
      },
      "Mp3AudioFormat": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "defaultOutputExtension": {
            "type": "string"
          },
          "allowedOutputExtensions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "bitrate": {
            "type": "integer",
            "description": "Gets or sets the encoding bitrate.",
            "format": "int32"
          },
          "quality": {
            "type": "integer",
            "description": "Gets or sets the encoding quality.\nValues can be set it range of 0 to 9, where a lower value is a higher quality.",
            "format": "int32"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/AudioFormatBase"
          }
        ]
      },
      "DocumentFormatBase": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/FormatBase"
          }
        ]
      },
      "DocumentStillFormat": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "defaultOutputExtension": {
            "type": "string"
          },
          "allowedOutputExtensions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DocumentFormatBase"
          }
        ]
      },
      "PdfFormat": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "jpegQuality",
          "fastWebView",
          "reduceFileSize",
          "extractFullText"
        ],
        "properties": {
          "jpegQuality": {
            "type": "integer",
            "description": "JpegQuality parameter value must be between 0 and 100.",
            "format": "int32"
          },
          "fastWebView": {
            "type": "boolean"
          },
          "reduceFileSize": {
            "type": "boolean"
          },
          "defaultOutputExtension": {
            "type": "string"
          },
          "allowedOutputExtensions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "extractFullText": {
            "type": "boolean"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/DocumentFormatBase"
          }
        ]
      },
      "User": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "emailAddress"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "User's Picturepark ID."
          },
          "firstName": {
            "type": "string",
            "description": "User's first name."
          },
          "lastName": {
            "type": "string",
            "description": "User's last name."
          },
          "emailAddress": {
            "type": "string",
            "description": "Email address of the user (doubles as username).",
            "minLength": 1
          }
        }
      },
      "ContentBackupState": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Disabled",
          "Recovery",
          "Enabled"
        ],
        "enum": [
          "Disabled",
          "Recovery",
          "Enabled"
        ]
      },
      "CustomerConfiguration": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "useSsl",
          "enableQueryDetails",
          "elasticSearchNumberOfShards",
          "elasticSearchNumberOfReplicas",
          "elasticSearchNumberOfRoutingShards",
          "rootContentSearchIndexNumberOfShards",
          "rootContentSearchIndexNumberOfReplicas",
          "rootContentSearchIndexNumberOfRoutingShards",
          "rootListItemSearchIndexNumberOfShards",
          "rootListItemSearchIndexNumberOfReplicas",
          "rootListItemSearchIndexNumberOfRoutingShards",
          "indexedFieldThreshold",
          "sortableFieldThreshold",
          "redisDatabaseIndex",
          "lifeCycle",
          "contentRetentionTime",
          "listItemRetentionTime",
          "snapshotRetentionTime",
          "snapshotFullbackupScheduleTime",
          "contentBackupState",
          "apiCallsPerMinute"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "lifelineId": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "mainCatalog": {
            "type": "string"
          },
          "userCatalog": {
            "type": "string"
          },
          "mailCatalog": {
            "type": "string"
          },
          "transferCatalog": {
            "type": "string"
          },
          "shareCatalog": {
            "type": "string"
          },
          "outputCatalog": {
            "type": "string"
          },
          "outputFormatCatalog": {
            "type": "string"
          },
          "channelCatalog": {
            "type": "string"
          },
          "notificationCatalog": {
            "type": "string"
          },
          "businessProcessCatalog": {
            "type": "string"
          },
          "listItemCatalog": {
            "type": "string"
          },
          "contentCatalog": {
            "type": "string"
          },
          "displayValueCatalog": {
            "type": "string"
          },
          "tokenCatalog": {
            "type": "string"
          },
          "documentHistoryCatalog": {
            "type": "string"
          },
          "liveStreamCatalog": {
            "type": "string"
          },
          "cacheCatalog": {
            "type": "string"
          },
          "schemaCatalog": {
            "type": "string"
          },
          "referenceCatalog": {
            "type": "string"
          },
          "watermarkPath": {
            "type": "string"
          },
          "logoPath": {
            "type": "string"
          },
          "storagePath": {
            "type": "string"
          },
          "contractVersion": {
            "type": "string"
          },
          "customerHosts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "useSsl": {
            "type": "boolean"
          },
          "enableQueryDetails": {
            "type": "boolean"
          },
          "serviceProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerServiceProviderConfiguration"
            }
          },
          "supportContactEmailAddress": {
            "type": "string"
          },
          "baseUrl": {
            "type": "string"
          },
          "cdnConfiguration": {
            "$ref": "#/components/schemas/CdnConfigurationBase"
          },
          "elasticSearchNumberOfShards": {
            "type": "integer",
            "format": "int32"
          },
          "elasticSearchNumberOfReplicas": {
            "type": "integer",
            "format": "int32"
          },
          "elasticSearchNumberOfRoutingShards": {
            "type": "integer",
            "format": "int32"
          },
          "rootContentSearchIndexNumberOfShards": {
            "type": "integer",
            "format": "int32"
          },
          "rootContentSearchIndexNumberOfReplicas": {
            "type": "integer",
            "format": "int32"
          },
          "rootContentSearchIndexNumberOfRoutingShards": {
            "type": "integer",
            "format": "int32"
          },
          "rootListItemSearchIndexNumberOfShards": {
            "type": "integer",
            "format": "int32"
          },
          "rootListItemSearchIndexNumberOfReplicas": {
            "type": "integer",
            "format": "int32"
          },
          "rootListItemSearchIndexNumberOfRoutingShards": {
            "type": "integer",
            "format": "int32"
          },
          "indexedFieldThreshold": {
            "type": "integer",
            "format": "int32"
          },
          "sortableFieldThreshold": {
            "type": "integer",
            "format": "int32"
          },
          "corsAllowedHosts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "noReplyEmailAddress": {
            "type": "string"
          },
          "languageConfiguration": {
            "$ref": "#/components/schemas/LanguageConfiguration"
          },
          "businessProcessEngineConnectionString": {
            "type": "string"
          },
          "createTransferBusinessProcess": {
            "type": "string"
          },
          "redisDatabaseIndex": {
            "type": "integer",
            "format": "int32"
          },
          "lifeCycle": {
            "$ref": "#/components/schemas/LifeCycle"
          },
          "contentRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "listItemRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "snapshotRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "snapshotFullbackupScheduleTime": {
            "type": "string",
            "format": "time-span"
          },
          "deactivationMessage": {
            "$ref": "#/components/schemas/TranslatedStringDictionary"
          },
          "superAdminUserId": {
            "type": "string"
          },
          "serviceAdminUserId": {
            "type": "string"
          },
          "contentBackupState": {
            "$ref": "#/components/schemas/ContentBackupState"
          },
          "apiCallsPerMinute": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CustomerServiceProviderConfiguration": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "serviceProviderId": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "userRoleIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "settings": {
            "type": "string"
          }
        }
      },
      "CustomerUpdateRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "lifeCycle",
          "backupEnabled",
          "contentRetentionTime",
          "listItemRetentionTime",
          "snapshotRetentionTime",
          "snapshotFullbackupScheduleTime",
          "useSsl",
          "enableQueryDetails",
          "apiCallsPerMinute"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "lifeCycle": {
            "$ref": "#/components/schemas/LifeCycle"
          },
          "deactivationMessage": {
            "$ref": "#/components/schemas/TranslatedStringDictionary"
          },
          "backupEnabled": {
            "type": "boolean"
          },
          "customerHosts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contentRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "listItemRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "snapshotRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "snapshotFullbackupScheduleTime": {
            "type": "string",
            "format": "time-span"
          },
          "useSsl": {
            "type": "boolean"
          },
          "enableQueryDetails": {
            "type": "boolean"
          },
          "cdnConfiguration": {
            "$ref": "#/components/schemas/CdnConfigurationBase"
          },
          "baseUrl": {
            "type": "string"
          },
          "watermarkPath": {
            "type": "string"
          },
          "logoPath": {
            "type": "string"
          },
          "supportContactEmailAddress": {
            "type": "string"
          },
          "corsAllowedHosts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "noReplyEmailAddress": {
            "type": "string"
          },
          "indexedFieldThreshold": {
            "type": "integer",
            "format": "int32"
          },
          "sortableFieldThreshold": {
            "type": "integer",
            "format": "int32"
          },
          "apiCallsPerMinute": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CustomerSearchResult": {
        "type": "object",
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResultOfCustomer"
          }
        ]
      },
      "BaseResultOfCustomer": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalResults",
          "results"
        ],
        "properties": {
          "totalResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "minLength": 1,
            "items": {
              "$ref": "#/components/schemas/Customer"
            }
          },
          "pageToken": {
            "type": "string"
          },
          "queryDebugInformation": {
            "$ref": "#/components/schemas/QueryDebugInformation"
          }
        }
      },
      "CustomerSearchRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "start",
          "limit"
        ],
        "properties": {
          "searchString": {
            "type": "string"
          },
          "start": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "filter": {
            "$ref": "#/components/schemas/FilterBase"
          }
        }
      },
      "FilterBase": {
        "type": "object",
        "discriminator": {
          "propertyName": "kind",
          "mapping": {
            "AndFilter": {
              "$ref": "#/components/schemas/AndFilter"
            },
            "OrFilter": {
              "$ref": "#/components/schemas/OrFilter"
            },
            "NotFilter": {
              "$ref": "#/components/schemas/NotFilter"
            },
            "DateRangeFilter": {
              "$ref": "#/components/schemas/DateRangeFilter"
            },
            "ExistsFilter": {
              "$ref": "#/components/schemas/ExistsFilter"
            },
            "GeoBoundingBoxFilter": {
              "$ref": "#/components/schemas/GeoBoundingBoxFilter"
            },
            "GeoDistanceFilter": {
              "$ref": "#/components/schemas/GeoDistanceFilter"
            },
            "NestedFilter": {
              "$ref": "#/components/schemas/NestedFilter"
            },
            "NumericRangeFilter": {
              "$ref": "#/components/schemas/NumericRangeFilter"
            },
            "PrefixFilter": {
              "$ref": "#/components/schemas/PrefixFilter"
            },
            "TermFilter": {
              "$ref": "#/components/schemas/TermFilter"
            },
            "TermsFilter": {
              "$ref": "#/components/schemas/TermsFilter"
            },
            "AggregationFilter": {
              "$ref": "#/components/schemas/AggregationFilter"
            },
            "ChildFilter": {
              "$ref": "#/components/schemas/ChildFilter"
            },
            "ParentFilter": {
              "$ref": "#/components/schemas/ParentFilter"
            }
          }
        },
        "description": "The FilterBase is the base class for all filters.",
        "additionalProperties": false,
        "required": [
          "kind"
        ],
        "properties": {
          "kind": {
            "type": "string"
          }
        }
      },
      "AndFilter": {
        "type": "object",
        "description": "The AndFilter&gt; is a compound filter and returns documents that match all of the specified filters.",
        "additionalProperties": false,
        "properties": {
          "filters": {
            "type": "array",
            "description": "Accepts all filters.",
            "items": {
              "$ref": "#/components/schemas/FilterBase"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBase"
          }
        ]
      },
      "OrFilter": {
        "type": "object",
        "description": "The OrFilter is a compound filter and returns documents that match any of the specified filters.",
        "additionalProperties": false,
        "properties": {
          "filters": {
            "type": "array",
            "description": "Accepts all filters.",
            "items": {
              "$ref": "#/components/schemas/FilterBase"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBase"
          }
        ]
      },
      "NotFilter": {
        "type": "object",
        "description": "The NotFilter is a compound filter and returns documents that do not match the specified filter.",
        "additionalProperties": false,
        "properties": {
          "filter": {
            "description": "Limits the result set.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterBase"
              }
            ]
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBase"
          }
        ]
      },
      "DateRangeFilter": {
        "type": "object",
        "description": "The DateRangeFilter returns documents with fields that have date values within a certain range.",
        "additionalProperties": false,
        "properties": {
          "field": {
            "type": "string",
            "description": "The elastic search index field to execute the filter on."
          },
          "range": {
            "description": "The date range. Supported pattern: now(+-)(int)(YMDHm).",
            "allOf": [
              {
                "$ref": "#/components/schemas/DateRange"
              }
            ]
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBase"
          }
        ]
      },
      "DateRange": {
        "type": "object",
        "description": "The date range class used in aggregators and filters.",
        "additionalProperties": false,
        "properties": {
          "names": {
            "description": "Tranlsated range names.",
            "allOf": [
              {
                "$ref": "#/components/schemas/TranslatedStringDictionary"
              }
            ]
          },
          "from": {
            "type": "string",
            "description": "The from value can be a datetime string or a pattern now(+-)(int)(YMDHm)."
          },
          "to": {
            "type": "string",
            "description": "The to value can be a datetime string or a pattern now(+-)(int)(YMDHm)."
          }
        }
      },
      "ExistsFilter": {
        "type": "object",
        "description": "The ExistsFilter returns documents that have at least one non-null value in the original field.",
        "additionalProperties": false,
        "properties": {
          "field": {
            "type": "string",
            "description": "The elastic search index field to execute the filter on."
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBase"
          }
        ]
      },
      "GeoBoundingBoxFilter": {
        "type": "object",
        "description": "The GeoBoundingBoxFilter returns documents that are found based on a point location using a bounding box.",
        "additionalProperties": false,
        "properties": {
          "field": {
            "type": "string",
            "description": "The elastic search index field to execute the filter on."
          },
          "topLeft": {
            "description": "The top left longitude/latitude configuration.",
            "allOf": [
              {
                "$ref": "#/components/schemas/GeoLocation"
              }
            ]
          },
          "bottomRight": {
            "description": "The bottom right longitude/latitude configuration.",
            "allOf": [
              {
                "$ref": "#/components/schemas/GeoLocation"
              }
            ]
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBase"
          }
        ]
      },
      "GeoLocation": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "lat",
          "lon"
        ],
        "properties": {
          "lat": {
            "type": "number",
            "format": "double"
          },
          "lon": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "GeoDistanceFilter": {
        "type": "object",
        "description": "The GeoDistanceFilter returns documents that include only hits that exists within a specific distance from a geo point.",
        "additionalProperties": false,
        "required": [
          "distance"
        ],
        "properties": {
          "field": {
            "type": "string",
            "description": "The elastic search index field to execute the filter on."
          },
          "location": {
            "description": "The longitude/latitude configuration for the point of origin.",
            "allOf": [
              {
                "$ref": "#/components/schemas/GeoLocation"
              }
            ]
          },
          "distance": {
            "type": "number",
            "description": "The range distance in meters.",
            "format": "double"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBase"
          }
        ]
      },
      "NestedFilter": {
        "type": "object",
        "description": "The NestedFilter is a joining filter and returns documents whose nested objects / documents (see nested mapping) match the specified filter.",
        "additionalProperties": false,
        "properties": {
          "path": {
            "type": "string",
            "description": "The path pointing to the nested object."
          },
          "filter": {
            "description": "Limits the result set.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterBase"
              }
            ]
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBase"
          }
        ]
      },
      "NumericRangeFilter": {
        "type": "object",
        "description": "The NumericRangeFilter returns documents with fields that have numeric values within a certain range.",
        "additionalProperties": false,
        "properties": {
          "field": {
            "type": "string",
            "description": "The elastic search index field to execute the filter on."
          },
          "range": {
            "description": "The numeric range with from and to properties.",
            "allOf": [
              {
                "$ref": "#/components/schemas/NumericRange"
              }
            ]
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBase"
          }
        ]
      },
      "NumericRange": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "names": {
            "description": "Tranlsated range names.",
            "allOf": [
              {
                "$ref": "#/components/schemas/TranslatedStringDictionary"
              }
            ]
          },
          "from": {
            "type": "number",
            "description": "The from value.",
            "format": "double"
          },
          "to": {
            "type": "number",
            "description": "The to value.",
            "format": "double"
          }
        }
      },
      "PrefixFilter": {
        "type": "object",
        "description": "The PrefixFilter returns documents that have fields containing terms with a specified prefix (not analyzed).",
        "additionalProperties": false,
        "properties": {
          "field": {
            "type": "string",
            "description": "The elastic search index field to execute the filter on."
          },
          "prefix": {
            "type": "string",
            "description": "The prefix term to filter on."
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBase"
          }
        ]
      },
      "TermFilter": {
        "type": "object",
        "description": "The TermFilter returns documents that contain the exact term specified in the inverted index.",
        "additionalProperties": false,
        "properties": {
          "field": {
            "type": "string",
            "description": "The elastic search index field to execute the filter on."
          },
          "term": {
            "type": "string",
            "description": "The term to filter on."
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBase"
          }
        ]
      },
      "TermsFilter": {
        "type": "object",
        "description": "The TermsFilter returns documents that have fields that match any of the provided terms (not analyzed).",
        "additionalProperties": false,
        "properties": {
          "field": {
            "type": "string",
            "description": "The elastic search index field to execute the filter on."
          },
          "terms": {
            "type": "array",
            "description": "A list of OR combined terms.",
            "items": {
              "type": "string"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBase"
          }
        ]
      },
      "AggregationFilter": {
        "type": "object",
        "description": "An AggregationFilter is provided with each aggregated value.\nWhen selecting the aggregated value the aggregation filter is added to the search query and returns documents meeting the aggregation condition.",
        "additionalProperties": false,
        "properties": {
          "aggregationName": {
            "type": "string",
            "description": "The name of the aggregation this filter is connected to."
          },
          "filter": {
            "description": "The aggregation filter property. Available filters are TermFilter, DateRangeFilter, NumericRangeFilter, GeoDistanceFilter and NestedFilter.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterBase"
              }
            ]
          },
          "temporaryAggregatorRequestId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBase"
          }
        ]
      },
      "ChildFilter": {
        "type": "object",
        "description": "The ChildFilter allows to apply filters on child documents and returns documents that match the specified filter on the child document.",
        "additionalProperties": false,
        "properties": {
          "childType": {
            "type": "string",
            "description": "The elastic search index type to filter as a child."
          },
          "filter": {
            "description": "The filter to apply on the child entity. It accepts all filters.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterBase"
              }
            ]
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBase"
          }
        ]
      },
      "ParentFilter": {
        "type": "object",
        "description": "The ParentFilter allows to apply filters on parent documents and returns documents that match the specified filter on the parent document.",
        "additionalProperties": false,
        "properties": {
          "parentType": {
            "type": "string",
            "description": "The elastic search index type to filter as a parent."
          },
          "filter": {
            "description": "The filter to apply on the child entity. It accepts all filters.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterBase"
              }
            ]
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBase"
          }
        ]
      },
      "SearchIndexReindexRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "numberOfShards",
          "numberOfReplicas",
          "numberOfRoutingShards"
        ],
        "properties": {
          "searchIndexId": {
            "type": "string"
          },
          "numberOfShards": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfReplicas": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfRoutingShards": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Index": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "numberOfShards",
          "numberOfReplicas",
          "numberOfRoutingShards",
          "indexType",
          "state"
        ],
        "properties": {
          "customerId": {
            "type": "string"
          },
          "indexName": {
            "type": "string"
          },
          "indexAlias": {
            "type": "string"
          },
          "numberOfShards": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfReplicas": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfRoutingShards": {
            "type": "integer",
            "format": "int32"
          },
          "indexType": {
            "$ref": "#/components/schemas/IndexType"
          },
          "state": {
            "$ref": "#/components/schemas/IndexState"
          },
          "businessProcessId": {
            "type": "string"
          }
        }
      },
      "IndexType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Configuration",
          "Main",
          "Cache",
          "ContentSearch",
          "ListItemSearch",
          "DocumentHistory",
          "LiveStream",
          "User",
          "Mail",
          "Transfer",
          "Share",
          "Output",
          "Notification",
          "BusinessProcess",
          "ListItem",
          "Content",
          "Token",
          "DisplayValue",
          "Schema",
          "OutputFormat",
          "Channel",
          "Reference"
        ],
        "enum": [
          "Configuration",
          "Main",
          "Cache",
          "ContentSearch",
          "ListItemSearch",
          "DocumentHistory",
          "LiveStream",
          "User",
          "Mail",
          "Transfer",
          "Share",
          "Output",
          "Notification",
          "BusinessProcess",
          "ListItem",
          "Content",
          "Token",
          "DisplayValue",
          "Schema",
          "OutputFormat",
          "Channel",
          "Reference"
        ]
      },
      "IndexState": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Draft",
          "Create",
          "Inactive",
          "Active",
          "Closed",
          "ReindexInProgress",
          "Cancelled"
        ],
        "enum": [
          "Draft",
          "Create",
          "Inactive",
          "Active",
          "Closed",
          "ReindexInProgress",
          "Cancelled"
        ]
      },
      "CustomerMetadataLanguageCreateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "language": {
            "type": "string"
          }
        }
      },
      "EnvironmentProcess": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "processType",
          "lifeCycle",
          "startDate",
          "endDate"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "processType": {
            "$ref": "#/components/schemas/EnvironmentProcessType"
          },
          "lifeCycle": {
            "$ref": "#/components/schemas/EnvironmentProcessLifeCycle"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorResponse"
          },
          "data": {
            "$ref": "#/components/schemas/EnvironmentProcessDataViewItemBase"
          }
        }
      },
      "EnvironmentProcessLifeCycle": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Draft",
          "InProgress",
          "Succeeded",
          "Cancelled",
          "CancellationInProgress",
          "Failed",
          "Acknowledged"
        ],
        "enum": [
          "Draft",
          "InProgress",
          "Succeeded",
          "Cancelled",
          "CancellationInProgress",
          "Failed",
          "Acknowledged"
        ]
      },
      "EnvironmentProcessDataViewItemBase": {
        "type": "object",
        "discriminator": {
          "propertyName": "kind",
          "mapping": {
            "EnvironmentProcessAddMetadataLanguageData": {
              "$ref": "#/components/schemas/EnvironmentProcessAddMetadataLanguageData"
            },
            "EnvironmentProcessCustomerUpdateData": {
              "$ref": "#/components/schemas/EnvironmentProcessCustomerUpdateData"
            },
            "EnvironmentProcessEnvironmentUpdateData": {
              "$ref": "#/components/schemas/EnvironmentProcessEnvironmentUpdateData"
            }
          }
        },
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "kind"
        ],
        "properties": {
          "kind": {
            "type": "string"
          }
        }
      },
      "EnvironmentProcessAddMetadataLanguageData": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "state"
        ],
        "properties": {
          "state": {
            "$ref": "#/components/schemas/AddMetadataLanguageState"
          },
          "language": {
            "type": "string"
          },
          "stateHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentProcessState"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EnvironmentProcessDataViewItemBase"
          }
        ]
      },
      "AddMetadataLanguageState": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Draft",
          "InProgress",
          "CustomerExported",
          "CustomerUpdated",
          "MasterDataReindexed",
          "RedisCacheRestored",
          "TranslationsForSystemEntitiesAdded",
          "SortingFallbackApplied",
          "SearchIndexesReindexed",
          "Succeeded",
          "Cancelled",
          "Failed"
        ],
        "enum": [
          "Draft",
          "InProgress",
          "CustomerExported",
          "CustomerUpdated",
          "MasterDataReindexed",
          "RedisCacheRestored",
          "TranslationsForSystemEntitiesAdded",
          "SortingFallbackApplied",
          "SearchIndexesReindexed",
          "Succeeded",
          "Cancelled",
          "Failed"
        ]
      },
      "EnvironmentProcessState": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "timestamp"
        ],
        "properties": {
          "state": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "result": {
            "type": "string"
          }
        }
      },
      "EnvironmentProcessCustomerUpdateData": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "state"
        ],
        "properties": {
          "state": {
            "$ref": "#/components/schemas/CustomerUpdateState"
          },
          "targetVersion": {
            "type": "string"
          },
          "stateHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentProcessState"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EnvironmentProcessDataViewItemBase"
          }
        ]
      },
      "CustomerUpdateState": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Draft",
          "InProgress",
          "CustomerExported",
          "Succeeded",
          "Cancelled",
          "Failed"
        ],
        "enum": [
          "Draft",
          "InProgress",
          "CustomerExported",
          "Succeeded",
          "Cancelled",
          "Failed"
        ]
      },
      "EnvironmentProcessEnvironmentUpdateData": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "state"
        ],
        "properties": {
          "state": {
            "$ref": "#/components/schemas/EnvironmentUpdateState"
          },
          "targetVersion": {
            "type": "string"
          },
          "stateHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentProcessState"
            }
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/EnvironmentProcessDataViewItemBase"
          }
        ]
      },
      "EnvironmentUpdateState": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Draft",
          "InProgress",
          "Succeeded",
          "Cancelled",
          "Failed"
        ],
        "enum": [
          "Draft",
          "InProgress",
          "Succeeded",
          "Cancelled",
          "Failed"
        ]
      },
      "CustomerServiceProviderCreateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customerAlias": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "serviceProvider": {
            "$ref": "#/components/schemas/CustomerServiceProvider"
          }
        }
      },
      "EnvironmentConfiguration": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "lifeCycle"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The environment configuration id."
          },
          "contractVersion": {
            "type": "string",
            "description": "The contract version of the environment configuration."
          },
          "lifeCycle": {
            "description": "Curent lifecycle state of the entity.",
            "allOf": [
              {
                "$ref": "#/components/schemas/LifeCycle"
              }
            ]
          },
          "deactivationMessage": {
            "description": "Language specific deactivation messages.",
            "allOf": [
              {
                "$ref": "#/components/schemas/TranslatedStringDictionary"
              }
            ]
          }
        }
      },
      "VersionInfo": {
        "type": "object",
        "description": "The version view item for the environment.",
        "additionalProperties": false,
        "properties": {
          "fileVersion": {
            "type": "string",
            "description": "The manual file version of Picturepark.Contract.dll."
          },
          "fileProductVersion": {
            "type": "string",
            "description": "The GitVersionTask generated file product version of Picturepark.Configuration.dll."
          },
          "contractVersion": {
            "type": "string",
            "description": "The current contract version stored in CustomerDoc / EnvironmentDoc."
          },
          "release": {
            "type": "string",
            "description": "The bamboo release version. Only provided on bamboo deployments."
          }
        }
      },
      "EnvironmentProcessWaitResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "lifeCycleHit": {
            "$ref": "#/components/schemas/EnvironmentProcessLifeCycle"
          },
          "environmentProcess": {
            "$ref": "#/components/schemas/EnvironmentProcess"
          }
        }
      },
      "EnvironmentProcessSearchRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "start",
          "limit"
        ],
        "properties": {
          "start": {
            "type": "integer",
            "description": "Defines the offset from the first result you want to fetch. Defaults to 0.",
            "format": "int32",
            "default": 0
          },
          "limit": {
            "type": "integer",
            "description": "Limits the document count of the result set. Defaults to 30.",
            "format": "int32",
            "default": 30
          },
          "filter": {
            "$ref": "#/components/schemas/FilterBase"
          }
        }
      },
      "EnvironmentProcessSearchResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalResults"
        ],
        "properties": {
          "totalResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentProcess"
            }
          }
        }
      },
      "DataGenerationCreateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "sampleRootPath": {
            "type": "string"
          },
          "superUserEmailAddress": {
            "type": "string"
          },
          "usersAndRoles": {
            "$ref": "#/components/schemas/DataGenerationUsersAndUserRoles"
          },
          "contents": {
            "$ref": "#/components/schemas/DataGenerationContents"
          },
          "basicShares": {
            "$ref": "#/components/schemas/DataGenerationBasicShares"
          },
          "schemas": {
            "$ref": "#/components/schemas/DataGenerationSchemas"
          },
          "contentSchemas": {
            "$ref": "#/components/schemas/DataGenerationContentSchemas"
          },
          "contentPermissionSets": {
            "$ref": "#/components/schemas/DataGenerationContentPermissionSets"
          },
          "schemaPermissionSets": {
            "$ref": "#/components/schemas/DataGenerationSchemaPermissionSets"
          },
          "tags": {
            "$ref": "#/components/schemas/DataGenerationTags"
          },
          "referencedFields": {
            "$ref": "#/components/schemas/DataGenerationReferencedFields"
          }
        }
      },
      "DataGenerationUsersAndUserRoles": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "numberOfUsers",
          "numberOfUserRoles",
          "userRoleGrantedMax",
          "userRightGrantedAverage"
        ],
        "properties": {
          "numberOfUsers": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfUserRoles": {
            "type": "integer",
            "format": "int32"
          },
          "userRoleGrantedMax": {
            "type": "integer",
            "format": "int32"
          },
          "userRightGrantedAverage": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "DataGenerationContents": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "numberOfContents",
          "transferSize",
          "numberOfUsersWithContents",
          "copySampleFiles",
          "renderOutputs",
          "maxConcurrentTransfers",
          "numberOfContentPermissionSets",
          "includeTroubleMakerFiles",
          "numberOfSchemasPerContent"
        ],
        "properties": {
          "numberOfContents": {
            "type": "integer",
            "format": "int32"
          },
          "transferSize": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfUsersWithContents": {
            "type": "integer",
            "format": "int32"
          },
          "copySampleFiles": {
            "type": "boolean"
          },
          "renderOutputs": {
            "type": "boolean"
          },
          "maxConcurrentTransfers": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfContentPermissionSets": {
            "type": "integer",
            "format": "int32"
          },
          "includeTroubleMakerFiles": {
            "type": "boolean"
          },
          "numberOfSchemasPerContent": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DataGenerationBasicShares": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "shareBatchSizePerCreator",
          "numberOfShareCreators",
          "numberOfInternalRecipientsPerShare",
          "numberOfContentsPerShare"
        ],
        "properties": {
          "shareBatchSizePerCreator": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfShareCreators": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfInternalRecipientsPerShare": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfContentsPerShare": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DataGenerationSchemas": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "numberOfSchemas",
          "numberOfFieldsPerSchema",
          "numberOfSchemaPermissionSets"
        ],
        "properties": {
          "numberOfSchemas": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfFieldsPerSchema": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfSchemaPermissionSets": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DataGenerationContentSchemas": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "numberOfContentSchemas",
          "numberOfFieldsPerContentSchemas",
          "numberOfSchemaPermissionSets"
        ],
        "properties": {
          "numberOfContentSchemas": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfFieldsPerContentSchemas": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfSchemaPermissionSets": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DataGenerationContentPermissionSets": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "numberOfSets",
          "numberOfRolesPerSet"
        ],
        "properties": {
          "numberOfSets": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfRolesPerSet": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DataGenerationSchemaPermissionSets": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "numberOfSets",
          "numberOfRolesPerSet"
        ],
        "properties": {
          "numberOfSets": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfRolesPerSet": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DataGenerationTags": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "numberOfSchemas",
          "numberOfFieldsPerSchema",
          "numberOfListItems",
          "numberOfPermissionSets"
        ],
        "properties": {
          "numberOfSchemas": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfFieldsPerSchema": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfListItems": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfPermissionSets": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DataGenerationReferencedFields": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "searchLevel",
          "numberOfSingleTagboxesPerSchema"
        ],
        "properties": {
          "searchLevel": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfSingleTagboxesPerSchema": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "NodeInfo": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "lastResponseTime"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "hostName": {
            "type": "string"
          },
          "lastResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "serviceName": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "versionInfo": {
            "type": "string"
          },
          "release": {
            "type": "string"
          },
          "logLevel": {
            "type": "string"
          }
        }
      },
      "ServiceProviderCreateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "externalId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "applicationKey": {
            "type": "string"
          },
          "messageQueueUser": {
            "type": "string"
          },
          "messageQueuePassword": {
            "type": "string"
          },
          "baseUrl": {
            "type": "string"
          }
        }
      },
      "ServiceProvider": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "externalId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "applicationKey": {
            "type": "string"
          },
          "virtualHost": {
            "type": "string"
          },
          "baseUrl": {
            "type": "string"
          }
        }
      },
      "UpdateInfo": {
        "type": "object",
        "description": "The UpdateInfoViewItem is the view item for update commands.",
        "additionalProperties": false,
        "required": [
          "creationDate"
        ],
        "properties": {
          "updateVersion": {
            "type": "string",
            "description": "The version of the update command."
          },
          "objectStoreVersion": {
            "type": "string",
            "description": "The version of the object store (elastic search) at the time of the update command creation."
          },
          "creationDate": {
            "type": "string",
            "description": "The creation date of the update command.",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "description": "The description of the update command."
          },
          "creator": {
            "type": "string",
            "description": "The creator of the update command."
          }
        }
      },
      "ReactivationEnvironmentRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "DeactivationEnvironmentRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "deactivationMessage": {
            "description": "Language specific deactivation messages.",
            "allOf": [
              {
                "$ref": "#/components/schemas/TranslatedStringDictionary"
              }
            ]
          }
        }
      },
      "UpdateEnvironmentRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "targetVersion": {
            "type": "string",
            "description": "The maximal target version.\nIn case the highest available update version is lower than the desired target version, the environments's contract version will be raised to the highest available update version."
          }
        }
      },
      "CustomerVersionInfo": {
        "type": "object",
        "description": "The version view item for the customer.",
        "additionalProperties": false,
        "properties": {
          "customerId": {
            "type": "string",
            "description": "The customer id."
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/VersionInfo"
          }
        ]
      },
      "ReactivationCustomerRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customerId": {
            "type": "string",
            "description": "The customer id."
          }
        }
      },
      "DeactivationCustomerRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customerId": {
            "type": "string",
            "description": "The customer id."
          },
          "deactivationMessage": {
            "description": "Language specific deactivation messages.",
            "allOf": [
              {
                "$ref": "#/components/schemas/TranslatedStringDictionary"
              }
            ]
          }
        }
      },
      "UpdateCustomerRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "targetVersion": {
            "type": "string",
            "description": "The maximal target version.\nIn case the highest available update version is lower than the desired target version, the customer's contract version will be raised to the highest available update version."
          },
          "customerId": {
            "type": "string",
            "description": "The customer id."
          }
        }
      },
      "UserDeveloperFlagUpdateRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "isDeveloper"
        ],
        "properties": {
          "userId": {
            "type": "string"
          },
          "isDeveloper": {
            "type": "boolean"
          }
        }
      }
    }
  }
}