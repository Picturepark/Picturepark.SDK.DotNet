{
  "x-generator": "NSwag v11.13.2.0 (NJsonSchema v9.10.21.0 (Newtonsoft.Json v9.0.0.0))",
  "swagger": "2.0",
  "info": {
    "title": "Picturepark CloudManager API V1",
    "description": "OpenAPI specification of Picturepark CloudManager API V1",
    "contact": {
      "name": "Picturepark sales",
      "email": "sales@picturepark.com"
    },
    "version": "1.0"
  },
  "schemes": [],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/customer": {
      "post": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Create",
        "parameters": [
          {
            "name": "createRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerCreateRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerConfiguration"
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Update",
        "parameters": [
          {
            "name": "updateRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerUpdateRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerConfiguration"
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/customer/{customerId}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Get",
        "parameters": [
          {
            "type": "string",
            "name": "customerId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerConfiguration"
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Delete",
        "parameters": [
          {
            "type": "string",
            "name": "customerId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/customer/search": {
      "get": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_List",
        "parameters": [
          {
            "type": "string",
            "name": "customerId",
            "in": "query",
            "required": true,
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerSearchResult"
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Search",
        "parameters": [
          {
            "name": "searchRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerSearchRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerSearchResult"
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/customer/{customerId}/users": {
      "get": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_GetAllUsers",
        "parameters": [
          {
            "type": "string",
            "name": "customerId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/customer/{customerAlias}/restore": {
      "post": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Restore",
        "parameters": [
          {
            "type": "string",
            "name": "customerAlias",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/customer/{customerAlias}/searchIndex/reindex": {
      "post": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Reindex",
        "parameters": [
          {
            "type": "string",
            "name": "customerAlias",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "reindexRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchIndexReindexRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Index"
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/customer/{customerAlias}/metadataLanguage": {
      "post": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_CreateMetadataLanguage",
        "parameters": [
          {
            "type": "string",
            "name": "customerAlias",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "metadataLanguageCreateRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerMetadataLanguageCreateRequest"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "timeout",
            "in": "query",
            "x-nullable": true,
            "format": "time-span"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EnvironmentProcess"
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/services/shutdownAll": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Service_ShutdownAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/services/restartAll": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Service_RestartAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/services/{serviceName}/restart": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Service_RestartService",
        "parameters": [
          {
            "type": "string",
            "name": "serviceName",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/services/{serviceName}/shutdown": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Service_ShutdownService",
        "parameters": [
          {
            "type": "string",
            "name": "serviceName",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/services/pingAllActiveNodes": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Service_PingAllActiveNodes",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/services/getAllActiveNodes": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Service_GetAllActiveNodes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NodeInfo"
              }
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/updates/environment": {
      "get": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_GetAvailableEnvironmentUpdates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UpdateInfo"
              }
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/updates/environment/version": {
      "get": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_GetEnvironmentVersion",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VersionInfo"
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/updates/environment/reactivate": {
      "post": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_ReactivateEnvironment",
        "parameters": [
          {
            "name": "reactivationRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReactivationEnvironmentRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/updates/environment/deactivate": {
      "post": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_DeactivateEnvironment",
        "parameters": [
          {
            "name": "deactivationRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeactivationEnvironmentRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/updates/environment/update": {
      "post": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_UpdateEnvironment",
        "parameters": [
          {
            "name": "updateRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateEnvironmentRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EnvironmentProcess"
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/updates/customers/{customerId}": {
      "get": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_GetAvailableCustomerUpdates",
        "parameters": [
          {
            "type": "string",
            "name": "customerId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UpdateInfo"
              }
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/updates/customers/version": {
      "get": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_GetCustomerVersions",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerVersionInfo"
              }
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/updates/customers/{customerId}/version": {
      "get": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_GetCustomerVersion",
        "parameters": [
          {
            "type": "string",
            "name": "customerId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerVersionInfo"
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/updates/customers/reactivate": {
      "post": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_ReactivateCustomers",
        "parameters": [
          {
            "name": "reactivationRequests",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReactivationCustomerRequest"
              }
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/updates/customers/deactivate": {
      "post": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_DeactivateCustomers",
        "parameters": [
          {
            "name": "deactivationRequests",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeactivationCustomerRequest"
              }
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/updates/customers/update": {
      "post": {
        "tags": [
          "Update"
        ],
        "operationId": "Update_UpdateCustomers",
        "parameters": [
          {
            "name": "updateRequests",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UpdateCustomerRequest"
              }
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EnvironmentProcess"
              }
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/backup/customer/repository": {
      "put": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_CreateCustomerSnapshotRepository",
        "parameters": [
          {
            "name": "snapshotRepositoryCustomerCreateRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotRepositoryCustomerCreateRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SnapshotRepository"
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/backup/customer/snapshot": {
      "put": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_CreateSnapshot",
        "parameters": [
          {
            "name": "snapshotCustomerCreateRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotCustomerCreateRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SnapshotEnqueueResult"
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/backup/customer/restore": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_RestoreSnapshot",
        "parameters": [
          {
            "name": "snapshotCustomerRestoreRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotCustomerRestoreRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SnapshotRestore"
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/backup/environment/repository": {
      "put": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_CreateEnvironmentSnapshotRepository",
        "parameters": [
          {
            "name": "snapshotRepositoryEnvironmentCreateRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotRepositoryEnvironmentCreateRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SnapshotRepository"
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/backup/environment/snapshot": {
      "put": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_CreateSnapshot2",
        "parameters": [
          {
            "name": "snapshotEnvironmentCreateRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotEnvironmentCreateRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SnapshotEnqueueResult"
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/backup/environment/restore": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_RestoreSnapshot2",
        "parameters": [
          {
            "name": "snapshotEnvironmentRestoreRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotEnvironmentRestoreRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SnapshotRestore"
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/backup/customer/snapshot/search": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_SearchSnapshots",
        "parameters": [
          {
            "name": "snapshotCustomerSearchRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotCustomerSearchRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SnapshotCustomerSearchResult"
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/backup/customer/repository/search": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_SearchRepositories",
        "parameters": [
          {
            "name": "searchRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotRepositoryCustomerSearchRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SnapshotRepositorySearchResult"
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/backup/environment/repository/search": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_SearchRepositories2",
        "parameters": [
          {
            "name": "searchRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotRepositoryEnvironmentSearchRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SnapshotRepositorySearchResult"
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/backup/customer/clone": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_CloneCustomer",
        "parameters": [
          {
            "name": "cloneRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotCustomerCloneRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Customer"
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/backup/snapshot/cleanup": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_Cleanup",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SnapshotsCleanupResult"
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/backup/customer/export": {
      "put": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_Export",
        "parameters": [
          {
            "name": "customerExportRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerExportRequest"
            },
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "timeout",
            "in": "query",
            "x-nullable": true,
            "format": "time-span"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerExportResult"
            },
            "x-nullable": true
          },
          "400": {
            "description": "\nor\nValidation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true,
            "x-expectedSchemas": [
              {
                "description": "",
                "schema": {
                  "$ref": "#/definitions/SnapshotTimeoutException"
                }
              },
              {
                "description": "Validation exception",
                "schema": {
                  "$ref": "#/definitions/PictureparkValidationException"
                }
              }
            ]
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/backup/snapshot/{repositoryName}/archive": {
      "put": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_ArchiveRepository",
        "parameters": [
          {
            "type": "string",
            "name": "repositoryName",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SnapshotRepository"
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/backup/snapshot/{repositoryName}": {
      "get": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_GetRepository",
        "parameters": [
          {
            "type": "string",
            "name": "repositoryName",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SnapshotRepository"
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/{customerAlias}/{userId}/getUserDeveloperFlag": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "User_GetUserDeveloperFlag",
        "parameters": [
          {
            "type": "string",
            "name": "customerAlias",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "userId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            },
            "x-nullable": false
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/{customerAlias}/updateUserDeveloperFlag": {
      "put": {
        "tags": [
          "User"
        ],
        "operationId": "User_UpdateUserDeveloperFlag",
        "parameters": [
          {
            "type": "string",
            "name": "customerAlias",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "userDeveloperFlagUpdateRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserDeveloperFlagUpdateRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserDeveloperFlagUpdateRequest"
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/customer/{customerAlias}/sampleData": {
      "put": {
        "tags": [
          "SampleData"
        ],
        "operationId": "SampleData_create",
        "parameters": [
          {
            "type": "string",
            "name": "customerAlias",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "name": "dataGenerationCreateRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataGenerationCreateRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/service/serviceProvider": {
      "post": {
        "tags": [
          "ServiceProvider"
        ],
        "operationId": "ServiceProvider_Create",
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceProviderCreateRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ServiceProvider"
            },
            "x-nullable": false
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/service/serviceProvider/{serviceProviderId}": {
      "delete": {
        "tags": [
          "ServiceProvider"
        ],
        "operationId": "ServiceProvider_Delete",
        "parameters": [
          {
            "type": "string",
            "name": "serviceProviderId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": "Service provoider with this id could not be found\nor\nEntity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true,
            "x-expectedSchemas": [
              {
                "description": "Service provoider with this id could not be found",
                "schema": {
                  "$ref": "#/definitions/ServiceProviderNotFoundException"
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "$ref": "#/definitions/PictureparkNotFoundException"
                }
              }
            ]
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/service/customer/serviceProvider": {
      "post": {
        "tags": [
          "CustomerServiceProvider"
        ],
        "operationId": "CustomerServiceProvider_Create",
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerServiceProviderCreateRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerServiceProvider"
            },
            "x-nullable": false
          },
          "404": {
            "description": "Service provoider with this id could not be found\nor\nCustomer with this alias could not be found\nor\nEntity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true,
            "x-expectedSchemas": [
              {
                "description": "Service provoider with this id could not be found",
                "schema": {
                  "$ref": "#/definitions/ServiceProviderNotFoundException"
                }
              },
              {
                "description": "Customer with this alias could not be found",
                "schema": {
                  "$ref": "#/definitions/CustomerAliasNotFoundException"
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "$ref": "#/definitions/PictureparkNotFoundException"
                }
              }
            ]
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/service/customer/{customerAlias}/serviceProvider/{serviceProviderId}": {
      "delete": {
        "tags": [
          "CustomerServiceProvider"
        ],
        "operationId": "CustomerServiceProvider_Delete",
        "parameters": [
          {
            "type": "string",
            "name": "customerAlias",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "serviceProviderId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": "Service provoider with this id could not be found\nor\nCustomer with this alias could not be found\nor\nEntity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true,
            "x-expectedSchemas": [
              {
                "description": "Service provoider with this id could not be found",
                "schema": {
                  "$ref": "#/definitions/ServiceProviderNotFoundException"
                }
              },
              {
                "description": "Customer with this alias could not be found",
                "schema": {
                  "$ref": "#/definitions/CustomerAliasNotFoundException"
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "$ref": "#/definitions/PictureparkNotFoundException"
                }
              }
            ]
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/service/environment": {
      "post": {
        "tags": [
          "Environment"
        ],
        "operationId": "Environment_CreateEnvironment",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EnvironmentConfiguration"
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/service/environment/version": {
      "get": {
        "tags": [
          "Environment"
        ],
        "operationId": "Environment_GetVersion",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VersionInfo"
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/environmentProcesses/{processId}": {
      "get": {
        "tags": [
          "EnvironmentProcess"
        ],
        "operationId": "EnvironmentProcess_Get",
        "parameters": [
          {
            "type": "string",
            "name": "processId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EnvironmentProcess"
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/environmentProcesses/{processId}/wait": {
      "get": {
        "tags": [
          "EnvironmentProcess"
        ],
        "operationId": "EnvironmentProcess_WaitForLifecycle",
        "parameters": [
          {
            "type": "string",
            "name": "processId",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "array",
            "name": "lifecycles",
            "in": "query",
            "x-nullable": true,
            "collectionFormat": "multi",
            "items": {
              "$ref": "#/definitions/EnvironmentProcessLifeCycle"
            }
          },
          {
            "type": "string",
            "name": "timeout",
            "in": "query",
            "x-nullable": true,
            "format": "time-span"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EnvironmentProcessWaitResult"
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/environmentProcesses/{processId}/cancel": {
      "post": {
        "tags": [
          "EnvironmentProcess"
        ],
        "operationId": "EnvironmentProcess_Cancel",
        "parameters": [
          {
            "type": "string",
            "name": "processId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/environmentProcesses/{processId}/acknowledge": {
      "post": {
        "tags": [
          "EnvironmentProcess"
        ],
        "operationId": "EnvironmentProcess_Acknowledge",
        "parameters": [
          {
            "type": "string",
            "name": "processId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/environmentProcesses/search": {
      "post": {
        "tags": [
          "EnvironmentProcess"
        ],
        "operationId": "EnvironmentProcess_Search",
        "parameters": [
          {
            "name": "searchRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnvironmentProcessSearchRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EnvironmentProcessSearchResult"
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/contentBackup/outputs/complete": {
      "post": {
        "tags": [
          "ContentBackup"
        ],
        "operationId": "ContentBackup_CompleteOutputBackup",
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContentBackupCompleteByOutputRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/contentBackup/contents/searchMissing": {
      "post": {
        "tags": [
          "ContentBackup"
        ],
        "operationId": "ContentBackup_SearchMissingContentBackups",
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContentBackupSearchRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ContentBackupSearchResult"
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/contentBackup/enable": {
      "post": {
        "tags": [
          "ContentBackup"
        ],
        "operationId": "ContentBackup_EnableContentBackup",
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContentBackupEnableRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/contentBackup/disable": {
      "post": {
        "tags": [
          "ContentBackup"
        ],
        "operationId": "ContentBackup_DisableContentBackup",
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContentBackupDisableRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/contentBackup/cancelRecovery": {
      "post": {
        "tags": [
          "ContentBackup"
        ],
        "operationId": "ContentBackup_CancelContentBackupRecovery",
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContentBackupCancelRecoveryRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/contentBackup/forceCompleteRecovery": {
      "post": {
        "tags": [
          "ContentBackup"
        ],
        "operationId": "ContentBackup_ForceCompleteContentBackupRecovery",
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContentBackupForceCompleteRecoveryRequest"
            },
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/customer/{customerAlias}/cdn/purge": {
      "post": {
        "tags": [
          "Cdn"
        ],
        "operationId": "Cdn_PurgeCdnForCustomer",
        "parameters": [
          {
            "type": "string",
            "name": "customerAlias",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BusinessProcess"
            },
            "x-nullable": true
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/PictureparkException"
            },
            "x-nullable": true
          },
          "401": {
            "description": "Not authorized"
          },
          "405": {
            "description": "Method not allowed"
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/PictureparkNotFoundException"
            },
            "x-nullable": true
          },
          "409": {
            "description": "Version conflict",
            "schema": {
              "$ref": "#/definitions/PictureparkConflictException"
            },
            "x-nullable": true
          },
          "400": {
            "description": "Validation exception",
            "schema": {
              "$ref": "#/definitions/PictureparkValidationException"
            },
            "x-nullable": true
          },
          "429": {
            "description": "Too many requests"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "definitions": {
    "CustomerCreateRequest": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "useSsl",
        "enableQueryDetails",
        "elasticSearchNumberOfShards",
        "elasticSearchNumberOfReplicas",
        "rootContentSearchIndexNumberOfShards",
        "rootContentSearchIndexNumberOfReplicas",
        "rootListItemSearchIndexNumberOfShards",
        "rootListItemSearchIndexNumberOfReplicas",
        "indexedFieldThreshold",
        "sortableFieldThreshold",
        "contentRetentionTime",
        "listItemRetentionTime",
        "snapshotRetentionTime",
        "snapshotFullbackupScheduleTime",
        "contentBackupState"
      ],
      "properties": {
        "alias": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "baseUrl": {
          "type": "string"
        },
        "storagePath": {
          "type": "string"
        },
        "watermarkPath": {
          "type": "string"
        },
        "logoPath": {
          "type": "string"
        },
        "customerHosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "useSsl": {
          "type": "boolean"
        },
        "enableQueryDetails": {
          "type": "boolean"
        },
        "cdnConfiguration": {
          "$ref": "#/definitions/CdnConfigurationBase"
        },
        "supportContactEmailAddress": {
          "type": "string"
        },
        "identityServerProviders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityServerProvider"
          }
        },
        "serviceProviders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerServiceProvider"
          }
        },
        "corsAllowedHosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "elasticSearchNumberOfShards": {
          "type": "integer",
          "format": "int32"
        },
        "elasticSearchNumberOfReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "rootContentSearchIndexNumberOfShards": {
          "type": "integer",
          "format": "int32"
        },
        "rootContentSearchIndexNumberOfReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "rootListItemSearchIndexNumberOfShards": {
          "type": "integer",
          "format": "int32"
        },
        "rootListItemSearchIndexNumberOfReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "indexedFieldThreshold": {
          "type": "integer",
          "format": "int32"
        },
        "sortableFieldThreshold": {
          "type": "integer",
          "format": "int32"
        },
        "noReplyEmailAddress": {
          "type": "string"
        },
        "languageConfiguration": {
          "$ref": "#/definitions/LanguageConfiguration"
        },
        "outputFormats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OutputFormat"
          }
        },
        "businessProcessEngineConnectionString": {
          "type": "string"
        },
        "contentRetentionTime": {
          "type": "string",
          "format": "time-span"
        },
        "listItemRetentionTime": {
          "type": "string",
          "format": "time-span"
        },
        "snapshotRetentionTime": {
          "type": "string",
          "format": "time-span"
        },
        "snapshotFullbackupScheduleTime": {
          "type": "string",
          "format": "time-span"
        },
        "createTransferBusinessProcess": {
          "type": "string"
        },
        "adminUser": {
          "$ref": "#/definitions/User"
        },
        "adminUserPassword": {
          "type": "string"
        },
        "contentBackupState": {
          "$ref": "#/definitions/ContentBackupState"
        }
      }
    },
    "CdnConfigurationBase": {
      "type": "object",
      "discriminator": "kind",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "kind"
      ],
      "properties": {
        "url": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        }
      }
    },
    "FastlyCdnConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "apiToken": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/CdnConfigurationBase"
        }
      ]
    },
    "IdentityServerProvider": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "CustomerServiceProvider": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerAllowedMessage"
          }
        },
        "allowedCommands": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerAllowedCommand"
          }
        },
        "userRoleIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "settings": {
          "type": "string"
        }
      }
    },
    "CustomerAllowedMessage": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      }
    },
    "CustomerAllowedCommand": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "LanguageConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "systemLanguages": {
          "type": "array",
          "description": "A list of languages serving as system languages.",
          "items": {
            "type": "string"
          }
        },
        "metadataLanguages": {
          "type": "array",
          "description": "A list of languages serving as metadata languages.",
          "items": {
            "type": "string"
          }
        },
        "defaultLanguage": {
          "type": "string",
          "description": "The default language. Not the be confused with the metadata fallback language x-default."
        }
      }
    },
    "OutputFormat": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "static",
        "system",
        "dynamic",
        "dataExtraction",
        "temporary",
        "render"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "names": {
          "$ref": "#/definitions/TranslatedStringDictionary"
        },
        "static": {
          "type": "boolean"
        },
        "system": {
          "type": "boolean"
        },
        "dynamic": {
          "type": "boolean"
        },
        "dataExtraction": {
          "type": "boolean"
        },
        "temporary": {
          "type": "boolean"
        },
        "sourceOutputFormats": {
          "$ref": "#/definitions/SourceOutputFormats"
        },
        "render": {
          "type": "boolean"
        },
        "format": {
          "$ref": "#/definitions/FormatBase"
        }
      }
    },
    "TranslatedStringDictionary": {
      "type": "object",
      "description": "A custom dictionary type to distinguish language specific class properties.",
      "additionalProperties": false,
      "allOf": [
        {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      ]
    },
    "SourceOutputFormats": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "image": {
          "type": "string"
        },
        "video": {
          "type": "string"
        },
        "document": {
          "type": "string"
        },
        "audio": {
          "type": "string"
        }
      }
    },
    "FormatBase": {
      "type": "object",
      "discriminator": "kind",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "kind"
      ],
      "properties": {
        "kind": {
          "type": "string"
        }
      }
    },
    "ImageFormatBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "colorTransformationIntent",
        "renderFirstFrameOnly",
        "keepClippingPath",
        "cloneExif",
        "cloneIptc",
        "cloneAdobeResources",
        "cloneXmp"
      ],
      "properties": {
        "colorProfile": {
          "$ref": "#/definitions/ColorProfile"
        },
        "colorTransformationIntent": {
          "$ref": "#/definitions/ColorTransformationIntent"
        },
        "horizontalResolution": {
          "type": "number",
          "format": "double"
        },
        "verticalResolution": {
          "type": "number",
          "format": "double"
        },
        "renderFirstFrameOnly": {
          "type": "boolean"
        },
        "keepClippingPath": {
          "type": "boolean"
        },
        "cloneExif": {
          "type": "boolean"
        },
        "cloneIptc": {
          "type": "boolean"
        },
        "cloneAdobeResources": {
          "type": "boolean"
        },
        "cloneXmp": {
          "type": "boolean"
        },
        "resizeAction": {
          "$ref": "#/definitions/ResizeAction"
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageActionBase"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FormatBase"
        }
      ]
    },
    "ColorProfile": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "AdobeRgb1998",
        "AppleRgb",
        "ColorMatchRgb",
        "EciRgbV1",
        "EciRgbV2",
        "Srgb",
        "SrgbColorSpaceProfile",
        "EuropeIsoCoatedFogra27",
        "EuroscaleCoated",
        "EuroscaleUncoated",
        "IsoCoated",
        "IsoCoatedEciV2",
        "JapanColor2001Coated",
        "JapanColor2001Uncoated",
        "JapanColor2002Newspaper",
        "JapanWebCoated",
        "UsSheetfedCoated",
        "UsSheetfedUncoated",
        "UsWebCoatedSwop",
        "UsWebUncoated",
        "IsoCoatedV2Grey1cBas",
        "IsoCoated300EciV2",
        "CoatedFogra27",
        "CoatedFogra39",
        "UncoatedFogra29",
        "WebCoatedFogra28",
        "WebCoatedSwop2006Grade3",
        "WebCoatedSwop2006Grade5",
        "Isonewspaper26v4",
        "Isonewspaper26v4Grey"
      ],
      "enum": [
        "AdobeRgb1998",
        "AppleRgb",
        "ColorMatchRgb",
        "EciRgbV1",
        "EciRgbV2",
        "Srgb",
        "SrgbColorSpaceProfile",
        "EuropeIsoCoatedFogra27",
        "EuroscaleCoated",
        "EuroscaleUncoated",
        "IsoCoated",
        "IsoCoatedEciV2",
        "JapanColor2001Coated",
        "JapanColor2001Uncoated",
        "JapanColor2002Newspaper",
        "JapanWebCoated",
        "UsSheetfedCoated",
        "UsSheetfedUncoated",
        "UsWebCoatedSwop",
        "UsWebUncoated",
        "IsoCoatedV2Grey1cBas",
        "IsoCoated300EciV2",
        "CoatedFogra27",
        "CoatedFogra39",
        "UncoatedFogra29",
        "WebCoatedFogra28",
        "WebCoatedSwop2006Grade3",
        "WebCoatedSwop2006Grade5",
        "Isonewspaper26v4",
        "Isonewspaper26v4Grey"
      ]
    },
    "ColorTransformationIntent": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "RelativeColorimetricBpc",
        "AbsoluteColorimetric",
        "Perceptual",
        "RelativeColorimetric",
        "Saturation"
      ],
      "enum": [
        "RelativeColorimetricBpc",
        "AbsoluteColorimetric",
        "Perceptual",
        "RelativeColorimetric",
        "Saturation"
      ]
    },
    "ResizeAction": {
      "type": "object",
      "description": "Does not implement the IImageAction interface. The ResizeAction is directly exposed within ImageFormat.",
      "additionalProperties": false,
      "required": [
        "width",
        "height",
        "resizeMode"
      ],
      "properties": {
        "width": {
          "type": "integer",
          "format": "int32"
        },
        "height": {
          "type": "integer",
          "format": "int32"
        },
        "resizeMode": {
          "$ref": "#/definitions/ResizeMode"
        }
      }
    },
    "ResizeMode": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Fit",
        "Shrink",
        "Resize"
      ],
      "enum": [
        "Fit",
        "Shrink",
        "Resize"
      ]
    },
    "ImageActionBase": {
      "type": "object",
      "discriminator": "kind",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "kind"
      ],
      "properties": {
        "kind": {
          "type": "string"
        }
      }
    },
    "AlphaHandlingAction": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "alphaHandling"
      ],
      "properties": {
        "alphaHandling": {
          "$ref": "#/definitions/AlphaHandling"
        },
        "replacementRgbColorHexCode": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageActionBase"
        }
      ]
    },
    "AlphaHandling": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "DiscardAlpha",
        "ReplaceAlpha",
        "ReplaceInvertedAlpha"
      ],
      "enum": [
        "DiscardAlpha",
        "ReplaceAlpha",
        "ReplaceInvertedAlpha"
      ]
    },
    "CropAction": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "x",
        "y",
        "width",
        "height"
      ],
      "properties": {
        "x": {
          "type": "integer",
          "format": "int32"
        },
        "y": {
          "type": "integer",
          "format": "int32"
        },
        "width": {
          "type": "integer",
          "format": "int32"
        },
        "height": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageActionBase"
        }
      ]
    },
    "UnsharpenMaskAction": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "amount",
        "radius",
        "threshold"
      ],
      "properties": {
        "amount": {
          "type": "number",
          "format": "double"
        },
        "radius": {
          "type": "number",
          "format": "double"
        },
        "threshold": {
          "type": "number",
          "format": "double"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageActionBase"
        }
      ]
    },
    "WatermarkAction": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "opacity",
        "widthRatio",
        "heightRatio"
      ],
      "properties": {
        "watermarkFilePath": {
          "type": "string"
        },
        "watermarkText": {
          "type": "string"
        },
        "marginLeft": {
          "type": "integer",
          "format": "int32"
        },
        "marginTop": {
          "type": "integer",
          "format": "int32"
        },
        "marginRight": {
          "type": "integer",
          "format": "int32"
        },
        "marginBottom": {
          "type": "integer",
          "format": "int32"
        },
        "opacity": {
          "type": "number",
          "format": "double"
        },
        "widthRatio": {
          "type": "number",
          "format": "double"
        },
        "heightRatio": {
          "type": "number",
          "format": "double"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageActionBase"
        }
      ]
    },
    "OriginalFormat": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "defaultOutputExtension": {
          "type": "string"
        },
        "allowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FormatBase"
        }
      ]
    },
    "JpegFormat": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "quality",
        "isProgressive",
        "chromaSubsamplingEnabled"
      ],
      "properties": {
        "quality": {
          "type": "integer",
          "format": "int32"
        },
        "isProgressive": {
          "type": "boolean"
        },
        "chromaSubsamplingEnabled": {
          "type": "boolean"
        },
        "defaultOutputExtension": {
          "type": "string"
        },
        "allowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageFormatBase"
        }
      ]
    },
    "PngFormat": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "interlaced"
      ],
      "properties": {
        "interlaced": {
          "type": "boolean"
        },
        "defaultOutputExtension": {
          "type": "string"
        },
        "allowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageFormatBase"
        }
      ]
    },
    "TiffFormat": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "alphaPremultiplied",
        "compressionType",
        "includeUnspecifiedTiffExtraChannels"
      ],
      "properties": {
        "alphaPremultiplied": {
          "type": "boolean"
        },
        "compressionType": {
          "$ref": "#/definitions/CompressionType"
        },
        "includeUnspecifiedTiffExtraChannels": {
          "type": "boolean"
        },
        "defaultOutputExtension": {
          "type": "string"
        },
        "allowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ImageFormatBase"
        }
      ]
    },
    "CompressionType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "None",
        "Lzw",
        "Rle",
        "Zip"
      ],
      "enum": [
        "None",
        "Lzw",
        "Rle",
        "Zip"
      ]
    },
    "VideoFormatBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/FormatBase"
        }
      ]
    },
    "Mp4VideoFormat": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "preset"
      ],
      "properties": {
        "resizeAction": {
          "$ref": "#/definitions/ResizeAction2"
        },
        "audioCodec": {
          "description": "Gets or sets the encoding audio codec.",
          "allOf": [
            {
              "$ref": "#/definitions/AudioFormatBase"
            }
          ]
        },
        "preset": {
          "description": "Gets or sets the encoding codec preset.",
          "allOf": [
            {
              "$ref": "#/definitions/Preset"
            }
          ]
        },
        "defaultOutputExtension": {
          "type": "string"
        },
        "allowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/VideoFormatBase"
        }
      ]
    },
    "ResizeAction2": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "width",
        "height",
        "resizeMode"
      ],
      "properties": {
        "width": {
          "type": "integer",
          "format": "int32"
        },
        "height": {
          "type": "integer",
          "format": "int32"
        },
        "resizeMode": {
          "$ref": "#/definitions/ResizeMode"
        }
      }
    },
    "AudioFormatBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/FormatBase"
        }
      ]
    },
    "Preset": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "ultrafast",
        "superfast",
        "veryfast",
        "faster",
        "fast",
        "medium",
        "slow",
        "slower"
      ],
      "enum": [
        "ultrafast",
        "superfast",
        "veryfast",
        "faster",
        "fast",
        "medium",
        "slow",
        "slower"
      ]
    },
    "VideoPresetFormat": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "videoPresetId"
      ],
      "properties": {
        "videoPresetId": {
          "type": "string",
          "description": "Id of Squeeze preset.",
          "format": "guid"
        },
        "customerId": {
          "type": "string"
        },
        "defaultOutputExtension": {
          "type": "string"
        },
        "allowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/VideoFormatBase"
        }
      ]
    },
    "VideoSpriteFormat": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "maxNumberOfSprites",
        "quality"
      ],
      "properties": {
        "spriteResizeAction": {
          "$ref": "#/definitions/ResizeAction2"
        },
        "maxNumberOfSprites": {
          "type": "integer",
          "format": "int32"
        },
        "quality": {
          "type": "integer",
          "format": "int32"
        },
        "defaultOutputExtension": {
          "type": "string"
        },
        "allowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/VideoFormatBase"
        }
      ]
    },
    "VideoStillFormat": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "positionInSeconds"
      ],
      "properties": {
        "defaultOutputExtension": {
          "type": "string"
        },
        "allowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "positionInSeconds": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/VideoFormatBase"
        }
      ]
    },
    "AacAudioFormat": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "profile",
        "coder"
      ],
      "properties": {
        "defaultOutputExtension": {
          "type": "string"
        },
        "allowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "profile": {
          "description": "Gets or sets the encoding profile.",
          "allOf": [
            {
              "$ref": "#/definitions/Profile"
            }
          ]
        },
        "coder": {
          "description": "Gets or sets the encoding coder.",
          "allOf": [
            {
              "$ref": "#/definitions/Coder"
            }
          ]
        },
        "bitrate": {
          "type": "integer",
          "description": "Gets or sets the bitrate of the encoding.",
          "format": "int32"
        },
        "variableBitRate": {
          "type": "integer",
          "description": "Gets or sets the encoding variable bit rate (VBR) - 1 is lowest quality and 5 is highest quality.",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AudioFormatBase"
        }
      ]
    },
    "Profile": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "aac_low",
        "mpeg2_aac_low",
        "aac_ltp",
        "aac_main"
      ],
      "enum": [
        "aac_low",
        "mpeg2_aac_low",
        "aac_ltp",
        "aac_main"
      ]
    },
    "Coder": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "twoloop",
        "anmr",
        "fast"
      ],
      "enum": [
        "twoloop",
        "anmr",
        "fast"
      ]
    },
    "AudioPresetFormat": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "audioPresetId"
      ],
      "properties": {
        "audioPresetId": {
          "type": "string",
          "description": "Id of Squeeze preset.",
          "format": "guid"
        },
        "defaultOutputExtension": {
          "type": "string"
        },
        "allowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AudioFormatBase"
        }
      ]
    },
    "AudioStillFormat": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "defaultOutputExtension": {
          "type": "string"
        },
        "allowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AudioFormatBase"
        }
      ]
    },
    "Mp3AudioFormat": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "defaultOutputExtension": {
          "type": "string"
        },
        "allowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "bitrate": {
          "type": "integer",
          "description": "Gets or sets the encoding bitrate.",
          "format": "int32"
        },
        "quality": {
          "type": "integer",
          "description": "Gets or sets the encoding quality.\nValues can be set it range of 0 to 9, where a lower value is a higher quality.",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AudioFormatBase"
        }
      ]
    },
    "DocumentFormatBase": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/FormatBase"
        }
      ]
    },
    "DocumentStillFormat": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "defaultOutputExtension": {
          "type": "string"
        },
        "allowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DocumentFormatBase"
        }
      ]
    },
    "PdfFormat": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "jpegQuality",
        "fastWebView",
        "reduceFileSize",
        "extractFullText"
      ],
      "properties": {
        "jpegQuality": {
          "type": "integer",
          "description": "JpegQuality parameter value must be between 0 and 100.",
          "format": "int32"
        },
        "fastWebView": {
          "type": "boolean"
        },
        "reduceFileSize": {
          "type": "boolean"
        },
        "defaultOutputExtension": {
          "type": "string"
        },
        "allowedOutputExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "extractFullText": {
          "type": "boolean"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DocumentFormatBase"
        }
      ]
    },
    "User": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        }
      }
    },
    "ContentBackupState": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Disabled",
        "Recovery",
        "Enabled"
      ],
      "enum": [
        "Disabled",
        "Recovery",
        "Enabled"
      ]
    },
    "CustomerConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "useSsl",
        "enableQueryDetails",
        "elasticSearchNumberOfShards",
        "elasticSearchNumberOfReplicas",
        "elasticSearchNumberOfRoutingShards",
        "rootContentSearchIndexNumberOfShards",
        "rootContentSearchIndexNumberOfReplicas",
        "rootContentSearchIndexNumberOfRoutingShards",
        "rootListItemSearchIndexNumberOfShards",
        "rootListItemSearchIndexNumberOfReplicas",
        "rootListItemSearchIndexNumberOfRoutingShards",
        "indexedFieldThreshold",
        "sortableFieldThreshold",
        "redisDatabaseIndex",
        "lifeCycle",
        "contentRetentionTime",
        "listItemRetentionTime",
        "snapshotRetentionTime",
        "snapshotFullbackupScheduleTime",
        "contentBackupState"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "lifelineId": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "alias": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "mainCatalog": {
          "type": "string"
        },
        "userCatalog": {
          "type": "string"
        },
        "mailCatalog": {
          "type": "string"
        },
        "transferCatalog": {
          "type": "string"
        },
        "shareCatalog": {
          "type": "string"
        },
        "outputCatalog": {
          "type": "string"
        },
        "outputFormatCatalog": {
          "type": "string"
        },
        "channelCatalog": {
          "type": "string"
        },
        "notificationCatalog": {
          "type": "string"
        },
        "businessProcessCatalog": {
          "type": "string"
        },
        "listItemCatalog": {
          "type": "string"
        },
        "contentCatalog": {
          "type": "string"
        },
        "displayValueCatalog": {
          "type": "string"
        },
        "tokenCatalog": {
          "type": "string"
        },
        "documentHistoryCatalog": {
          "type": "string"
        },
        "liveStreamCatalog": {
          "type": "string"
        },
        "cacheCatalog": {
          "type": "string"
        },
        "schemaCatalog": {
          "type": "string"
        },
        "referenceCatalog": {
          "type": "string"
        },
        "watermarkPath": {
          "type": "string"
        },
        "logoPath": {
          "type": "string"
        },
        "storagePath": {
          "type": "string"
        },
        "contractVersion": {
          "type": "string"
        },
        "customerHosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "useSsl": {
          "type": "boolean"
        },
        "enableQueryDetails": {
          "type": "boolean"
        },
        "serviceProviders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerServiceProviderConfiguration"
          }
        },
        "supportContactEmailAddress": {
          "type": "string"
        },
        "baseUrl": {
          "type": "string"
        },
        "cdnConfiguration": {
          "$ref": "#/definitions/CdnConfigurationBase"
        },
        "elasticSearchNumberOfShards": {
          "type": "integer",
          "format": "int32"
        },
        "elasticSearchNumberOfReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "elasticSearchNumberOfRoutingShards": {
          "type": "integer",
          "format": "int32"
        },
        "rootContentSearchIndexNumberOfShards": {
          "type": "integer",
          "format": "int32"
        },
        "rootContentSearchIndexNumberOfReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "rootContentSearchIndexNumberOfRoutingShards": {
          "type": "integer",
          "format": "int32"
        },
        "rootListItemSearchIndexNumberOfShards": {
          "type": "integer",
          "format": "int32"
        },
        "rootListItemSearchIndexNumberOfReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "rootListItemSearchIndexNumberOfRoutingShards": {
          "type": "integer",
          "format": "int32"
        },
        "indexedFieldThreshold": {
          "type": "integer",
          "format": "int32"
        },
        "sortableFieldThreshold": {
          "type": "integer",
          "format": "int32"
        },
        "corsAllowedHosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "noReplyEmailAddress": {
          "type": "string"
        },
        "languageConfiguration": {
          "$ref": "#/definitions/LanguageConfiguration"
        },
        "businessProcessEngineConnectionString": {
          "type": "string"
        },
        "createTransferBusinessProcess": {
          "type": "string"
        },
        "redisDatabaseIndex": {
          "type": "integer",
          "format": "int32"
        },
        "lifeCycle": {
          "$ref": "#/definitions/LifeCycle"
        },
        "contentRetentionTime": {
          "type": "string",
          "format": "time-span"
        },
        "listItemRetentionTime": {
          "type": "string",
          "format": "time-span"
        },
        "snapshotRetentionTime": {
          "type": "string",
          "format": "time-span"
        },
        "snapshotFullbackupScheduleTime": {
          "type": "string",
          "format": "time-span"
        },
        "deactivationMessage": {
          "$ref": "#/definitions/TranslatedStringDictionary"
        },
        "superAdminUserId": {
          "type": "string"
        },
        "serviceAdminUserId": {
          "type": "string"
        },
        "contentBackupState": {
          "$ref": "#/definitions/ContentBackupState"
        }
      }
    },
    "CustomerServiceProviderConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "serviceProviderId": {
          "type": "string"
        },
        "customerId": {
          "type": "string"
        },
        "userRoleIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "settings": {
          "type": "string"
        }
      }
    },
    "LifeCycle": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Draft",
        "Active",
        "Inactive",
        "Deleted"
      ],
      "enum": [
        "Draft",
        "Active",
        "Inactive",
        "Deleted"
      ]
    },
    "PictureparkException": {
      "type": "object",
      "discriminator": "kind",
      "additionalProperties": false,
      "required": [
        "traceLevel",
        "httpStatusCode",
        "kind"
      ],
      "properties": {
        "traceLevel": {
          "$ref": "#/definitions/TraceLevel"
        },
        "traceId": {
          "type": "string"
        },
        "traceJobId": {
          "type": "string"
        },
        "httpStatusCode": {
          "type": "integer",
          "format": "int32"
        },
        "kind": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Exception"
        }
      ]
    },
    "TraceLevel": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Critical",
        "Error",
        "Warning",
        "Information",
        "Verbose"
      ],
      "enum": [
        "Critical",
        "Error",
        "Warning",
        "Information",
        "Verbose"
      ]
    },
    "Exception": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "message": {
          "type": "string"
        },
        "innerException": {
          "$ref": "#/definitions/Exception"
        },
        "stackTrace": {
          "type": "string"
        },
        "source": {
          "type": "string"
        }
      }
    },
    "PictureparkBusinessException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "customerId": {
          "type": "string"
        },
        "customerAlias": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkException"
        }
      ]
    },
    "PictureparkValidationException": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "PictureparkConflictException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "reference": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "PictureparkTimeoutException": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "PictureparkForbiddenException": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "UserEmailAlreadyExistsException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "email": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "UserRoleAssignedException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "userRoleId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "UserNotFoundException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "missingUserId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "UserInactiveOrDeletedException": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkForbiddenException"
        }
      ]
    },
    "TermsOfServiceNotNewestException": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "RenderingException": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "ServiceProviderDeleteException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "serviceProviderId": {
          "type": "string"
        },
        "detailedErrorMessage": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkException"
        }
      ]
    },
    "ServiceProviderCreateException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "userId": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "virtualHost": {
          "type": "string"
        },
        "detailErrorMessage": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkException"
        }
      ]
    },
    "ServiceProviderNotFoundException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "missingServiceProviderId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkException"
        }
      ]
    },
    "DocumentVersionNotFoundException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "documentId": {
          "type": "string"
        },
        "documentVersion": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkNotFoundException"
        }
      ]
    },
    "PictureparkNotFoundException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "reference": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "DefaultChannelDeleteException": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "ElasticVersionUpdateException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "expectedVersion": {
          "type": "string"
        },
        "actualVersion": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkException"
        }
      ]
    },
    "InvalidVersionException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "component": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkException"
        }
      ]
    },
    "EnvironmentNotDeactivatedException": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkException"
        }
      ]
    },
    "EnvironmentNotFoundException": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkException"
        }
      ]
    },
    "EnvironmentDeactivationException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "deactivationMessage": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkException"
        }
      ]
    },
    "ShareNotFoundException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "shareId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkNotFoundException"
        }
      ]
    },
    "ShareByTokenNotFoundException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "token": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkNotFoundException"
        }
      ]
    },
    "TokenGenerationException": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "retries"
      ],
      "properties": {
        "retries": {
          "type": "integer",
          "format": "int64"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "ShareExpiredException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "token": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "OutputIdNotFoundException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "outputId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkNotFoundException"
        }
      ]
    },
    "OutputNotFoundException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "contentId": {
          "type": "string"
        },
        "outputFormatId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "LeaseNotAcquiredException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "resourceId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "OperationInProgressException": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "leaseResourceType"
      ],
      "properties": {
        "leaseResourceType": {
          "$ref": "#/definitions/LeaseResourceType"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "LeaseResourceType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "SchemaEditing"
      ],
      "enum": [
        "SchemaEditing"
      ]
    },
    "RetryException": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "retries"
      ],
      "properties": {
        "retries": {
          "type": "integer",
          "format": "int32"
        },
        "innerExceptionDetail": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "OwnerTokenNotFoundException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ownerTokenUserIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkNotFoundException"
        }
      ]
    },
    "InvalidStateException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "resourceId": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "PictureparkArgumentNullException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "argumentName": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "ObjectTypeMismatchException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "InvalidStateTransitionException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "transition": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/InvalidStateException"
        }
      ]
    },
    "FailedToLockException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "resourceId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "PictureparkOperationCanceledException": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "PictureparkApplicationException": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "MissingCustomerDefaultLanguageException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "customerDefaultLanguage": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "InvalidArgumentException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "argumentName": {
          "type": "string"
        },
        "argumentValue": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "UnknownException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "exceptionDetail": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "OwnerTokenInUseException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ownerTokenUserId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "CustomerViolationException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "expectedCustomerId": {
          "type": "string"
        },
        "currentCustomerId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkException"
        }
      ]
    },
    "CustomerAliasNotFoundException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "customerAlias": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkException"
        }
      ]
    },
    "CustomerAliasInUseException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "existingCustomerId": {
          "type": "string"
        },
        "alias": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "CustomerNotDeactivatedException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "customerId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkException"
        }
      ]
    },
    "CustomerDeactivationException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "customerId": {
          "type": "string"
        },
        "deactivationMessage": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkException"
        }
      ]
    },
    "CustomerHostNotFoundException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "hostName": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkException"
        }
      ]
    },
    "CustomerNotFoundException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "customerId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkException"
        }
      ]
    },
    "CustomerNotActiveException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "customerId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkException"
        }
      ]
    },
    "ConfigurationIndexNotFoundException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "configurationIndex": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkException"
        }
      ]
    },
    "DuplicateSearchIndexDocException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "searchIndexDocId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "SearchIndexDocNotFoundException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "searchIndexDocId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "IndexDocumentNotFoundException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "indexId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "DuplicateAliasException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "indexAlias": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkException"
        }
      ]
    },
    "SearchIndexNotFoundException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "searchIndexId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "DefaultSearchIndexDeleteException": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "SearchIndexInUseException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "searchIndex": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "IndexException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "indexName": {
          "type": "string"
        },
        "debugInformation": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "IndexMappingException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "indexName": {
          "type": "string"
        },
        "debugInformation": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "DuplicatedSearchBehaviourException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "duplicatedSearchBehaviours": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SearchStringLeadingWildcardException": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "DuplicateAggregatorException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "aggregatorName": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "InvalidDateTimeFormatException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "value": {
          "type": "string"
        },
        "expectedFormat": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "InvalidSortFieldException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "fieldName": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "DocumentVersionConflictException": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "documentVersion"
      ],
      "properties": {
        "documentId": {
          "type": "string"
        },
        "documentType": {
          "type": "string"
        },
        "documentVersion": {
          "type": "integer",
          "format": "int64"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkConflictException"
        }
      ]
    },
    "RedisDatabaseExceededException": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "customerCount",
        "maxCount",
        "startIndex",
        "redisDatabaseCount"
      ],
      "properties": {
        "customerId": {
          "type": "string"
        },
        "customerCount": {
          "type": "integer",
          "format": "int32"
        },
        "maxCount": {
          "type": "integer",
          "format": "int32"
        },
        "startIndex": {
          "type": "integer",
          "format": "int32"
        },
        "redisDatabaseCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkException"
        }
      ]
    },
    "DuplicateDocumentException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "documentId": {
          "type": "string"
        },
        "documentType": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "ObjectStoreResponseException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "rowErrorMessages": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "ObjectStoreException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "rowErrorMessages": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "QueryException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "debugInformation": {
          "type": "string"
        },
        "serverError": {
          "$ref": "#/definitions/StorageServerError"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "StorageServerError": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "status"
      ],
      "properties": {
        "error": {
          "$ref": "#/definitions/StorageError"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "StorageError": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "index": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "rootCause": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageRootCause"
          }
        },
        "causedBy": {
          "$ref": "#/definitions/StorageCausedBy"
        }
      }
    },
    "StorageRootCause": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "index": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "StorageCausedBy": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "reason": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "innerCausedBy": {
          "$ref": "#/definitions/StorageCausedBy"
        }
      }
    },
    "PermissionOwnershipTransferException": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "missingUserRight"
      ],
      "properties": {
        "transferUserId": {
          "type": "string"
        },
        "missingUserRight": {
          "$ref": "#/definitions/UserRight"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "UserRight": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "ManageContent",
        "ManageSharings",
        "ManageTransfer",
        "ManageChannels",
        "ManageSchemas",
        "ManageUsers",
        "ManageUserRoles",
        "ManagePermissions",
        "ManageSearchIndexes",
        "ManageCollections",
        "ManageListItems",
        "ManageServiceProviders",
        "ManageEmbeds",
        "ManageTemplates",
        "ManageTermsOfService"
      ],
      "enum": [
        "ManageContent",
        "ManageSharings",
        "ManageTransfer",
        "ManageChannels",
        "ManageSchemas",
        "ManageUsers",
        "ManageUserRoles",
        "ManagePermissions",
        "ManageSearchIndexes",
        "ManageCollections",
        "ManageListItems",
        "ManageServiceProviders",
        "ManageEmbeds",
        "ManageTemplates",
        "ManageTermsOfService"
      ]
    },
    "PermissionSetNotFoundException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "permissionSetIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkNotFoundException"
        }
      ]
    },
    "DuplicateRightException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "permissionSetId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "PermissionValidationException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "permission": {
          "type": "string"
        },
        "operation": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "UnsupportedListItemChangeCommandException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "commandType": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "ListItemLayerException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "listItemId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "ListItemNotFoundException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "listItemIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkNotFoundException"
        }
      ]
    },
    "ListItemCyclicDependencyException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "listItemIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "DeleteListItemsWithReferencesException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "referencesList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "references": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "ListItemUpdateManyException": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "failedItemsCount",
        "totalItemsCount"
      ],
      "properties": {
        "failedItemsCount": {
          "type": "integer",
          "format": "int32"
        },
        "totalItemsCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "TransferInfoNotFoundException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "transferInfoId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkNotFoundException"
        }
      ]
    },
    "FileTransferNotFoundException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "fileTransferId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkNotFoundException"
        }
      ]
    },
    "InvalidTransferTypeException": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "transferType"
      ],
      "properties": {
        "transferType": {
          "$ref": "#/definitions/TransferType"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "TransferType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "FileUpload",
        "FileUploadAutoImport",
        "WebDownload",
        "SchemaImport"
      ],
      "enum": [
        "FileUpload",
        "FileUploadAutoImport",
        "WebDownload",
        "SchemaImport"
      ]
    },
    "TransferNotFoundException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "transferId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkNotFoundException"
        }
      ]
    },
    "WrongChunkSizeException": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "actual",
        "expected"
      ],
      "properties": {
        "actual": {
          "type": "integer",
          "format": "int64"
        },
        "expected": {
          "type": "integer",
          "format": "int64"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "MissingDependenciesException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "itemIds": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "RelationSelfReferencingException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "itemId": {
          "type": "string"
        },
        "itemType": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "InvalidChangeCommandFieldTypeInvalidException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "commandType": {
          "type": "string"
        },
        "fieldId": {
          "type": "string"
        },
        "schemaId": {
          "type": "string"
        },
        "fieldActualType": {
          "type": "string"
        },
        "fieldExpectedType": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "InvalidChangeCommandFieldNotFoundException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "commandTypeName": {
          "type": "string"
        },
        "fieldId": {
          "type": "string"
        },
        "schemaId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "InvalidChangeCommandSchemaChangeInvalidException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "commandTypeName": {
          "type": "string"
        },
        "schemaId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "InvalidMetadataException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "metadataErrors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetadataError"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "MetadataError": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "lineNumber",
        "linePosition"
      ],
      "properties": {
        "errorType": {
          "type": "string"
        },
        "lineNumber": {
          "type": "integer",
          "format": "int32"
        },
        "linePosition": {
          "type": "integer",
          "format": "int32"
        },
        "path": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "schemaId": {
          "type": "string"
        }
      }
    },
    "RelationNotFoundException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "relationId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "RelationTypeNotFoundException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "relationType": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "RelationTypeTargetDocTypeMismatchException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "relationType": {
          "type": "string"
        },
        "targetDocType": {
          "type": "string"
        },
        "expectedTargetDocType": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "AggregationNameInvalidException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "aggregationName": {
          "type": "string"
        },
        "aggregationPrefix": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaFieldOverwriteTypeMismatchException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        },
        "fieldId": {
          "type": "string"
        },
        "fieldOverwriteType": {
          "type": "string"
        },
        "fieldType": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaFieldOverwriteIdException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        },
        "fieldId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaFieldIdDuplicatedException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        },
        "fieldId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaFieldSchemaIndexInfoSimpleSearchNestingException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        },
        "fieldId": {
          "type": "string"
        },
        "relatedFieldId": {
          "type": "string"
        },
        "relatedOuterFieldId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaFieldSchemaIndexInfoNestingException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        },
        "fieldId": {
          "type": "string"
        },
        "relatedFieldId": {
          "type": "string"
        },
        "relatedOuterFieldId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaFieldIdUppercaseException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        },
        "fieldId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaIdLowercaseException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaInfoNotFoundException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkNotFoundException"
        }
      ]
    },
    "IndexedFieldThresholdExceededException": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "indexedFieldCount",
        "indexedFieldThreshold"
      ],
      "properties": {
        "schemaId": {
          "type": "string"
        },
        "indexedFieldCount": {
          "type": "number",
          "format": "double"
        },
        "indexedFieldThreshold": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SortableFieldThresholdExceededException": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "sortableFieldCount",
        "sortableFieldThreshold"
      ],
      "properties": {
        "schemaId": {
          "type": "string"
        },
        "sortableFieldCount": {
          "type": "number",
          "format": "double"
        },
        "sortableFieldThreshold": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "DuplicateSchemaInfoException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "SchemaFieldNumberRangeException": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "minValue",
        "maxValue"
      ],
      "properties": {
        "fieldId": {
          "type": "string"
        },
        "propertyName": {
          "type": "string"
        },
        "minValue": {
          "type": "number",
          "format": "decimal"
        },
        "maxValue": {
          "type": "number",
          "format": "decimal"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaInUseContentSchemaException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        },
        "contentSchemaIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaInUseListItemException": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "listItemCount"
      ],
      "properties": {
        "schemaId": {
          "type": "string"
        },
        "listItemCount": {
          "type": "integer",
          "format": "int64"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaInUseContentException": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "contentCount"
      ],
      "properties": {
        "schemaId": {
          "type": "string"
        },
        "contentCount": {
          "type": "integer",
          "format": "int64"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaInUseFieldException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        },
        "fieldNamespaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaNotFoundInSearchIndexException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "searchIndexId": {
          "type": "string"
        },
        "schemaId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "DuplicateMetadataDisplayPatternException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        },
        "displayPatternId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "DuplicateSchemaException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaImportEmptyException": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaImportVersionMismatchException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "providedVersion": {
          "type": "string"
        },
        "expectedVersion": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaCyclicDependencyException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaInheritanceFieldIndexDeviationException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaInheritanceTypeDeviationException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaValidationException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        },
        "exceptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PictureparkBusinessException"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaSortFieldException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        },
        "fieldId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaFieldIdException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        },
        "fieldId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaFieldTypeChangeException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        },
        "fieldId": {
          "type": "string"
        },
        "oldTypeName": {
          "type": "string"
        },
        "newTypeName": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaFieldIndexException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        },
        "fieldId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaFieldNotSortableException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "fieldId": {
          "type": "string"
        },
        "schemaId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaFieldNotSearchableException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "fieldId": {
          "type": "string"
        },
        "schemaId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaNoContentException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaParentChangeException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        },
        "oldSchemaParentId": {
          "type": "string"
        },
        "newSchemaParentId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaMissingTypeException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        },
        "expectedSchemaTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SchemaType"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Content",
        "Layer",
        "List",
        "Struct"
      ],
      "enum": [
        "Content",
        "Layer",
        "List",
        "Struct"
      ]
    },
    "SchemaPermissionException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaNoLayerException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaIdException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaInUseException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        },
        "exceptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PictureparkBusinessException"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaNotFoundException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkNotFoundException"
        }
      ]
    },
    "SystemSchemaInvalidModificationException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaFieldRelationSchemaSystemSchemaException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        },
        "fieldId": {
          "type": "string"
        },
        "relationSchemaId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaFieldRelationSchemaTypeUnsupportedException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        },
        "fieldId": {
          "type": "string"
        },
        "relationSchemaId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaMultipleTypesException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        },
        "schemaTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "MissingDisplayPatternForCustomerDefaultLanguageException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        },
        "missingTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DisplayPatternType"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "DisplayPatternType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Thumbnail",
        "List",
        "Detail",
        "Name"
      ],
      "enum": [
        "Thumbnail",
        "List",
        "Detail",
        "Name"
      ]
    },
    "DeleteContentsWithRelationsException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "relationList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "relations": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "ContentMetadataUpdateManyException": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "failedItemsCount",
        "totalItemsCount"
      ],
      "properties": {
        "failedItemsCount": {
          "type": "integer",
          "format": "int32"
        },
        "totalItemsCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "ContentNotFoundException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "contentIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkNotFoundException"
        }
      ]
    },
    "ContentLayerInvalidException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "contentId": {
          "type": "string"
        },
        "layerIds": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "ContentFileReplaceTypeMismatchException": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "originalContentType",
        "newContentType"
      ],
      "properties": {
        "contentId": {
          "type": "string"
        },
        "originalContentType": {
          "$ref": "#/definitions/ContentType"
        },
        "newContentType": {
          "$ref": "#/definitions/ContentType"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "ContentType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Unknown",
        "Bitmap",
        "VectorGraphic",
        "RawImage",
        "InterchangeDocument",
        "WordProcessingDocument",
        "TextDocument",
        "DesktopPublishingDocument",
        "Presentation",
        "Spreadsheet",
        "Archive",
        "Audio",
        "Video",
        "Font",
        "Multimedia",
        "Application",
        "SourceCode",
        "Database",
        "Cad",
        "Model3d",
        "ContentItem"
      ],
      "enum": [
        "Unknown",
        "Bitmap",
        "VectorGraphic",
        "RawImage",
        "InterchangeDocument",
        "WordProcessingDocument",
        "TextDocument",
        "DesktopPublishingDocument",
        "Presentation",
        "Spreadsheet",
        "Archive",
        "Audio",
        "Video",
        "Font",
        "Multimedia",
        "Application",
        "SourceCode",
        "Database",
        "Cad",
        "Model3d",
        "ContentItem"
      ]
    },
    "BusinessProcessWaitTimeoutException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "businessProcessId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkTimeoutException"
        }
      ]
    },
    "BusinessProcessEngineRequestException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "businessProcessId": {
          "type": "string"
        },
        "engineError": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "BusinessProcessNotFoundException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "businessProcessId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkNotFoundException"
        }
      ]
    },
    "BusinessProcessDefinitionNotFoundException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "processDefinitionId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkNotFoundException"
        }
      ]
    },
    "BusinessProcessDefinitionCreateException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "processDefinitionIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "SchemaFieldImportMismatchException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        },
        "importingFieldIds": {
          "type": "string"
        },
        "existingFieldIds": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaFieldImportRelatedSchemaMismatchException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        },
        "fieldId": {
          "type": "string"
        },
        "importingRelatedSchemaId": {
          "type": "string"
        },
        "existingRelatedSchemaId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SchemaFieldImportTypeMismatchException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "schemaId": {
          "type": "string"
        },
        "fieldId": {
          "type": "string"
        },
        "importingFieldType": {
          "type": "string"
        },
        "existingFieldType": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "SnapshotTimeoutException": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkTimeoutException"
        }
      ]
    },
    "SnapshotFailedException": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "AddMetadataLanguageTimeoutException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "environmentProcessId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkTimeoutException"
        }
      ]
    },
    "EnvironmentProcessAlreadyRunningException": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "environmentProcessType"
      ],
      "properties": {
        "environmentProcessType": {
          "$ref": "#/definitions/EnvironmentProcessType"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkValidationException"
        }
      ]
    },
    "EnvironmentProcessType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "AddMetadataLanguage",
        "CustomerUpdate",
        "EnvironmentUpdate"
      ],
      "enum": [
        "AddMetadataLanguage",
        "CustomerUpdate",
        "EnvironmentUpdate"
      ]
    },
    "EnvironmentProcessNotFoundException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "environmentProcessId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkNotFoundException"
        }
      ]
    },
    "EnvironmentProcessWaitTimeoutException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "environmentProcessId": {
          "type": "string"
        },
        "waitedLifecycles": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkTimeoutException"
        }
      ]
    },
    "NoTermsOfServiceDefinedException": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkBusinessException"
        }
      ]
    },
    "BusinessProcessStateNotHitException": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "businessProcessId": {
          "type": "string"
        },
        "expected": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "actual": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkTimeoutException"
        }
      ]
    },
    "BusinessProcessLifeCycleNotHitException": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "actual"
      ],
      "properties": {
        "businessProcessId": {
          "type": "string"
        },
        "expected": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessProcessLifeCycle"
          }
        },
        "actual": {
          "$ref": "#/definitions/BusinessProcessLifeCycle"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PictureparkTimeoutException"
        }
      ]
    },
    "BusinessProcessLifeCycle": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Draft",
        "InProgress",
        "Succeeded",
        "Cancelled",
        "CancellationInProgress",
        "Failed",
        "SucceededWithErrors"
      ],
      "enum": [
        "Draft",
        "InProgress",
        "Succeeded",
        "Cancelled",
        "CancellationInProgress",
        "Failed",
        "SucceededWithErrors"
      ]
    },
    "CustomerUpdateRequest": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "lifeCycle",
        "backupEnabled",
        "contentRetentionTime",
        "listItemRetentionTime",
        "snapshotRetentionTime",
        "snapshotFullbackupScheduleTime",
        "useSsl",
        "enableQueryDetails"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "lifeCycle": {
          "$ref": "#/definitions/LifeCycle"
        },
        "deactivationMessage": {
          "$ref": "#/definitions/TranslatedStringDictionary"
        },
        "backupEnabled": {
          "type": "boolean"
        },
        "customerHosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contentRetentionTime": {
          "type": "string",
          "format": "time-span"
        },
        "listItemRetentionTime": {
          "type": "string",
          "format": "time-span"
        },
        "snapshotRetentionTime": {
          "type": "string",
          "format": "time-span"
        },
        "snapshotFullbackupScheduleTime": {
          "type": "string",
          "format": "time-span"
        },
        "useSsl": {
          "type": "boolean"
        },
        "enableQueryDetails": {
          "type": "boolean"
        },
        "cdnConfiguration": {
          "$ref": "#/definitions/CdnConfigurationBase"
        },
        "baseUrl": {
          "type": "string"
        },
        "watermarkPath": {
          "type": "string"
        },
        "logoPath": {
          "type": "string"
        },
        "supportContactEmailAddress": {
          "type": "string"
        },
        "corsAllowedHosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "noReplyEmailAddress": {
          "type": "string"
        },
        "indexedFieldThreshold": {
          "type": "integer",
          "format": "int32"
        },
        "sortableFieldThreshold": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CustomerSearchResult": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/BaseResultOfCustomer"
        }
      ]
    },
    "BaseResultOfCustomer": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "totalResults"
      ],
      "properties": {
        "totalResults": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Customer"
          }
        },
        "pageToken": {
          "type": "string"
        },
        "queryDebugInformation": {
          "$ref": "#/definitions/QueryDebugInformation"
        }
      }
    },
    "Customer": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "lifeCycle"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "alias": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "deactivationComment": {
          "type": "string"
        },
        "customerHosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "mainCatalog": {
          "type": "string"
        },
        "contractVersion": {
          "type": "string"
        },
        "storagePath": {
          "type": "string"
        },
        "watermarkPath": {
          "type": "string"
        },
        "logoPath": {
          "type": "string"
        },
        "lifeCycle": {
          "$ref": "#/definitions/LifeCycle"
        }
      }
    },
    "QueryDebugInformation": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "general": {
          "type": "string"
        },
        "auditTrail": {
          "type": "string"
        },
        "request": {},
        "response": {}
      }
    },
    "CustomerSearchRequest": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "start",
        "limit"
      ],
      "properties": {
        "searchString": {
          "type": "string"
        },
        "start": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "filter": {
          "$ref": "#/definitions/FilterBase"
        }
      }
    },
    "FilterBase": {
      "type": "object",
      "discriminator": "kind",
      "description": "The FilterBase is the base class for all filters.",
      "additionalProperties": false,
      "required": [
        "kind"
      ],
      "properties": {
        "kind": {
          "type": "string"
        }
      }
    },
    "AndFilter": {
      "type": "object",
      "description": "The AndFilter&gt; is a compound filter and returns documents that match all of the specified filters.",
      "additionalProperties": false,
      "properties": {
        "filters": {
          "type": "array",
          "description": "Accepts all filters.",
          "items": {
            "$ref": "#/definitions/FilterBase"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ]
    },
    "OrFilter": {
      "type": "object",
      "description": "The OrFilter is a compound filter and returns documents that match any of the specified filters.",
      "additionalProperties": false,
      "properties": {
        "filters": {
          "type": "array",
          "description": "Accepts all filters.",
          "items": {
            "$ref": "#/definitions/FilterBase"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ]
    },
    "NotFilter": {
      "type": "object",
      "description": "The NotFilter is a compound filter and returns documents that do not match the specified filter.",
      "additionalProperties": false,
      "properties": {
        "filter": {
          "description": "Limits the result set.",
          "allOf": [
            {
              "$ref": "#/definitions/FilterBase"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ]
    },
    "DateRangeFilter": {
      "type": "object",
      "description": "The DateRangeFilter returns documents with fields that have date values within a certain range.",
      "additionalProperties": false,
      "properties": {
        "field": {
          "type": "string",
          "description": "The elastic search index field to execute the filter on."
        },
        "range": {
          "description": "The date range. Supported pattern: now(+-)(int)(YMDHm).",
          "allOf": [
            {
              "$ref": "#/definitions/DateRange"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ]
    },
    "DateRange": {
      "type": "object",
      "description": "The date range class used in aggregators and filters.",
      "additionalProperties": false,
      "properties": {
        "names": {
          "description": "Tranlsated range names.",
          "allOf": [
            {
              "$ref": "#/definitions/TranslatedStringDictionary"
            }
          ]
        },
        "from": {
          "type": "string",
          "description": "The from value can be a datetime string or a pattern now(+-)(int)(YMDHm)."
        },
        "to": {
          "type": "string",
          "description": "The to value can be a datetime string or a pattern now(+-)(int)(YMDHm)."
        }
      }
    },
    "ExistsFilter": {
      "type": "object",
      "description": "The ExistsFilter returns documents that have at least one non-null value in the original field.",
      "additionalProperties": false,
      "properties": {
        "field": {
          "type": "string",
          "description": "The elastic search index field to execute the filter on."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ]
    },
    "GeoBoundingBoxFilter": {
      "type": "object",
      "description": "The GeoBoundingBoxFilter returns documents that are found based on a point location using a bounding box.",
      "additionalProperties": false,
      "properties": {
        "field": {
          "type": "string",
          "description": "The elastic search index field to execute the filter on."
        },
        "topLeft": {
          "description": "The top left longitude/latitude configuration.",
          "allOf": [
            {
              "$ref": "#/definitions/GeoLocation"
            }
          ]
        },
        "bottomRight": {
          "description": "The bottom right longitude/latitude configuration.",
          "allOf": [
            {
              "$ref": "#/definitions/GeoLocation"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ]
    },
    "GeoLocation": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "lat",
        "lon"
      ],
      "properties": {
        "lat": {
          "type": "number",
          "format": "double"
        },
        "lon": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "GeoDistanceFilter": {
      "type": "object",
      "description": "The GeoDistanceFilter returns documents that include only hits that exists within a specific distance from a geo point.",
      "additionalProperties": false,
      "required": [
        "distance"
      ],
      "properties": {
        "field": {
          "type": "string",
          "description": "The elastic search index field to execute the filter on."
        },
        "location": {
          "description": "The longitude/latitude configuration for the point of origin.",
          "allOf": [
            {
              "$ref": "#/definitions/GeoLocation"
            }
          ]
        },
        "distance": {
          "type": "number",
          "description": "The range distance in meters.",
          "format": "double"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ]
    },
    "NestedFilter": {
      "type": "object",
      "description": "The NestedFilter is a joining filter and returns documents whose nested objects / documents (see nested mapping) match the specified filter.",
      "additionalProperties": false,
      "properties": {
        "path": {
          "type": "string",
          "description": "The path pointing to the nested object."
        },
        "filter": {
          "description": "Limits the result set.",
          "allOf": [
            {
              "$ref": "#/definitions/FilterBase"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ]
    },
    "NumericRangeFilter": {
      "type": "object",
      "description": "The NumericRangeFilter returns documents with fields that have numeric values within a certain range.",
      "additionalProperties": false,
      "properties": {
        "field": {
          "type": "string",
          "description": "The elastic search index field to execute the filter on."
        },
        "range": {
          "description": "The numeric range with from and to properties.",
          "allOf": [
            {
              "$ref": "#/definitions/NumericRange"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ]
    },
    "NumericRange": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "names": {
          "description": "Tranlsated range names.",
          "allOf": [
            {
              "$ref": "#/definitions/TranslatedStringDictionary"
            }
          ]
        },
        "from": {
          "type": "number",
          "description": "The from value.",
          "format": "double"
        },
        "to": {
          "type": "number",
          "description": "The to value.",
          "format": "double"
        }
      }
    },
    "PrefixFilter": {
      "type": "object",
      "description": "The PrefixFilter returns documents that have fields containing terms with a specified prefix (not analyzed).",
      "additionalProperties": false,
      "properties": {
        "field": {
          "type": "string",
          "description": "The elastic search index field to execute the filter on."
        },
        "prefix": {
          "type": "string",
          "description": "The prefix term to filter on."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ]
    },
    "TermFilter": {
      "type": "object",
      "description": "The TermFilter returns documents that contain the exact term specified in the inverted index.",
      "additionalProperties": false,
      "properties": {
        "field": {
          "type": "string",
          "description": "The elastic search index field to execute the filter on."
        },
        "term": {
          "type": "string",
          "description": "The term to filter on."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ]
    },
    "TermsFilter": {
      "type": "object",
      "description": "The TermsFilter returns documents that have fields that match any of the provided terms (not analyzed).",
      "additionalProperties": false,
      "properties": {
        "field": {
          "type": "string",
          "description": "The elastic search index field to execute the filter on."
        },
        "terms": {
          "type": "array",
          "description": "A list of OR combined terms.",
          "items": {
            "type": "string"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ]
    },
    "AggregationFilter": {
      "type": "object",
      "description": "An AggregationFilter is provided with each aggregated value. When selecting the aggregated value the aggregation filter is added to the search query and returns doucments meeting the aggregation condition.",
      "additionalProperties": false,
      "properties": {
        "aggregationName": {
          "type": "string",
          "description": "The name of the aggregation this filter is connected to."
        },
        "filter": {
          "description": "The aggregation filter property. Available filters are TermFilter, DateRangeFilter, NumericRangeFilter, GeoDistanceFilter and NestedFilter.",
          "allOf": [
            {
              "$ref": "#/definitions/FilterBase"
            }
          ]
        },
        "temporaryAggregatorRequestId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ]
    },
    "ChildFilter": {
      "type": "object",
      "description": "The ChildFilter allows to apply filters on child documents and returns documents that match the specified filter on the child document.",
      "additionalProperties": false,
      "properties": {
        "childType": {
          "type": "string",
          "description": "The elastic search index type to filter as a child."
        },
        "filter": {
          "description": "The filter to apply on the child entity. It accepts all filters.",
          "allOf": [
            {
              "$ref": "#/definitions/FilterBase"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ]
    },
    "ParentFilter": {
      "type": "object",
      "description": "The ParentFilter allows to apply filters on parent documents and returns documents that match the specified filter on the parent document.",
      "additionalProperties": false,
      "properties": {
        "parentType": {
          "type": "string",
          "description": "The elastic search index type to filter as a parent."
        },
        "filter": {
          "description": "The filter to apply on the child entity. It accepts all filters.",
          "allOf": [
            {
              "$ref": "#/definitions/FilterBase"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/FilterBase"
        }
      ]
    },
    "SearchIndexReindexRequest": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "numberOfShards",
        "numberOfReplicas",
        "numberOfRoutingShards"
      ],
      "properties": {
        "searchIndexId": {
          "type": "string"
        },
        "numberOfShards": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfRoutingShards": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Index": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "numberOfShards",
        "numberOfReplicas",
        "numberOfRoutingShards",
        "indexType",
        "state"
      ],
      "properties": {
        "customerId": {
          "type": "string"
        },
        "indexName": {
          "type": "string"
        },
        "indexAlias": {
          "type": "string"
        },
        "numberOfShards": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfRoutingShards": {
          "type": "integer",
          "format": "int32"
        },
        "indexType": {
          "$ref": "#/definitions/IndexType"
        },
        "state": {
          "$ref": "#/definitions/IndexState"
        },
        "businessProcessId": {
          "type": "string"
        }
      }
    },
    "IndexType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Configuration",
        "Main",
        "Cache",
        "ContentSearch",
        "ListItemSearch",
        "DocumentHistory",
        "LiveStream",
        "User",
        "Mail",
        "Transfer",
        "Share",
        "Output",
        "Notification",
        "BusinessProcess",
        "ListItem",
        "Content",
        "Token",
        "DisplayValue",
        "Schema",
        "OutputFormat",
        "Channel",
        "Reference"
      ],
      "enum": [
        "Configuration",
        "Main",
        "Cache",
        "ContentSearch",
        "ListItemSearch",
        "DocumentHistory",
        "LiveStream",
        "User",
        "Mail",
        "Transfer",
        "Share",
        "Output",
        "Notification",
        "BusinessProcess",
        "ListItem",
        "Content",
        "Token",
        "DisplayValue",
        "Schema",
        "OutputFormat",
        "Channel",
        "Reference"
      ]
    },
    "IndexState": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Draft",
        "Create",
        "Inactive",
        "Active",
        "Closed",
        "ReindexInProgress",
        "Cancelled"
      ],
      "enum": [
        "Draft",
        "Create",
        "Inactive",
        "Active",
        "Closed",
        "ReindexInProgress",
        "Cancelled"
      ]
    },
    "CustomerMetadataLanguageCreateRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "language": {
          "type": "string"
        }
      }
    },
    "EnvironmentProcess": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "processType",
        "lifeCycle",
        "startDate",
        "endDate"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "customerId": {
          "type": "string"
        },
        "processType": {
          "$ref": "#/definitions/EnvironmentProcessType"
        },
        "lifeCycle": {
          "$ref": "#/definitions/EnvironmentProcessLifeCycle"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "error": {
          "$ref": "#/definitions/ErrorResponse"
        },
        "data": {
          "$ref": "#/definitions/EnvironmentProcessDataViewItemBase"
        }
      }
    },
    "EnvironmentProcessLifeCycle": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Draft",
        "InProgress",
        "Succeeded",
        "Cancelled",
        "CancellationInProgress",
        "Failed",
        "Acknowledged"
      ],
      "enum": [
        "Draft",
        "InProgress",
        "Succeeded",
        "Cancelled",
        "CancellationInProgress",
        "Failed",
        "Acknowledged"
      ]
    },
    "ErrorResponse": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "exception": {
          "type": "string"
        },
        "traceId": {
          "type": "string"
        },
        "traceJobId": {
          "type": "string"
        }
      }
    },
    "EnvironmentProcessDataViewItemBase": {
      "type": "object",
      "discriminator": "kind",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "kind"
      ],
      "properties": {
        "kind": {
          "type": "string"
        }
      }
    },
    "EnvironmentProcessAddMetadataLanguageData": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "state"
      ],
      "properties": {
        "state": {
          "$ref": "#/definitions/AddMetadataLanguageState"
        },
        "language": {
          "type": "string"
        },
        "stateHistory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentProcessState"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EnvironmentProcessDataViewItemBase"
        }
      ]
    },
    "AddMetadataLanguageState": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Draft",
        "InProgress",
        "CustomerExported",
        "CustomerUpdated",
        "MasterDataReindexed",
        "RedisCacheRestored",
        "TranslationsForSystemEntitiesAdded",
        "SortingFallbackApplied",
        "SearchIndexesReindexed",
        "Succeeded",
        "Cancelled",
        "Failed"
      ],
      "enum": [
        "Draft",
        "InProgress",
        "CustomerExported",
        "CustomerUpdated",
        "MasterDataReindexed",
        "RedisCacheRestored",
        "TranslationsForSystemEntitiesAdded",
        "SortingFallbackApplied",
        "SearchIndexesReindexed",
        "Succeeded",
        "Cancelled",
        "Failed"
      ]
    },
    "EnvironmentProcessState": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "timestamp"
      ],
      "properties": {
        "state": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "result": {
          "type": "string"
        }
      }
    },
    "EnvironmentProcessCustomerUpdateData": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "state"
      ],
      "properties": {
        "state": {
          "$ref": "#/definitions/CustomerUpdateState"
        },
        "targetVersion": {
          "type": "string"
        },
        "stateHistory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentProcessState"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EnvironmentProcessDataViewItemBase"
        }
      ]
    },
    "CustomerUpdateState": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Draft",
        "InProgress",
        "CustomerExported",
        "Succeeded",
        "Cancelled",
        "Failed"
      ],
      "enum": [
        "Draft",
        "InProgress",
        "CustomerExported",
        "Succeeded",
        "Cancelled",
        "Failed"
      ]
    },
    "EnvironmentProcessEnvironmentUpdateData": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "state"
      ],
      "properties": {
        "state": {
          "$ref": "#/definitions/EnvironmentUpdateState"
        },
        "targetVersion": {
          "type": "string"
        },
        "stateHistory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentProcessState"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/EnvironmentProcessDataViewItemBase"
        }
      ]
    },
    "EnvironmentUpdateState": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Draft",
        "InProgress",
        "Succeeded",
        "Cancelled",
        "Failed"
      ],
      "enum": [
        "Draft",
        "InProgress",
        "Succeeded",
        "Cancelled",
        "Failed"
      ]
    },
    "NodeInfo": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "lastResponseTime"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "hostName": {
          "type": "string"
        },
        "lastResponseTime": {
          "type": "string",
          "format": "date-time"
        },
        "serviceName": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "versionInfo": {
          "type": "string"
        },
        "release": {
          "type": "string"
        },
        "logLevel": {
          "type": "string"
        }
      }
    },
    "UpdateInfo": {
      "type": "object",
      "description": "The UpdateInfoViewItem is the view item for update commands.",
      "additionalProperties": false,
      "required": [
        "creationDate"
      ],
      "properties": {
        "updateVersion": {
          "type": "string",
          "description": "The version of the update command."
        },
        "objectStoreVersion": {
          "type": "string",
          "description": "The version of the object store (elastic search) at the time of the update command creation."
        },
        "creationDate": {
          "type": "string",
          "description": "The creation date of the update command.",
          "format": "date-time"
        },
        "description": {
          "type": "string",
          "description": "The description of the update command."
        },
        "creator": {
          "type": "string",
          "description": "The creator of the update command."
        }
      }
    },
    "VersionInfo": {
      "type": "object",
      "description": "The version view item for the environment.",
      "additionalProperties": false,
      "properties": {
        "fileVersion": {
          "type": "string",
          "description": "The manual file version of Picturepark.Contract.dll."
        },
        "fileProductVersion": {
          "type": "string",
          "description": "The GitVersionTask generated file product version of Picturepark.Configuration.dll."
        },
        "contractVersion": {
          "type": "string",
          "description": "The current contract version stored in CustomerDoc / EnvironmentDoc."
        },
        "release": {
          "type": "string",
          "description": "The bamboo release version. Only provided on bamboo deployments."
        }
      }
    },
    "ReactivationEnvironmentRequest": {
      "type": "object",
      "additionalProperties": false
    },
    "DeactivationEnvironmentRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "deactivationMessage": {
          "description": "Language specific deactivation messages.",
          "allOf": [
            {
              "$ref": "#/definitions/TranslatedStringDictionary"
            }
          ]
        }
      }
    },
    "UpdateEnvironmentRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "targetVersion": {
          "type": "string",
          "description": "The maximal target version.\nIn case the highest available update version is lower than the desired target version, the environments's contract version will be raised to the highest available update version."
        }
      }
    },
    "CustomerVersionInfo": {
      "type": "object",
      "description": "The version view item for the customer.",
      "additionalProperties": false,
      "properties": {
        "customerId": {
          "type": "string",
          "description": "The customer id."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/VersionInfo"
        }
      ]
    },
    "ReactivationCustomerRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "customerId": {
          "type": "string",
          "description": "The customer id."
        }
      }
    },
    "DeactivationCustomerRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "customerId": {
          "type": "string",
          "description": "The customer id."
        },
        "deactivationMessage": {
          "description": "Language specific deactivation messages.",
          "allOf": [
            {
              "$ref": "#/definitions/TranslatedStringDictionary"
            }
          ]
        }
      }
    },
    "UpdateCustomerRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "targetVersion": {
          "type": "string",
          "description": "The maximal target version.\nIn case the highest available update version is lower than the desired target version, the customer's contract version will be raised to the highest available update version."
        },
        "customerId": {
          "type": "string",
          "description": "The customer id."
        }
      }
    },
    "SnapshotRepositoryCustomerCreateRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "customerAlias": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SnapshotRepositoryBaseCreateRequest"
        }
      ]
    },
    "SnapshotRepositoryBaseCreateRequest": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "startTime"
      ],
      "properties": {
        "repositoryName": {
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SnapshotRepository": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "entityType",
        "isArchived"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "entityId": {
          "type": "string"
        },
        "entityType": {
          "$ref": "#/definitions/BackupEntityType"
        },
        "isArchived": {
          "type": "boolean"
        }
      }
    },
    "BackupEntityType": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Enviroment",
        "Customer"
      ],
      "enum": [
        "Enviroment",
        "Customer"
      ]
    },
    "SnapshotCustomerCreateRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "customerAlias": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SnapshotBaseCreateRequest"
        }
      ]
    },
    "SnapshotBaseCreateRequest": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "required": [
        "snapshotInactive",
        "reason",
        "timestamp"
      ],
      "properties": {
        "snapshotName": {
          "type": "string",
          "description": "The SnapshotName. Must be unique.\nThe name usually will be enriched with Reason, ContractVersion and DateTime information."
        },
        "repositoryName": {
          "type": "string",
          "description": "The Repository in which the snapshot will be created."
        },
        "indices": {
          "type": "array",
          "description": "The Indices being part of the snapshot.",
          "items": {
            "type": "string"
          }
        },
        "snapshotInactive": {
          "type": "boolean",
          "description": "Snapshot also if the entity is inactive."
        },
        "reason": {
          "description": "The snapshot backup reason will be added to the snapshot name.",
          "allOf": [
            {
              "$ref": "#/definitions/BackupReason"
            }
          ]
        },
        "timestamp": {
          "type": "string",
          "description": "Timestamp when creating the requst (utc). If there is a more recent snapshot in the repository, it will keep/return the latest one,\ninstead of creating a new one.",
          "format": "date-time"
        },
        "tokenId": {
          "type": "string"
        }
      }
    },
    "BackupReason": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Custom",
        "Update",
        "Deletion"
      ],
      "enum": [
        "Custom",
        "Update",
        "Deletion"
      ]
    },
    "SnapshotEnqueueResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "tokenId": {
          "type": "string"
        }
      }
    },
    "SnapshotCustomerRestoreRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "customerAlias": {
          "type": "string"
        },
        "customerId": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/SnapshotBaseRestoreRequest"
        }
      ]
    },
    "SnapshotBaseRestoreRequest": {
      "type": "object",
      "x-abstract": true,
      "additionalProperties": false,
      "properties": {
        "snapshotName": {
          "type": "string"
        },
        "repositoryName": {
          "type": "string"
        },
        "indices": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SnapshotRestore": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "restoreDate"
      ],
      "properties": {
        "restoreDate": {
          "type": "string",
          "format": "date-time"
        },
        "repositoryName": {
          "type": "string"
        },
        "snapshotName": {
          "type": "string"
        },
        "indices": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SnapshotRepositoryEnvironmentCreateRequest": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/SnapshotRepositoryBaseCreateRequest"
        }
      ]
    },
    "SnapshotEnvironmentCreateRequest": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/SnapshotBaseCreateRequest"
        }
      ]
    },
    "SnapshotEnvironmentRestoreRequest": {
      "type": "object",
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/SnapshotBaseRestoreRequest"
        }
      ]
    },
    "SnapshotCustomerSearchRequest": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "start",
        "limit"
      ],
      "properties": {
        "searchString": {
          "type": "string"
        },
        "start": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "repositoryNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customerAlias": {
          "type": "string"
        },
        "customerId": {
          "type": "string"
        }
      }
    },
    "SnapshotCustomerSearchResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "elapsedMilliseconds"
      ],
      "properties": {
        "elapsedMilliseconds": {
          "type": "integer",
          "format": "int64"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BaseResultOfSnapshot"
        }
      ]
    },
    "BaseResultOfSnapshot": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "totalResults"
      ],
      "properties": {
        "totalResults": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Snapshot"
          }
        },
        "pageToken": {
          "type": "string"
        },
        "queryDebugInformation": {
          "$ref": "#/definitions/QueryDebugInformation"
        }
      }
    },
    "Snapshot": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "durationInMilliseconds",
        "endTime",
        "endTimeInMilliseconds",
        "repositoryStartTime",
        "repositoryIsArchived",
        "startTime",
        "startTimeInMilliseconds",
        "entityType",
        "restoreDate"
      ],
      "properties": {
        "durationInMilliseconds": {
          "type": "integer",
          "description": "The snapshot creation DurationInMilliseconds.",
          "format": "int64"
        },
        "endTime": {
          "type": "string",
          "description": "The snapshot EndTime.",
          "format": "date-time"
        },
        "endTimeInMilliseconds": {
          "type": "integer",
          "description": "The snapshot EndTimeInMilliseconds.",
          "format": "int64"
        },
        "failures": {
          "type": "array",
          "description": "The snapshot elastic search shard Falures.",
          "items": {
            "$ref": "#/definitions/SnapshotShardFailure"
          }
        },
        "indices": {
          "type": "array",
          "description": "The snapshot Indices.",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "description": "The snapshot Name."
        },
        "repositoryName": {
          "type": "string",
          "description": "The repository name."
        },
        "repositoryStartTime": {
          "type": "string",
          "description": "The repository start time.",
          "format": "date-time"
        },
        "repositoryIsArchived": {
          "type": "boolean",
          "description": "Is the repository already archived?"
        },
        "startTime": {
          "type": "string",
          "description": "The snapshot StartTime.",
          "format": "date-time"
        },
        "startTimeInMilliseconds": {
          "type": "integer",
          "description": "The snapshot StartTimeInMilliseconds.",
          "format": "int64"
        },
        "state": {
          "type": "string",
          "description": "The snapshot State."
        },
        "entityId": {
          "type": "string"
        },
        "entityType": {
          "$ref": "#/definitions/BackupEntityType"
        },
        "restoreDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SnapshotShardFailure": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "index": {
          "type": "string",
          "description": "The Index having the shard failure."
        },
        "nodeId": {
          "type": "string",
          "description": "The elastic search NodeId."
        },
        "reason": {
          "type": "string",
          "description": "The elastic serach shard failure Reason."
        },
        "shardId": {
          "type": "string",
          "description": "The failing elastic search ShardId."
        },
        "status": {
          "type": "string",
          "description": "The snapshot failure status."
        }
      }
    },
    "SnapshotRepositoryCustomerSearchRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "customerId": {
          "type": "string"
        },
        "customerAlias": {
          "type": "string"
        }
      }
    },
    "SnapshotRepositorySearchResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "totalResults"
      ],
      "properties": {
        "totalResults": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SnapshotRepository"
          }
        }
      }
    },
    "SnapshotRepositoryEnvironmentSearchRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "environmentId": {
          "type": "string"
        }
      }
    },
    "SnapshotCustomerCloneRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "snapshotName": {
          "type": "string"
        },
        "repositoryName": {
          "type": "string"
        },
        "sourceCustomerAlias": {
          "type": "string"
        },
        "customerName": {
          "type": "string"
        },
        "customerAlias": {
          "type": "string"
        },
        "customerHosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "corsAllowedHosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "storagePath": {
          "type": "string"
        },
        "baseUrl": {
          "type": "string"
        },
        "redirectUri": {
          "type": "string"
        }
      }
    },
    "SnapshotsCleanupResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "cleanupTime"
      ],
      "properties": {
        "repositories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cleanupTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CustomerExportRequest": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "keepRepository"
      ],
      "properties": {
        "customerAlias": {
          "type": "string"
        },
        "keepRepository": {
          "type": "boolean"
        }
      }
    },
    "CustomerExportResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "customerId": {
          "type": "string"
        },
        "repositoryName": {
          "type": "string"
        },
        "snapshotName": {
          "type": "string"
        }
      }
    },
    "UserDeveloperFlagUpdateRequest": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "isDeveloper"
      ],
      "properties": {
        "userId": {
          "type": "string"
        },
        "isDeveloper": {
          "type": "boolean"
        }
      }
    },
    "DataGenerationCreateRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "sampleRootPath": {
          "type": "string"
        },
        "superUserEmailAddress": {
          "type": "string"
        },
        "usersAndRoles": {
          "$ref": "#/definitions/DataGenerationUsersAndUserRoles"
        },
        "contents": {
          "$ref": "#/definitions/DataGenerationContents"
        },
        "basicShares": {
          "$ref": "#/definitions/DataGenerationBasicShares"
        },
        "schemas": {
          "$ref": "#/definitions/DataGenerationSchemas"
        },
        "contentSchemas": {
          "$ref": "#/definitions/DataGenerationContentSchemas"
        },
        "contentPermissionSets": {
          "$ref": "#/definitions/DataGenerationContentPermissionSets"
        },
        "schemaPermissionSets": {
          "$ref": "#/definitions/DataGenerationSchemaPermissionSets"
        },
        "tags": {
          "$ref": "#/definitions/DataGenerationTags"
        },
        "referencedFields": {
          "$ref": "#/definitions/DataGenerationReferencedFields"
        }
      }
    },
    "DataGenerationUsersAndUserRoles": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "numberOfUsers",
        "numberOfUserRoles",
        "userRoleGrantedMax",
        "userRightGrantedAverage"
      ],
      "properties": {
        "numberOfUsers": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfUserRoles": {
          "type": "integer",
          "format": "int32"
        },
        "userRoleGrantedMax": {
          "type": "integer",
          "format": "int32"
        },
        "userRightGrantedAverage": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "DataGenerationContents": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "numberOfContents",
        "transferSize",
        "numberOfUsersWithContents",
        "copySampleFiles",
        "renderOutputs",
        "maxConcurrentTransfers",
        "numberOfContentPermissionSets",
        "includeTroubleMakerFiles",
        "numberOfSchemasPerContent"
      ],
      "properties": {
        "numberOfContents": {
          "type": "integer",
          "format": "int32"
        },
        "transferSize": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfUsersWithContents": {
          "type": "integer",
          "format": "int32"
        },
        "copySampleFiles": {
          "type": "boolean"
        },
        "renderOutputs": {
          "type": "boolean"
        },
        "maxConcurrentTransfers": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfContentPermissionSets": {
          "type": "integer",
          "format": "int32"
        },
        "includeTroubleMakerFiles": {
          "type": "boolean"
        },
        "numberOfSchemasPerContent": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DataGenerationBasicShares": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "shareBatchSizePerCreator",
        "numberOfShareCreators",
        "numberOfInternalRecipientsPerShare",
        "numberOfContentsPerShare"
      ],
      "properties": {
        "shareBatchSizePerCreator": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfShareCreators": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfInternalRecipientsPerShare": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfContentsPerShare": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DataGenerationSchemas": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "numberOfSchemas",
        "numberOfFieldsPerSchema",
        "numberOfSchemaPermissionSets"
      ],
      "properties": {
        "numberOfSchemas": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfFieldsPerSchema": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfSchemaPermissionSets": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DataGenerationContentSchemas": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "numberOfContentSchemas",
        "numberOfFieldsPerContentSchemas",
        "numberOfSchemaPermissionSets"
      ],
      "properties": {
        "numberOfContentSchemas": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfFieldsPerContentSchemas": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfSchemaPermissionSets": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DataGenerationContentPermissionSets": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "numberOfSets",
        "numberOfRolesPerSet"
      ],
      "properties": {
        "numberOfSets": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfRolesPerSet": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DataGenerationSchemaPermissionSets": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "numberOfSets",
        "numberOfRolesPerSet"
      ],
      "properties": {
        "numberOfSets": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfRolesPerSet": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DataGenerationTags": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "numberOfSchemas",
        "numberOfFieldsPerSchema",
        "numberOfListItems",
        "numberOfPermissionSets"
      ],
      "properties": {
        "numberOfSchemas": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfFieldsPerSchema": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfListItems": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfPermissionSets": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DataGenerationReferencedFields": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "searchLevel",
        "numberOfSingleTagboxesPerSchema"
      ],
      "properties": {
        "searchLevel": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfSingleTagboxesPerSchema": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ServiceProviderCreateRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "externalId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "applicationKey": {
          "type": "string"
        },
        "messageQueueUser": {
          "type": "string"
        },
        "messageQueuePassword": {
          "type": "string"
        },
        "baseUrl": {
          "type": "string"
        }
      }
    },
    "ServiceProvider": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "applicationKey": {
          "type": "string"
        },
        "virtualHost": {
          "type": "string"
        },
        "baseUrl": {
          "type": "string"
        }
      }
    },
    "CustomerServiceProviderCreateRequest": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "customerAlias": {
          "type": "string"
        },
        "customerId": {
          "type": "string"
        },
        "serviceProvider": {
          "$ref": "#/definitions/CustomerServiceProvider"
        }
      }
    },
    "EnvironmentConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "lifeCycle"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The environment configuration id."
        },
        "contractVersion": {
          "type": "string",
          "description": "The contract version of the environment configuration."
        },
        "lifeCycle": {
          "description": "Curent lifecycle state of the entity.",
          "allOf": [
            {
              "$ref": "#/definitions/LifeCycle"
            }
          ]
        },
        "deactivationMessage": {
          "description": "Language specific deactivation messages.",
          "allOf": [
            {
              "$ref": "#/definitions/TranslatedStringDictionary"
            }
          ]
        }
      }
    },
    "EnvironmentProcessWaitResult": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "lifeCycleHit": {
          "$ref": "#/definitions/EnvironmentProcessLifeCycle"
        },
        "environmentProcess": {
          "$ref": "#/definitions/EnvironmentProcess"
        }
      }
    },
    "EnvironmentProcessSearchRequest": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "start",
        "limit"
      ],
      "properties": {
        "start": {
          "type": "integer",
          "description": "Defines the offset from the first result you want to fetch. Defaults to 0.",
          "format": "int32",
          "default": 0
        },
        "limit": {
          "type": "integer",
          "description": "Limits the document count of the result set. Defaults to 30.",
          "format": "int32",
          "default": 30
        },
        "filter": {
          "$ref": "#/definitions/FilterBase"
        }
      }
    },
    "EnvironmentProcessSearchResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "totalResults"
      ],
      "properties": {
        "totalResults": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentProcess"
          }
        }
      }
    },
    "ContentBackupCompleteByOutputRequest": {
      "type": "object",
      "description": "Request to mark a backup of an Output completed",
      "additionalProperties": false,
      "properties": {
        "customerId": {
          "type": "string"
        },
        "outputId": {
          "type": "string"
        },
        "contentId": {
          "type": "string"
        },
        "businessProcessId": {
          "type": "string",
          "description": "Id of the business process tracking the output, if any (i.e. in case of ContentBackupRecovery mode)"
        }
      }
    },
    "ContentBackupSearchRequest": {
      "type": "object",
      "description": "Request to search aggregation values for Contents",
      "additionalProperties": false,
      "required": [
        "exclusionTime",
        "limit"
      ],
      "properties": {
        "customerId": {
          "type": "string"
        },
        "exclusionTime": {
          "type": "string",
          "description": "Time span relative to now for which missing backup timestamp is not considered a missing backup",
          "format": "time-span"
        },
        "limit": {
          "type": "integer",
          "description": "Limits the document count of the result set. Defaults to 30.",
          "format": "int32",
          "default": 30
        },
        "pageToken": {
          "type": "string",
          "description": "To get a large amount of data, page token returned from the response can be used to get all data."
        }
      }
    },
    "ContentBackupSearchResult": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "totalResults"
      ],
      "properties": {
        "totalResults": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pageToken": {
          "type": "string"
        }
      }
    },
    "ContentBackupEnableRequest": {
      "type": "object",
      "description": "Request to search aggregation values for Contents",
      "additionalProperties": false,
      "properties": {
        "customerId": {
          "type": "string"
        }
      }
    },
    "ContentBackupDisableRequest": {
      "type": "object",
      "description": "Request to search aggregation values for Contents",
      "additionalProperties": false,
      "properties": {
        "customerId": {
          "type": "string"
        }
      }
    },
    "ContentBackupCancelRecoveryRequest": {
      "type": "object",
      "description": "Request to search aggregation values for Contents",
      "additionalProperties": false,
      "properties": {
        "customerId": {
          "type": "string"
        },
        "businessProcessId": {
          "type": "string"
        }
      }
    },
    "ContentBackupForceCompleteRecoveryRequest": {
      "type": "object",
      "description": "Request to search aggregation values for Contents",
      "additionalProperties": false,
      "properties": {
        "customerId": {
          "type": "string"
        },
        "businessProcessId": {
          "type": "string"
        }
      }
    },
    "BusinessProcess": {
      "type": "object",
      "discriminator": "kind",
      "additionalProperties": false,
      "required": [
        "supportsCancellation",
        "businessProcessScope",
        "lifeCycle",
        "startDate",
        "endDate",
        "finished",
        "kind"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "processDefinitionId": {
          "type": "string"
        },
        "referenceId": {
          "type": "string"
        },
        "referenceDocType": {
          "type": "string"
        },
        "supportsCancellation": {
          "type": "boolean"
        },
        "businessProcessScope": {
          "$ref": "#/definitions/BusinessProcessScope"
        },
        "lifeCycle": {
          "$ref": "#/definitions/BusinessProcessLifeCycle"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "finished": {
          "type": "boolean"
        },
        "stateHistory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessProcessState"
          }
        },
        "currentState": {
          "type": "string"
        },
        "processDefinitionName": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        }
      }
    },
    "BusinessProcessScope": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "System",
        "User"
      ],
      "enum": [
        "System",
        "User"
      ]
    },
    "BusinessProcessState": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "timestamp"
      ],
      "properties": {
        "state": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "error": {
          "$ref": "#/definitions/ErrorResponse"
        }
      }
    },
    "BusinessProcessBulkResponse": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "response": {
          "$ref": "#/definitions/BulkResponse"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BusinessProcess"
        }
      ]
    },
    "BulkResponse": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BulkResponseRow"
          }
        }
      }
    },
    "BulkResponseRow": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "version",
        "succeeded",
        "status"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        },
        "error": {
          "type": "string"
        },
        "succeeded": {
          "type": "boolean"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {},
  "tags": []
}