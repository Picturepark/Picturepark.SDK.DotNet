{
  "x-generator": "NSwag v13.14.8.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Picturepark Cloud Manager API V1",
    "contact": {
      "name": "Picturepark sales",
      "url": "https://www.picturepark.com",
      "email": "sales@picturepark.com"
    },
    "version": "1.0",
    "x-logo": {
      "url": "https://picturepark.github.io/Picturepark.SDK.DotNet/api/picturepark-logo.png",
      "backgroundColor": "#FFFFFF"
    }
  },
  "paths": {
    "/customer/{alias}/cdn": {
      "post": {
        "tags": [
          "Cdn"
        ],
        "operationId": "Cdn_PurgeForCustomer",
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessProcess"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/backup/customer/repository": {
      "put": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_CreateRepository",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnapshotRepositoryCustomerCreateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotRepository"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/backup/customer/snapshot": {
      "put": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_CreateSnapshot",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnapshotCustomerCreateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotEnqueueResult"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/backup/customer/export": {
      "put": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_Export",
        "parameters": [
          {
            "name": "timeout",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "time-span",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerExportRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerExportResult"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/backup/customer/restore": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_Restore",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnapshotCustomerRestoreRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotRestore"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/backup/customer/cloneRequest": {
      "get": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_CloneRequest",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotCustomerCloneRequest"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/backup/customer/clone": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_Clone",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnapshotCustomerCloneRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/backup/customer/import": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_Import",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerImportRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/backup/environment/repository": {
      "put": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_CreateRepository2",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnapshotRepositoryEnvironmentCreateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotRepository"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/backup/environment/snapshot": {
      "put": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_CreateSnapshot2",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnapshotEnvironmentCreateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotEnqueueResult"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/backup/environment/restore": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_Restore2",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnapshotEnvironmentRestoreRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotRestore"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/backup/environment/snapshot/search": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_Search",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnapshotEnvironmentSearchRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotEnvironmentSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/backup/customer/snapshot/search": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_SearchSnapshots",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnapshotCustomerSearchRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotCustomerSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/backup/customer/repository/search": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_SearchRepositories",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnapshotRepositoryCustomerSearchRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotRepositorySearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/backup/environment/repository/search": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_SearchEnvironmentRepositories",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnapshotRepositoryEnvironmentSearchRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotRepositorySearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/backup/repository/cleanup": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_Cleanup",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotRepositoryCleanupResult"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/backup/repository/archive": {
      "put": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_Archive",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnapshotRepositoryArchiveRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotRepository"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/backup/repository/searchByName": {
      "post": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_Search2",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnapshotRepositorySearchByNameRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotRepository"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/backup/globalRepositoryState": {
      "get": {
        "tags": [
          "CloudBackup"
        ],
        "operationId": "CloudBackup_GetGlobalRepositoryState",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalSnapshotRepositoryStateResult"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/ContentBackup/outputs/searchMissingOriginals": {
      "post": {
        "tags": [
          "ContentBackup"
        ],
        "operationId": "ContentBackup_SearchMissingOriginals",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentBackupSearchRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentBackupSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/ContentBackup/enable": {
      "post": {
        "tags": [
          "ContentBackup"
        ],
        "operationId": "ContentBackup_Enable",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentBackupEnableRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/ContentBackup/disable": {
      "post": {
        "tags": [
          "ContentBackup"
        ],
        "operationId": "ContentBackup_Disable",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentBackupDisableRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/ContentBackup/cancelRecovery": {
      "post": {
        "tags": [
          "ContentBackup"
        ],
        "operationId": "ContentBackup_CancelRecovery",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentBackupCancelRecoveryRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/ContentBackup/forceCompleteRecovery": {
      "post": {
        "tags": [
          "ContentBackup"
        ],
        "operationId": "ContentBackup_ForceRecovery",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentBackupForceCompleteRecoveryRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/ContentBackup/{customerId}/reset": {
      "post": {
        "tags": [
          "ContentBackup"
        ],
        "operationId": "ContentBackup_Reset",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/ContentBackup/{customerId}/cancelReset": {
      "post": {
        "tags": [
          "ContentBackup"
        ],
        "operationId": "ContentBackup_CancelReset",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/ContentBackup/{customerId}/anyBackupRequested": {
      "get": {
        "tags": [
          "ContentBackup"
        ],
        "operationId": "ContentBackup_AnyBackupRequested",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/ContentBackup/{customerId}/ack/{filePath}": {
      "put": {
        "tags": [
          "ContentBackup"
        ],
        "operationId": "ContentBackup_AckBackup",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "filePath",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentBackupAcknowledgementResult"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/ContentBackup/{customerId}/ack": {
      "post": {
        "tags": [
          "ContentBackup"
        ],
        "operationId": "ContentBackup_AckBackupMany",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "filePaths",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentBackupAcknowledgementResult"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/ContentBackup/{customerId}/ackWithHashes": {
      "post": {
        "tags": [
          "ContentBackup"
        ],
        "operationId": "ContentBackup_AckBackupManyWithHashes",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "requests",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ContentBackupAcknowledgementRequest"
                }
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentBackupAcknowledgementResult"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/ContentBackup/notAcknowledgedCount": {
      "get": {
        "tags": [
          "ContentBackup"
        ],
        "operationId": "ContentBackup_NotAcknowledgedCount",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Customer/getCreateRequest": {
      "post": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_GetCreateRequest",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerCreateRequest"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Customer": {
      "post": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerCreateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerConfiguration"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Update",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerUpdateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerConfiguration"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      },
      "get": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_List",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Customer/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerConfiguration"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Customer/search": {
      "post": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Search",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerSearchRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Customer/{alias}/users": {
      "get": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_GetUsers",
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserWithRoles"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Customer/{alias}/restore": {
      "post": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Restore",
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Customer/{alias}/invalidate": {
      "post": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Invalidate",
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Customer/{alias}/searchIndex/reindex": {
      "post": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_Reindex",
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchIndexReindexShardsRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Index"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Customer/{alias}/metadataLanguagesAvailable": {
      "get": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_GetAvailableMetadataLanguages",
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Customer/{alias}/metadataLanguage": {
      "post": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_AddMetadataLanguage",
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "timeout",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "time-span",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerMetadataLanguageCreateRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentProcess"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Customer/{alias}/boostValues": {
      "put": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_UpdateBoostValues",
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "timeout",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "time-span",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerBoostValuesUpdateRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentProcess"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Customer/{alias}/indices": {
      "get": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_GetIndices",
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "onlyForReshard",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Index"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Customer/{alias}/reshard": {
      "post": {
        "tags": [
          "Customer"
        ],
        "operationId": "Customer_ReshardElasticIndices",
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "timeout",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "time-span",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerReshardRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentProcess"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/CustomerQueuePriority/{customerId}/queuePriority/effective": {
      "get": {
        "tags": [
          "CustomerQueuePriority"
        ],
        "operationId": "CustomerQueuePriority_GetEffective",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerQueuePriorityConfiguration"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/CustomerQueuePriority/{customerId}/queuePriority/custom": {
      "get": {
        "tags": [
          "CustomerQueuePriority"
        ],
        "operationId": "CustomerQueuePriority_GetCustom",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerQueuePriorityConfiguration"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/CustomerQueuePriority/{customerId}/queuePriority/{queueFamily}/effective": {
      "get": {
        "tags": [
          "CustomerQueuePriority"
        ],
        "operationId": "CustomerQueuePriority_GetEffectiveForQueue",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "queueFamily",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueuePriorityConfiguration"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/CustomerQueuePriority/{customerId}/queuePriority/{queueFamily}/custom": {
      "get": {
        "tags": [
          "CustomerQueuePriority"
        ],
        "operationId": "CustomerQueuePriority_GetCustomForQueue",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "queueFamily",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueuePriorityConfiguration"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/CustomerQueuePriority/{customerId}/queuePriority": {
      "put": {
        "tags": [
          "CustomerQueuePriority"
        ],
        "operationId": "CustomerQueuePriority_Update",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "updateRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerQueuePriorityConfiguration"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerQueuePriorityConfiguration"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      },
      "delete": {
        "tags": [
          "CustomerQueuePriority"
        ],
        "operationId": "CustomerQueuePriority_ResetAllQueueConfigurations",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/CustomerQueuePriority/{customerId}/queuePriority/{queueFamily}": {
      "put": {
        "tags": [
          "CustomerQueuePriority"
        ],
        "operationId": "CustomerQueuePriority_UpdateForQueue",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "queueFamily",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "updateRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueuePriorityConfiguration"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerQueuePriorityConfiguration"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      },
      "delete": {
        "tags": [
          "CustomerQueuePriority"
        ],
        "operationId": "CustomerQueuePriority_ResetQueue",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "queueFamily",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerQueuePriorityConfiguration"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/service/customer/serviceProvider": {
      "post": {
        "tags": [
          "CustomerServiceProvider"
        ],
        "operationId": "CustomerServiceProvider_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerServiceProviderCreateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerServiceProvider"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/service/customer/{alias}/serviceProvider/{id}": {
      "delete": {
        "tags": [
          "CustomerServiceProvider"
        ],
        "operationId": "CustomerServiceProvider_Delete",
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/CustomerSettings/customer/{customerId}/customerSettings": {
      "get": {
        "tags": [
          "CustomerSettings"
        ],
        "operationId": "CustomerSetting_Get",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerSettings"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      },
      "put": {
        "tags": [
          "CustomerSettings"
        ],
        "operationId": "CustomerSetting_Update",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "updateRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerSettingsUpdateRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerSettings"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/service/environment": {
      "post": {
        "tags": [
          "Environment"
        ],
        "operationId": "Environment_Create",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentConfiguration"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/service/environment/version": {
      "get": {
        "tags": [
          "Environment"
        ],
        "operationId": "Environment_GetVersion",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionInfo"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/EnvironmentProcesses/{id}/cancel": {
      "post": {
        "tags": [
          "EnvironmentProcesses"
        ],
        "operationId": "EnvironmentProcess_Cancel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/EnvironmentProcesses/{id}/acknowledge": {
      "post": {
        "tags": [
          "EnvironmentProcesses"
        ],
        "operationId": "EnvironmentProcess_Acknowledge",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/EnvironmentProcesses/{id}": {
      "get": {
        "tags": [
          "EnvironmentProcesses"
        ],
        "operationId": "EnvironmentProcess_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentProcess"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/EnvironmentProcesses/{id}/wait": {
      "get": {
        "tags": [
          "EnvironmentProcesses"
        ],
        "operationId": "EnvironmentProcess_WaitForLifeCycles",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "lifeCycles",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "$ref": "#/components/schemas/EnvironmentProcessLifeCycle"
              }
            },
            "x-position": 2
          },
          {
            "name": "timeout",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "time-span",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentProcessWaitResult"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/EnvironmentProcesses/search": {
      "post": {
        "tags": [
          "EnvironmentProcesses"
        ],
        "operationId": "EnvironmentProcess_Search",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentProcessSearchRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentProcessSearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/globalConfiguration": {
      "post": {
        "tags": [
          "GlobalConfiguration"
        ],
        "operationId": "GlobalConfiguration_CreateGlobalConfiguration",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentConfiguration"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/cloud/configuration": {
      "get": {
        "tags": [
          "GlobalConfiguration"
        ],
        "operationId": "GlobalConfiguration_GetConfiguration",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/cloud/version": {
      "get": {
        "tags": [
          "GlobalConfiguration"
        ],
        "operationId": "GlobalConfiguration_GetVersion",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionInfo"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/cloud/service/configuration": {
      "post": {
        "tags": [
          "GlobalConfiguration"
        ],
        "operationId": "GlobalConfiguration_CreateService",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateServiceConfigurationRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Maintenance/customer/{id}/schemas/touch": {
      "post": {
        "tags": [
          "Maintenance"
        ],
        "operationId": "Maintenance_TouchSchemas",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "timeout",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "time-span",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TouchSchemasRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessProcess"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Maintenance/customer/{id}/outputs/resetRetryAttempts": {
      "post": {
        "tags": [
          "Maintenance"
        ],
        "operationId": "Maintenance_ResetRetryAttempts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "timeout",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "time-span",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OutputResetRetryAttemptsRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessProcess"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Maintenance/customer/{id}/outputs/recalculateFileInformation": {
      "post": {
        "tags": [
          "Maintenance"
        ],
        "operationId": "Maintenance_RecalculateFileInformation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "timeout",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "time-span",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecalculateFileInformationRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessProcess"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Maintenance/customer/{id}/outputs/moveToSubfolders": {
      "post": {
        "tags": [
          "Maintenance"
        ],
        "operationId": "Maintenance_MoveToSubfolders",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessProcess"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Maintenance/customer/{id}/outputs/recreateXmpUntouchedOriginals": {
      "post": {
        "tags": [
          "Maintenance"
        ],
        "operationId": "Maintenance_RecreateXmpUntouchedOriginals",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "timeout",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "time-span",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecreateXmpUntouchedOriginalsRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecreateXmpUntouchedOriginalsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Maintenance/customer/{id}/metadata/updateOutdated": {
      "post": {
        "tags": [
          "Maintenance"
        ],
        "operationId": "Maintenance_UpdateOutdatedMetadata",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "timeout",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "time-span",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessProcess"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Maintenance/customer/{id}/statistics/events": {
      "post": {
        "tags": [
          "Maintenance"
        ],
        "operationId": "Maintenance_AddStatisticsEvents",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "timeout",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "time-span",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddContentEventsRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessProcess"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Maintenance/applySlowLogSettings": {
      "post": {
        "tags": [
          "Maintenance"
        ],
        "operationId": "Maintenance_ApplySlowLogSettings",
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/MessageQueue/initialize": {
      "post": {
        "tags": [
          "MessageQueue"
        ],
        "operationId": "MessageQueue_Initialize",
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/MessageQueue/reset": {
      "post": {
        "tags": [
          "MessageQueue"
        ],
        "operationId": "MessageQueue_Reset",
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/OutputFormat/customer/{customerId}/outputformats/{id}": {
      "get": {
        "tags": [
          "OutputFormat"
        ],
        "operationId": "OutputFormat_Get",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OutputFormatDetail"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      },
      "put": {
        "tags": [
          "OutputFormat"
        ],
        "operationId": "OutputFormat_Update",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "format",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OutputFormatEditable"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessProcess"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      },
      "delete": {
        "tags": [
          "OutputFormat"
        ],
        "operationId": "OutputFormat_Delete",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessProcess"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/OutputFormat/customer/{customerId}/outputformats": {
      "post": {
        "tags": [
          "OutputFormat"
        ],
        "operationId": "OutputFormat_Create",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "format",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OutputFormat"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessProcess"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/service/serviceProvider": {
      "post": {
        "tags": [
          "ServiceProvider"
        ],
        "operationId": "ServiceProvider_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceProviderCreateRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceProvider"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/service/serviceProvider/{id}": {
      "delete": {
        "tags": [
          "ServiceProvider"
        ],
        "operationId": "ServiceProvider_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Services/shutdownAll": {
      "get": {
        "tags": [
          "Services"
        ],
        "operationId": "Service_ShutdownAll",
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Services/restartAll": {
      "get": {
        "tags": [
          "Services"
        ],
        "operationId": "Service_RestartAll",
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Services/{serviceName}/shutdown": {
      "get": {
        "tags": [
          "Services"
        ],
        "operationId": "Service_Shutdown",
        "parameters": [
          {
            "name": "serviceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "nodeId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Services/{serviceName}/restart": {
      "get": {
        "tags": [
          "Services"
        ],
        "operationId": "Service_Restart",
        "parameters": [
          {
            "name": "serviceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "nodeId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Services/setLogLevel": {
      "post": {
        "tags": [
          "Services"
        ],
        "operationId": "Service_SetLogLevel",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetServiceLogLevelRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Services/enableLoggingDiagnostics": {
      "post": {
        "tags": [
          "Services"
        ],
        "operationId": "Service_EnableLoggingDiagnostics",
        "parameters": [
          {
            "name": "enable",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "x-position": 1
          },
          {
            "name": "serviceName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Services/pingAllActiveNodes": {
      "get": {
        "tags": [
          "Services"
        ],
        "operationId": "Service_PingActiveNodes",
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Services/getAllActiveNodes": {
      "get": {
        "tags": [
          "Services"
        ],
        "operationId": "Service_GetActiveNodes",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NodeInfo"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Services/deleteNodeInfos": {
      "post": {
        "tags": [
          "Services"
        ],
        "operationId": "Service_DeleteNodeInfos",
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Services/dumpCaches": {
      "post": {
        "tags": [
          "Services"
        ],
        "operationId": "Service_DumpCaches",
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Services/invalidateAllCaches": {
      "post": {
        "tags": [
          "Services"
        ],
        "operationId": "Service_InvalidateAllCaches",
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Services/recycleElasticClients": {
      "post": {
        "tags": [
          "Services"
        ],
        "operationId": "Service_RecycleElasticClients",
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Updates/environment": {
      "get": {
        "tags": [
          "Updates"
        ],
        "operationId": "Update_GetAvailableEnvironmentUpdate",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInfo"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Updates/environment/version": {
      "get": {
        "tags": [
          "Updates"
        ],
        "operationId": "Update_GetEnvironmentVersion",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionInfo"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Updates/environment/reactivate": {
      "post": {
        "tags": [
          "Updates"
        ],
        "operationId": "Update_ReactivateEnvironment",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReactivationEnvironmentRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Updates/environment/deactivate": {
      "post": {
        "tags": [
          "Updates"
        ],
        "operationId": "Update_DeactivateEnvironment",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeactivationEnvironmentRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Updates/environment/update": {
      "post": {
        "tags": [
          "Updates"
        ],
        "operationId": "Update_UpdateEnvironment",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEnvironmentRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentProcess"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Updates/customers/{id}": {
      "get": {
        "tags": [
          "Updates"
        ],
        "operationId": "Update_GetAvailableCustomerUpdate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInfo"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Updates/customers/version": {
      "get": {
        "tags": [
          "Updates"
        ],
        "operationId": "Update_GetCustomerVersions",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerVersionInfo"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Updates/customers/{id}/version": {
      "get": {
        "tags": [
          "Updates"
        ],
        "operationId": "Update_GetCustomerVersion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerVersionInfo"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Updates/customers/deactivate": {
      "post": {
        "tags": [
          "Updates"
        ],
        "operationId": "Update_DeactivateCustomers",
        "requestBody": {
          "x-name": "requests",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeactivationCustomerRequest"
                }
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Updates/customers/reactivate": {
      "post": {
        "tags": [
          "Updates"
        ],
        "operationId": "Update_ReactivateCustomers",
        "requestBody": {
          "x-name": "requests",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ReactivationCustomerRequest"
                }
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/Updates/customers/update": {
      "post": {
        "tags": [
          "Updates"
        ],
        "operationId": "Update_UpdateCustomers",
        "requestBody": {
          "x-name": "requests",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateCustomerRequest"
                }
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnvironmentProcess"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/{alias}/{id}/getUserDeveloperFlag": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "User_GetUserDeveloperFlag",
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    "/{alias}/updateUserDeveloperFlag": {
      "put": {
        "tags": [
          "User"
        ],
        "operationId": "User_UpdateUserDeveloperFlag",
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDeveloperFlagUpdateRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkForbiddenException"
                }
              }
            }
          },
          "405": {
            "description": "Method not allowed"
          },
          "409": {
            "description": "Version conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkConflictException"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            },
            "x-expectedSchemas": [
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkException"
                    }
                  ]
                }
              },
              {
                "description": "Entity not found",
                "schema": {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PictureparkNotFoundException"
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BusinessProcess": {
        "type": "object",
        "discriminator": {
          "propertyName": "kind"
        },
        "description": "Business process",
        "additionalProperties": false,
        "required": [
          "id",
          "processDefinitionId",
          "kind",
          "supportsCancellation",
          "businessProcessScope",
          "lifeCycle",
          "startDate",
          "endDate",
          "finished"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the business process.",
            "minLength": 1
          },
          "processDefinitionId": {
            "type": "string",
            "description": "ID of the business process definition associated to the business process.",
            "minLength": 1
          },
          "referenceId": {
            "type": "string",
            "description": "ID of the document that is modified by the running of the business process. Used during the cancellation of the business process.",
            "nullable": true
          },
          "referenceDocType": {
            "type": "string",
            "description": "Type of the document that is modified by the running of the business process. Used during the cancellation of the business process.",
            "nullable": true
          },
          "supportsCancellation": {
            "type": "boolean",
            "description": "True if the business process execution can be cancelled. False otherwise."
          },
          "businessProcessScope": {
            "description": "Scope of the business process.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/BusinessProcessScope"
              }
            ]
          },
          "lifeCycle": {
            "description": "Current life cycle of the business process.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/BusinessProcessLifeCycle"
              }
            ]
          },
          "startDate": {
            "type": "string",
            "description": "When the business process started.",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "When the business process finished.",
            "format": "date-time"
          },
          "finished": {
            "type": "boolean",
            "description": "Is the business process finished."
          },
          "stateHistory": {
            "type": "array",
            "description": "List containing the history of all the state transitions of the business process.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BusinessProcessState"
            }
          },
          "currentState": {
            "type": "string",
            "description": "Current state of the business process.",
            "nullable": true
          },
          "lastReportedProgress": {
            "type": "string",
            "description": "Timestamp when the business process last reported progress.",
            "format": "date-time",
            "nullable": true
          },
          "continuationBusinessProcessId": {
            "type": "string",
            "description": "Id of the business process that will be automatically started after the completion of the current one, if any.",
            "nullable": true
          },
          "kind": {
            "type": "string"
          }
        }
      },
      "BusinessProcessScope": {
        "type": "string",
        "description": "Scope of the business process",
        "x-enumNames": [
          "System",
          "User"
        ],
        "enum": [
          "System",
          "User"
        ]
      },
      "BusinessProcessLifeCycle": {
        "type": "string",
        "description": "Life cycle of the business process",
        "x-enumNames": [
          "Draft",
          "InProgress",
          "Succeeded",
          "Cancelled",
          "CancellationInProgress",
          "Failed",
          "SucceededWithErrors"
        ],
        "enum": [
          "Draft",
          "InProgress",
          "Succeeded",
          "Cancelled",
          "CancellationInProgress",
          "Failed",
          "SucceededWithErrors"
        ]
      },
      "BusinessProcessState": {
        "type": "object",
        "description": "State transition information of a business process",
        "additionalProperties": false,
        "required": [
          "state",
          "timestamp"
        ],
        "properties": {
          "state": {
            "type": "string",
            "description": "State of the business process",
            "minLength": 1
          },
          "timestamp": {
            "type": "string",
            "description": "Date and time of when the state transition was performed.",
            "format": "date-time"
          },
          "error": {
            "description": "Eventual error associated to the state transition.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ErrorResponse"
              }
            ]
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "description": "Error information with serialized exception",
        "additionalProperties": false,
        "properties": {
          "exception": {
            "type": "string",
            "description": "Serialized PictureparkBusinessException.",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "description": "Trace ID.",
            "nullable": true
          },
          "traceJobId": {
            "type": "string",
            "description": "Trace job ID.",
            "nullable": true
          }
        }
      },
      "PictureparkValidationException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "PictureparkBusinessException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "customerId": {
                "type": "string",
                "nullable": true
              },
              "customerAlias": {
                "type": "string",
                "nullable": true
              },
              "userId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "PictureparkException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Exception"
          },
          {
            "type": "object",
            "discriminator": {
              "propertyName": "kind",
              "mapping": {
                "ServiceProviderDeleteException": "#/components/schemas/ServiceProviderDeleteException",
                "ServiceProviderCreateException": "#/components/schemas/ServiceProviderCreateException",
                "ServiceProviderNotFoundException": "#/components/schemas/ServiceProviderNotFoundException",
                "ElasticVersionUpdateException": "#/components/schemas/ElasticVersionUpdateException",
                "InvalidVersionException": "#/components/schemas/InvalidVersionException",
                "EnvironmentNotDeactivatedException": "#/components/schemas/EnvironmentNotDeactivatedException",
                "EnvironmentNotFoundException": "#/components/schemas/EnvironmentNotFoundException",
                "EnvironmentDeactivationException": "#/components/schemas/EnvironmentDeactivationException",
                "CustomerViolationException": "#/components/schemas/CustomerViolationException",
                "CustomerAliasNotFoundException": "#/components/schemas/CustomerAliasNotFoundException",
                "CustomerNotDeactivatedException": "#/components/schemas/CustomerNotDeactivatedException",
                "CustomerDeactivationException": "#/components/schemas/CustomerDeactivationException",
                "CustomerHostNotFoundException": "#/components/schemas/CustomerHostNotFoundException",
                "CustomerNotFoundException": "#/components/schemas/CustomerNotFoundException",
                "CustomerNotActiveException": "#/components/schemas/CustomerNotActiveException",
                "ConfigurationIndexNotFoundException": "#/components/schemas/ConfigurationIndexNotFoundException",
                "DuplicateAliasException": "#/components/schemas/DuplicateAliasException",
                "RedisDatabaseExceededException": "#/components/schemas/RedisDatabaseExceededException",
                "MaximumTransferSizeException": "#/components/schemas/MaximumTransferSizeException",
                "EnvironmentNotAvailableException": "#/components/schemas/EnvironmentNotAvailableException",
                "CustomerNotAvailableException": "#/components/schemas/CustomerNotAvailableException",
                "PictureparkBusinessException": "#/components/schemas/PictureparkBusinessException",
                "PictureparkValidationException": "#/components/schemas/PictureparkValidationException"
              }
            },
            "additionalProperties": false,
            "required": [
              "kind"
            ],
            "properties": {
              "traceLevel": {
                "$ref": "#/components/schemas/TraceLevel"
              },
              "traceId": {
                "type": "string",
                "nullable": true
              },
              "traceJobId": {
                "type": "string",
                "nullable": true
              },
              "httpStatusCode": {
                "type": "integer",
                "format": "int32"
              },
              "exceptionMessage": {
                "type": "string",
                "nullable": true
              },
              "kind": {
                "type": "string"
              }
            }
          }
        ]
      },
      "TraceLevel": {
        "type": "string",
        "description": "",
        "x-enumFlags": true,
        "x-enumNames": [
          "Critical",
          "Error",
          "Warning",
          "Information",
          "Verbose"
        ],
        "enum": [
          "Critical",
          "Error",
          "Warning",
          "Information",
          "Verbose"
        ]
      },
      "Exception": {
        "type": "object",
        "additionalProperties": false
      },
      "PictureparkConflictException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "PictureparkTimeoutException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "PictureparkForbiddenException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "UserEmailAlreadyExistsException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "email": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "UserRoleAssignedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UnableToDeleteUserRoleException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "UnableToDeleteUserRoleException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "userRoleId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "UserNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "missingUserId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "UserNotDeactivatedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "notDeactivatedUserId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "UserWithOwnerTokensArchiveException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "notArchivedUserId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "UserInactiveOrDeletedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "affectedUserId": {
                "type": "string",
                "description": "The ID of the inactive or deleted user in question.",
                "nullable": true
              }
            }
          }
        ]
      },
      "InactiveOrDeletedUserRefusedAccessException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkForbiddenException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "TermsOfServiceNotNewestException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "IllegalAuthorizationStateTransitionException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "requestedUserId": {
                "type": "string",
                "nullable": true
              },
              "authorizationState": {
                "$ref": "#/components/schemas/AuthorizationState"
              },
              "transition": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "AuthorizationState": {
        "type": "string",
        "description": "User authorization state",
        "x-enumNames": [
          "Reviewed",
          "ToBeReviewed",
          "Invited",
          "UserTriggeredDeactivation"
        ],
        "enum": [
          "Reviewed",
          "ToBeReviewed",
          "Invited",
          "UserTriggeredDeactivation"
        ]
      },
      "TermsOfServiceConsentRequiredException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkForbiddenException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "UserRolesNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "userRoleIds": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "PictureparkNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "reference": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "UnauthorizedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "UserUnlockDisallowedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "requestedUserId": {
                "type": "string",
                "nullable": true
              },
              "authorizationState": {
                "$ref": "#/components/schemas/AuthorizationState"
              }
            }
          }
        ]
      },
      "UserAlreadyInRequestedLockStateException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "affectedUserId": {
                "type": "string",
                "nullable": true
              },
              "userIsLocked": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "LoginUsingIncorrectIdentityProviderException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkForbiddenException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "affectedUserId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "IdentityProviderNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "missingIdentityProviderId": {
                "type": "string",
                "nullable": true
              },
              "external": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "UserDoesNotSupportLocalLoginException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "affectedUserId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "UserAttributeNotSynchronizableException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "attributePath": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "UnableToMapMultipleClaimTypesIntoSameAttributeException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "attributePath": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "UnableToChangeMappedUserRolesForFederatedUserException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "affectedUserId": {
                "type": "string",
                "nullable": true
              },
              "userRoleIds": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "UnableToDeleteDefaultUserRoleException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UnableToDeleteUserRoleException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "UnableToDeleteUserRoleReferencedInIdentityProviderGroupMappingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UnableToDeleteUserRoleException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "identityProviderIds": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "UserPropertyChangeNotSupportedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "propertyPath": {
                "type": "string",
                "nullable": true
              },
              "affectedUserId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "UserNotLinkedWithIdsException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "affectedUserId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "LanguageCodeNotExistingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "languageCode": {
                "type": "string",
                "nullable": true
              },
              "existingLanguageCodes": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "RenderingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "FormatNotApplicableForRenderingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RenderingException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "contentRenderingType": {
                "$ref": "#/components/schemas/RenderingCategory"
              },
              "outputFormatId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "RenderingCategory": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Unknown",
          "Image",
          "Document",
          "Video",
          "Audio",
          "Vector"
        ],
        "enum": [
          "Unknown",
          "Image",
          "Document",
          "Video",
          "Audio",
          "Vector"
        ]
      },
      "FocalPointCropSizeMissingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "contentId": {
                "type": "string",
                "nullable": true
              },
              "focalPointId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "ServiceProviderDeleteException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "serviceProviderId": {
                "type": "string",
                "nullable": true
              },
              "detailedErrorMessage": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "ServiceProviderCreateException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "externalId": {
                "type": "string",
                "nullable": true
              },
              "detailErrorMessage": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "ServiceProviderNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "missingServiceProviderId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "DocumentVersionNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "documentType": {
                "type": "string",
                "nullable": true
              },
              "documentId": {
                "type": "string",
                "nullable": true
              },
              "documentVersion": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "DefaultChannelDeleteException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "ChannelsNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "SuperAdminRolesNotAssignableToChannelException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "ElasticVersionUpdateException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "expectedVersion": {
                "type": "string",
                "nullable": true
              },
              "actualVersion": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "InvalidVersionException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "component": {
                "type": "string",
                "nullable": true
              },
              "version": {
                "type": "string",
                "nullable": true
              },
              "expectedVersion": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "EnvironmentNotDeactivatedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "EnvironmentNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "EnvironmentDeactivationException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "deactivationMessage": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "CustomerClonesNotAcceptedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "ShareNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "shareId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "ShareByTokenNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "token": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "TokenGenerationException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "retries": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "ShareExpiredException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "token": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "ShareSizeLimitExceededException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "shareId": {
                "type": "string",
                "nullable": true
              },
              "limit": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "DuplicateSharedOutputException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "contentId": {
                "type": "string",
                "nullable": true
              },
              "outputFormatId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "DuplicateEmbedConversionPresetException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "contentId": {
                "type": "string",
                "nullable": true
              },
              "outputFormatId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "OutputIdNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "outputId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "OutputNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "contentId": {
                "type": "string",
                "nullable": true
              },
              "outputFormatId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "UnmodifiedOriginalOutputNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OutputNotFoundException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "UnableToCreateOrModifyStaticOutputFormatException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "NotSupportedFileMappingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "inputExtension": {
                "type": "string",
                "nullable": true
              },
              "targetFormatKind": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "NotSupportedFileMappingForDynamicFormatException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NotSupportedFileMappingException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "formatId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "NotSupportedFileExtensionException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "extension": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "DuplicateOutputFormatIdException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "OutputEditingNotSupportedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "contentId": {
                "type": "string",
                "nullable": true
              },
              "outputFormatId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "OutputBackupNotRequestedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "OutputBackupHashMismatchException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "requestedHash": {
                "type": "string",
                "nullable": true
              },
              "documentHash": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "OutputOperationInProgressException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "DownloadLinkExpiredException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "RenderingNotAwaitedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "DuplicateContentDownloadRequestException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "contentId": {
                "type": "string",
                "nullable": true
              },
              "outputFormatId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "InvalidContentDownloadRequestException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "DownloadNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "token": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "EmbedMultiDownloadException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "token": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "ImageOptimizationLicensingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "LeaseNotAcquiredException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "resourceId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "OperationInProgressException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "leaseResourceType": {
                "$ref": "#/components/schemas/LeaseResourceType"
              }
            }
          }
        ]
      },
      "LeaseResourceType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "SchemaEditing"
        ],
        "enum": [
          "SchemaEditing"
        ]
      },
      "OwnerTokenNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ownerTokenUserIds": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "InvalidStateException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "resourceId": {
                "type": "string",
                "nullable": true
              },
              "state": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "PictureparkArgumentNullException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "argumentName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "ObjectTypeMismatchException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "InvalidStateTransitionException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InvalidStateException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "transition": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "FailedToLockException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "resourceId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "PictureparkOperationCanceledException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "PictureparkApplicationException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "MissingCustomerDefaultLanguageException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "customerDefaultLanguage": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "PartialOperationNotSupportedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "ContractMismatchException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "InvalidArgumentException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "argumentName": {
                "type": "string",
                "nullable": true
              },
              "argumentValue": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "ArgumentRangeException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InvalidArgumentException"
          },
          {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
              "minAcceptableValue": {
                "type": "string",
                "nullable": true
              },
              "maxAcceptableValue": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "UnknownException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "OwnerTokenInUseException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ownerTokenUserId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "InvalidValueFormatException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InvalidArgumentException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "expectedFormat": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "ItemIdDuplicatedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "RequestSizeLimitExceededException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "argumentName": {
                "type": "string",
                "nullable": true
              },
              "limit": {
                "type": "integer",
                "format": "int32"
              },
              "requestedAmount": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "CustomerViolationException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "expectedCustomerId": {
                "type": "string",
                "nullable": true
              },
              "currentCustomerId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "CustomerAliasNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "customerAlias": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "CustomerAliasInUseException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "existingCustomerId": {
                "type": "string",
                "nullable": true
              },
              "alias": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "CustomerNotDeactivatedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "customerId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "CustomerDeactivationException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "customerId": {
                "type": "string",
                "nullable": true
              },
              "deactivationMessage": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "CustomerHostNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "hostName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "CustomerNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "customerId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "CustomerNotActiveException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "customerId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "CustomerBoostValuesInvalidException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "SnapshotRetentionTimeTooShortException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "snapshotRetentionTime": {
                "type": "string",
                "format": "time-span"
              },
              "minimumRetentionTime": {
                "type": "string",
                "format": "time-span"
              }
            }
          }
        ]
      },
      "ReshardIndexNotAllowedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "ReshardNumberOfShardsInvalidException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "ReshardNumberOfRoutingShardsInvalidException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReshardNumberOfShardsInvalidException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "ReshardNumberOfShardsInvalidForExistingRoutingShardsException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReshardNumberOfShardsInvalidException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "ConfigurationIndexNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "configurationIndex": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "DuplicateSearchIndexDocException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "searchIndexDocId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SearchIndexDocNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "searchIndexDocId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "IndexDocumentNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "indexId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "DuplicateAliasException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "indexAlias": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SearchIndexNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "searchIndexId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "DefaultSearchIndexDeleteException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "SearchIndexInUseException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "searchIndex": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "IndexException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "indexName": {
                "type": "string",
                "nullable": true
              },
              "debugInformation": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "IndexMappingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "indexName": {
                "type": "string",
                "nullable": true
              },
              "debugInformation": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "DuplicatedSearchBehaviorException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "duplicatedSearchBehaviors": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SearchStringLeadingWildcardException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "DuplicateAggregatorException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "aggregatorName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "InvalidDateTimeFormatException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "value": {
                "type": "string",
                "nullable": true
              },
              "expectedFormat": {
                "type": "string",
                "deprecated": true,
                "nullable": true
              }
            }
          }
        ]
      },
      "InvalidSortFieldException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "fieldName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "InvalidUiBehaviorInNonRootAggregatorException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "aggregatorName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "InvalidUiBehaviorConfigurationException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "aggregatorName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "InvalidSearchFieldInAggregatorException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "fieldName": {
                "type": "string",
                "nullable": true
              },
              "aggregatorName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SearchStringTooLongException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "limit": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "AggregationNameInvalidException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "aggregationName": {
                "type": "string",
                "nullable": true
              },
              "aggregationPrefix": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "AggregationNameMissingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "AggregationSizeInvalidException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "description": "Size of the aggregation is invalid.",
            "additionalProperties": false,
            "properties": {
              "aggregationName": {
                "type": "string",
                "description": "The name identifying the aggregation.",
                "nullable": true
              },
              "aggregationSize": {
                "type": "integer",
                "description": "The invalid size of the aggregation: size must be equal or greater than 1.",
                "format": "int32"
              }
            }
          }
        ]
      },
      "AggregationFilterNotSupportedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "aggregationName": {
                "type": "string",
                "nullable": true
              },
              "notSupportedFilterType": {
                "type": "string",
                "nullable": true
              },
              "supportedFilterTypes": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "AggregationFieldMissingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "aggregationName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "AggregationPathMissingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "aggregationName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "DocumentVersionConflictException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkConflictException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "documentId": {
                "type": "string",
                "nullable": true
              },
              "documentType": {
                "type": "string",
                "nullable": true
              },
              "documentVersion": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "RedisDatabaseExceededException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "customerId": {
                "type": "string",
                "nullable": true
              },
              "customerCount": {
                "type": "integer",
                "format": "int32"
              },
              "maxCount": {
                "type": "integer",
                "format": "int32"
              },
              "startIndex": {
                "type": "integer",
                "format": "int32"
              },
              "redisDatabaseCount": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "DuplicateDocumentException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "documentId": {
                "type": "string",
                "nullable": true
              },
              "documentType": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "ObjectStoreResponseException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "rowErrorMessages": {
                "type": "string",
                "nullable": true
              },
              "message": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "ObjectStoreException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "rowErrorMessages": {
                "type": "string",
                "nullable": true
              },
              "errorMessage": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "QueryException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "debugInformation": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "PermissionOwnershipTransferException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "transferUserId": {
                "type": "string",
                "nullable": true
              },
              "missingUserRight": {
                "$ref": "#/components/schemas/UserRight"
              }
            }
          }
        ]
      },
      "UserRight": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "ManageContent",
          "ManageSharings",
          "ManageTransfer",
          "ManageChannels",
          "ManageSchemas",
          "ManageUsers",
          "ManageUserRoles",
          "ManagePermissions",
          "ManageSearchIndexes",
          "ManageListItems",
          "ManageServiceProviders",
          "ManageEmbeds",
          "ManageTemplates",
          "ManageTermsOfService",
          "ManageLiveStream",
          "ManageDocumentHistory",
          "ManageAllShares",
          "ManageOutputFormats",
          "ManageBusinessProcesses",
          "ManageIdentityProviders",
          "ManageXmpMappings",
          "ReadStatistics",
          "WriteStatistics",
          "ExportStatistics",
          "EditImages",
          "ManageConversionPresetTemplates",
          "ManageComments",
          "ManageAllComments"
        ],
        "enum": [
          "ManageContent",
          "ManageSharings",
          "ManageTransfer",
          "ManageChannels",
          "ManageSchemas",
          "ManageUsers",
          "ManageUserRoles",
          "ManagePermissions",
          "ManageSearchIndexes",
          "ManageListItems",
          "ManageServiceProviders",
          "ManageEmbeds",
          "ManageTemplates",
          "ManageTermsOfService",
          "ManageLiveStream",
          "ManageDocumentHistory",
          "ManageAllShares",
          "ManageOutputFormats",
          "ManageBusinessProcesses",
          "ManageIdentityProviders",
          "ManageXmpMappings",
          "ReadStatistics",
          "WriteStatistics",
          "ExportStatistics",
          "EditImages",
          "ManageConversionPresetTemplates",
          "ManageComments",
          "ManageAllComments"
        ]
      },
      "PermissionSetNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "permissionSetIds": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "PermissionSetAggregateException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "exceptions": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          }
        ]
      },
      "DuplicateRightException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "permissionSetId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "PermissionValidationException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "permission": {
                "type": "string",
                "nullable": true
              },
              "operation": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "PermissionSetInUseException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "reference": {
                "type": "string",
                "nullable": true
              },
              "referenceCount": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "ContentPermissionException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "contentId": {
                "type": "string",
                "nullable": true
              },
              "contentRights": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ContentRight"
                }
              }
            }
          }
        ]
      },
      "ContentRight": {
        "type": "string",
        "description": "Content rights",
        "x-enumNames": [
          "View",
          "AccessOriginal",
          "EditMetadata",
          "EditContent",
          "ManagePermissions",
          "Delete",
          "ManageHistoricVersions"
        ],
        "enum": [
          "View",
          "AccessOriginal",
          "EditMetadata",
          "EditContent",
          "ManagePermissions",
          "Delete",
          "ManageHistoricVersions"
        ]
      },
      "ListItemPermissionException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "listItemId": {
                "type": "string",
                "nullable": true
              },
              "metadataRight": {
                "$ref": "#/components/schemas/MetadataRight"
              }
            }
          }
        ]
      },
      "MetadataRight": {
        "type": "string",
        "description": "Metadata rights",
        "x-enumNames": [
          "View",
          "ManageItems",
          "ManageSchema"
        ],
        "enum": [
          "View",
          "ManageItems",
          "ManageSchema"
        ]
      },
      "SchemaPermissionException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "metadataRight": {
                "$ref": "#/components/schemas/MetadataRight"
              }
            }
          }
        ]
      },
      "PermissionSetInvalidRightCombinationException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PermissionSetValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "PermissionSetValidationException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "description": "This exception is an abstract base for permission set validation.",
            "additionalProperties": false,
            "properties": {
              "permissionSetId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "AmbiguousUserRoleRightsException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PermissionSetValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "UnsupportedListItemChangeCommandException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "commandType": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "ListItemLayerException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "listItemId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "ListItemNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "listItemIds": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "ListItemCyclicDependencyException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "listItemIds": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "DeleteListItemsWithReferencesException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "numberOfReferences": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "ListItemUpdateManyException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "failedItemsCount": {
                "type": "integer",
                "format": "int32"
              },
              "totalItemsCount": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "ListItemSchemaMismatchException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "listItemId": {
                "type": "string",
                "nullable": true
              },
              "listItemSchemaId": {
                "type": "string",
                "nullable": true
              },
              "fieldSchemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "ListItemResolveBehaviorNotSupportedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "behaviors": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ListItemResolveBehavior"
                }
              }
            }
          }
        ]
      },
      "ListItemResolveBehavior": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Content",
          "LinkedListItems",
          "InnerDisplayValueThumbnail",
          "InnerDisplayValueList",
          "InnerDisplayValueDetail",
          "InnerDisplayValueName",
          "OuterDisplayValueThumbnail",
          "OuterDisplayValueList",
          "OuterDisplayValueDetail",
          "OuterDisplayValueName",
          "DynamicViewFields",
          "DynamicViewFieldsWithHasItems"
        ],
        "enum": [
          "Content",
          "LinkedListItems",
          "InnerDisplayValueThumbnail",
          "InnerDisplayValueList",
          "InnerDisplayValueDetail",
          "InnerDisplayValueName",
          "OuterDisplayValueThumbnail",
          "OuterDisplayValueList",
          "OuterDisplayValueDetail",
          "OuterDisplayValueName",
          "DynamicViewFields",
          "DynamicViewFieldsWithHasItems"
        ]
      },
      "TransferInfoNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "transferInfoId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "FileTransferNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "fileTransferId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "InvalidTransferTypeException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "transferType": {
                "$ref": "#/components/schemas/TransferType"
              }
            }
          }
        ]
      },
      "TransferType": {
        "type": "string",
        "description": "Type of the transfer",
        "x-enumNames": [
          "FileUpload",
          "FileUploadAutoImport",
          "WebDownload",
          "SchemaImport"
        ],
        "enum": [
          "FileUpload",
          "FileUploadAutoImport",
          "WebDownload",
          "SchemaImport"
        ]
      },
      "TransferNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "transferId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "WrongChunkSizeException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "actual": {
                "type": "integer",
                "format": "int64"
              },
              "expected": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "ChunkSizeOutOfRangeException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "actual": {
                "type": "integer",
                "format": "int64"
              },
              "minimum": {
                "type": "integer",
                "format": "int64"
              },
              "maximum": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "MaximumTransferSizeException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "transferSize": {
                "type": "integer",
                "format": "int32"
              },
              "maximumTransferSize": {
                "type": "integer",
                "format": "int32"
              },
              "transferId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "FileIdDuplicatedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "fileId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "UploadFailedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "MaximumNumberOfChunksExceededException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "transferId": {
                "type": "string",
                "nullable": true
              },
              "numberOfChunks": {
                "type": "integer",
                "format": "int64"
              },
              "maximumNumberOfChunks": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "MaximumFileSizeExceededException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "transferId": {
                "type": "string",
                "nullable": true
              },
              "declaredFileSize": {
                "type": "integer",
                "format": "int64"
              },
              "maximumFileSize": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "MissingDependenciesException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "itemIds": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "RelationSelfReferencingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "itemId": {
                "type": "string",
                "nullable": true
              },
              "itemType": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "InvalidChangeCommandFieldTypeInvalidException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "commandType": {
                "type": "string",
                "nullable": true
              },
              "fieldId": {
                "type": "string",
                "nullable": true
              },
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "fieldActualType": {
                "type": "string",
                "nullable": true
              },
              "fieldExpectedType": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "InvalidChangeCommandFieldNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "commandTypeName": {
                "type": "string",
                "nullable": true
              },
              "fieldId": {
                "type": "string",
                "nullable": true
              },
              "schemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "InvalidChangeCommandSchemaChangeInvalidException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "commandTypeName": {
                "type": "string",
                "nullable": true
              },
              "schemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "InvalidContentSchemaForMetadataValuesSchemaRemoveCommandException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "InvalidMetadataException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "metadataErrors": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/MetadataError"
                }
              },
              "validationErrors": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/PictureparkBusinessException"
                }
              }
            }
          }
        ]
      },
      "MetadataError": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "lineNumber",
          "linePosition"
        ],
        "properties": {
          "errorType": {
            "type": "string",
            "nullable": true
          },
          "lineNumber": {
            "type": "integer",
            "format": "int32"
          },
          "linePosition": {
            "type": "integer",
            "format": "int32"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "schemaId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RelationNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "relationId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "RelationTypeNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "relationType": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "RelationTypeTargetDocTypeMismatchException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "relationType": {
                "type": "string",
                "nullable": true
              },
              "targetDocType": {
                "type": "string",
                "nullable": true
              },
              "expectedTargetDocType": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "RelationTypeMissingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "ReferencesUpdateException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "exceptions": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ReferenceUpdateException"
                }
              }
            }
          }
        ]
      },
      "ReferenceUpdateException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "referenceItemId": {
                "type": "string",
                "description": "This is the source of the reference.",
                "nullable": true
              },
              "referenceType": {
                "type": "string",
                "description": "This is the DocType of the source of the reference.",
                "nullable": true
              },
              "exceptions": {
                "type": "array",
                "description": "These exceptions describe why the source metadata item could not be updated.",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/PictureparkException"
                }
              }
            }
          }
        ]
      },
      "DuplicatedItemAssignedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "itemId": {
                "type": "string",
                "nullable": true
              },
              "itemPath": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "InvalidDataTypeException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "value": {
                "nullable": true
              }
            }
          }
        ]
      },
      "LayerAssignmentInvalidException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "layerId": {
                "type": "string",
                "nullable": true
              },
              "value": {
                "nullable": true
              }
            }
          }
        ]
      },
      "OutdatedMetadataUpdateInProgressException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "SortingSupportedOnlyOnTermsAndTermsRelationAggregatorsException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "aggregationName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemasMetadataProtectionException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaIds": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              },
              "operation": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "FilterTemplateRenderingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "ResolvedLinkedItemsThresholdReachedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "metadataItemId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaFieldOverwriteTypeMismatchException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "fieldId": {
                "type": "string",
                "nullable": true
              },
              "fieldOverwriteType": {
                "type": "string",
                "nullable": true
              },
              "fieldType": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaFieldOverwriteIdException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "fieldId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaFieldIdDuplicatedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "fieldId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaFieldIdPreviouslyUsedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "fieldId": {
                "type": "string",
                "nullable": true
              },
              "usedInSchemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaFieldIdAlreadyExistsInSchemaHierarchyException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "fieldId": {
                "type": "string",
                "nullable": true
              },
              "existingInSchemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaFieldSchemaIndexInfoSimpleSearchNestingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "fieldId": {
                "type": "string",
                "nullable": true
              },
              "relatedFieldId": {
                "type": "string",
                "nullable": true
              },
              "relatedOuterFieldId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaFieldSchemaIndexInfoNestingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "fieldId": {
                "type": "string",
                "nullable": true
              },
              "relatedFieldId": {
                "type": "string",
                "nullable": true
              },
              "relatedOuterFieldId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaFieldIdUppercaseException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "fieldId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaIdLowercaseException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaInfoNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "IndexedFieldThresholdExceededException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaIds": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              },
              "indexedFieldCount": {
                "type": "number",
                "format": "double"
              },
              "indexedFieldThreshold": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "SortableFieldThresholdExceededException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaIds": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              },
              "sortableFieldCount": {
                "type": "number",
                "format": "double"
              },
              "sortableFieldThreshold": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "DuplicateSchemaInfoException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaFieldNumberRangeException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "fieldId": {
                "type": "string",
                "nullable": true
              },
              "propertyName": {
                "type": "string",
                "nullable": true
              },
              "minValue": {
                "type": "number",
                "format": "decimal"
              },
              "maxValue": {
                "type": "number",
                "format": "decimal"
              }
            }
          }
        ]
      },
      "SchemaInUseContentSchemaException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "contentSchemaIds": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "LayerAssignmentInUseWithContentsException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "usedAssignmentSchemaIds": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "SchemaInUseListItemException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "listItemCount": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "SchemaInUseContentException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "contentCount": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "SchemaInUseFieldException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "fieldNamespaces": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "DuplicateMetadataDisplayPatternException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "displayPatternId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "DuplicateSchemaException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaImportEmptyException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "SchemaImportVersionMismatchException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "providedVersion": {
                "type": "string",
                "nullable": true
              },
              "expectedVersion": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaInheritanceFieldIndexDeviationException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaInheritanceTypeDeviationException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaValidationException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "exceptions": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/PictureparkBusinessException"
                }
              }
            }
          }
        ]
      },
      "SchemaSortFieldException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "fieldId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaFieldIdException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "fieldId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaFieldTypeChangeException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "fieldId": {
                "type": "string",
                "nullable": true
              },
              "oldTypeName": {
                "type": "string",
                "nullable": true
              },
              "newTypeName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaFieldNotFilterableException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "fieldId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaFieldNotSortableException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "fieldId": {
                "type": "string",
                "nullable": true
              },
              "schemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaFieldNotSearchableException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "fieldId": {
                "type": "string",
                "nullable": true
              },
              "schemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaFieldInvalidBoostException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "fieldId": {
                "type": "string",
                "nullable": true
              },
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "boost": {
                "type": "number",
                "format": "double"
              },
              "allowedBoostValues": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        ]
      },
      "SchemaFieldSortableInUseException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "fieldId": {
                "type": "string",
                "nullable": true
              },
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "channelIds": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "SchemaNoContentException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaParentChangeException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "oldSchemaParentId": {
                "type": "string",
                "nullable": true
              },
              "newSchemaParentId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaMissingTypeException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "expectedSchemaTypes": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/SchemaType"
                }
              }
            }
          }
        ]
      },
      "SchemaType": {
        "type": "string",
        "description": "Type of the schema",
        "x-enumNames": [
          "Content",
          "Layer",
          "List",
          "Struct"
        ],
        "enum": [
          "Content",
          "Layer",
          "List",
          "Struct"
        ]
      },
      "SchemaPermissionConfigurationException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaMetadataProtectionSettingsNotSupportedForStructsException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaMetadataProtectionSettingsChangeNotAllowedForXmpMappedLayersException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaNoLayerException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaIdException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaInUseException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "exceptions": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/PictureparkBusinessException"
                }
              }
            }
          }
        ]
      },
      "SchemaNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaCountLimitReachedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "SystemSchemaInvalidModificationException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaFieldRelationSchemaSystemSchemaException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "fieldId": {
                "type": "string",
                "nullable": true
              },
              "relationSchemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaFieldRelationSchemaTypeUnsupportedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "fieldId": {
                "type": "string",
                "nullable": true
              },
              "relationSchemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaMultipleTypesException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "schemaTypes": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "MissingDisplayPatternForCustomerDefaultLanguageException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "missingTypes": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/DisplayPatternType"
                }
              }
            }
          }
        ]
      },
      "DisplayPatternType": {
        "type": "string",
        "description": "The display pattern type",
        "x-enumNames": [
          "Thumbnail",
          "List",
          "Detail",
          "Name",
          "DownloadFileName"
        ],
        "enum": [
          "Thumbnail",
          "List",
          "Detail",
          "Name",
          "DownloadFileName"
        ]
      },
      "SchemaViewForAllException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SystemLayerReferenceInvalidModificationException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaFieldAnalyzerInvalidException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "fieldId": {
                "type": "string",
                "nullable": true
              },
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "analyzers": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/Analyzer"
                }
              },
              "allowedAnalyzers": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/Analyzer"
                }
              }
            }
          }
        ]
      },
      "Analyzer": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "None",
          "Simple",
          "Language",
          "PathHierarchy",
          "EdgeNGram",
          "NGram",
          "NoDiacritics",
          "KeywordLowercase"
        ],
        "enum": [
          "None",
          "Simple",
          "Language",
          "PathHierarchy",
          "EdgeNGram",
          "NGram",
          "NoDiacritics",
          "KeywordLowercase"
        ]
      },
      "SchemaFieldRelationMultipleTypesException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "fieldId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaFieldNotRequirableException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "fieldId": {
                "type": "string",
                "nullable": true
              },
              "schemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "DisplayPatternTypeNotSupportedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "displayPatternId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaFieldActivityInUseException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "fieldId": {
                "type": "string",
                "nullable": true
              },
              "schemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaFieldReferencedSchemaChangeNotAllowedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "fieldId": {
                "type": "string",
                "nullable": true
              },
              "oldReferencedSchemaId": {
                "type": "string",
                "nullable": true
              },
              "newReferencedSchemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaFieldReferencedSchemaSystemSchemaException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "fieldId": {
                "type": "string",
                "nullable": true
              },
              "referencedSchemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaFieldRelationRelationTypeIdModificationNotAllowedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "fieldId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaFieldRelationTargetDocTypeModificationNotAllowedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "fieldId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaFieldImportMismatchException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "importingFieldIds": {
                "type": "string",
                "nullable": true
              },
              "existingFieldIds": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaFieldImportRelatedSchemaMismatchException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "fieldId": {
                "type": "string",
                "nullable": true
              },
              "importingRelatedSchemaId": {
                "type": "string",
                "nullable": true
              },
              "existingRelatedSchemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaFieldImportTypeMismatchException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "fieldId": {
                "type": "string",
                "nullable": true
              },
              "importingFieldType": {
                "type": "string",
                "nullable": true
              },
              "existingFieldType": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaFieldNotSupportedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "fieldId": {
                "type": "string",
                "nullable": true
              },
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "fieldType": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaFieldDisplayPatternTypeNotSupportedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "fieldId": {
                "type": "string",
                "nullable": true
              },
              "displayPatternType": {
                "$ref": "#/components/schemas/DisplayPatternType"
              },
              "supportedDisplayPatternTypes": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/DisplayPatternType"
                }
              }
            }
          }
        ]
      },
      "SchemaFieldMarkdownNotMultilineException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "fieldId": {
                "type": "string",
                "nullable": true
              },
              "schemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "IndexingDisplayValueInFilterOnlySupportedForIndexedTagboxFieldsException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "fieldId": {
                "type": "string",
                "nullable": true
              },
              "relatedFieldId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SchemaFieldDynamicViewFieldInvalidFilterTemplateException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "fieldId": {
                "type": "string",
                "nullable": true
              },
              "errors": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "DeleteContentsWithReferencesException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "numberOfReferences": {
                "type": "integer",
                "format": "int64"
              },
              "numberOfShares": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "ContentMetadataUpdateManyException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "failedItemsCount": {
                "type": "integer",
                "format": "int32"
              },
              "totalItemsCount": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "ContentNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "contentIds": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "ContentLayerInvalidException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "contentId": {
                "type": "string",
                "nullable": true
              },
              "layerIds": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "ContentFileReplaceTypeMismatchException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "contentId": {
                "type": "string",
                "nullable": true
              },
              "originalContentType": {
                "$ref": "#/components/schemas/ContentType"
              },
              "newContentType": {
                "$ref": "#/components/schemas/ContentType"
              }
            }
          }
        ]
      },
      "ContentType": {
        "type": "string",
        "description": "Content types",
        "x-enumNames": [
          "Unknown",
          "Bitmap",
          "VectorGraphic",
          "RawImage",
          "InterchangeDocument",
          "WordProcessingDocument",
          "TextDocument",
          "DesktopPublishingDocument",
          "Presentation",
          "Spreadsheet",
          "Archive",
          "Audio",
          "Video",
          "Font",
          "Multimedia",
          "Application",
          "SourceCode",
          "Database",
          "Cad",
          "Model3d",
          "Virtual"
        ],
        "enum": [
          "Unknown",
          "Bitmap",
          "VectorGraphic",
          "RawImage",
          "InterchangeDocument",
          "WordProcessingDocument",
          "TextDocument",
          "DesktopPublishingDocument",
          "Presentation",
          "Spreadsheet",
          "Archive",
          "Audio",
          "Video",
          "Font",
          "Multimedia",
          "Application",
          "SourceCode",
          "Database",
          "Cad",
          "Model3d",
          "Virtual"
        ]
      },
      "ContentBackupFailedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "contentId": {
                "type": "string",
                "nullable": true
              },
              "outputFormatId": {
                "type": "string",
                "nullable": true
              },
              "outputId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "ContentLayerSameRootException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "contentId": {
                "type": "string",
                "nullable": true
              },
              "layerIdsByRootSchema": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/LayerIdsByRootSchema"
                }
              }
            }
          }
        ]
      },
      "LayerIdsByRootSchema": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "rootSchemaId": {
            "type": "string",
            "nullable": true
          },
          "layerSchemaIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ContentHistoricVersionNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "contentId": {
                "type": "string",
                "nullable": true
              },
              "version": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "UnableToDeleteLatestXmpWritebackGeneratedContentHistoricVersionException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "contentId": {
                "type": "string",
                "nullable": true
              },
              "version": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "ContentSchemaChangeException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "contentId": {
                "type": "string",
                "description": "Content for which a change to RequestedContentSchemaId would cause data loss",
                "nullable": true
              },
              "requestedContentSchemaId": {
                "type": "string",
                "description": "ContentSchemaId to which the Content would have been changed",
                "nullable": true
              },
              "incompatibleLayerAssignments": {
                "type": "array",
                "description": "Layers assigned to this Content which are not allowed for contents of type RequestedContentSchemaId",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "ConcurrentFileReplacementDuringRepairException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkConflictException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "contentId": {
                "type": "string",
                "nullable": true
              },
              "expectedOriginalFileVersion": {
                "type": "integer",
                "format": "int32"
              },
              "actualOriginalFileVersion": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "ContentResolveBehaviorNotSupportedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "behaviors": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ContentResolveBehavior"
                }
              }
            }
          }
        ]
      },
      "ContentResolveBehavior": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Content",
          "LinkedListItems",
          "Metadata",
          "Outputs",
          "InnerDisplayValueThumbnail",
          "InnerDisplayValueList",
          "InnerDisplayValueDetail",
          "InnerDisplayValueName",
          "Owner",
          "Permissions",
          "OuterDisplayValueThumbnail",
          "OuterDisplayValueList",
          "OuterDisplayValueDetail",
          "OuterDisplayValueName",
          "HistoricVersionCount",
          "DynamicViewFields",
          "DynamicViewFieldsWithHasItems"
        ],
        "enum": [
          "Content",
          "LinkedListItems",
          "Metadata",
          "Outputs",
          "InnerDisplayValueThumbnail",
          "InnerDisplayValueList",
          "InnerDisplayValueDetail",
          "InnerDisplayValueName",
          "Owner",
          "Permissions",
          "OuterDisplayValueThumbnail",
          "OuterDisplayValueList",
          "OuterDisplayValueDetail",
          "OuterDisplayValueName",
          "HistoricVersionCount",
          "DynamicViewFields",
          "DynamicViewFieldsWithHasItems"
        ]
      },
      "BusinessProcessEngineRequestException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "businessProcessId": {
                "type": "string",
                "nullable": true
              },
              "engineError": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "BusinessProcessNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "businessProcessId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "BusinessProcessDefinitionNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "processDefinitionId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "BusinessProcessDefinitionCreateException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "processDefinitionIds": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "BusinessProcessNotExternalException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkForbiddenException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "businessProcessId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "BusinessProcessCancellationNotSupportedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "businessProcessId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "BusinessProcessContinuationException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "continuationBusinessProcessId": {
                "type": "string",
                "nullable": true
              },
              "precedingBusinessProcessId": {
                "type": "string",
                "nullable": true
              },
              "precedingBusinessProcessException": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PictureparkException"
                  }
                ]
              }
            }
          }
        ]
      },
      "BusinessProcessSummaryNotBatchBasedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "businessProcessId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "BusinessProcessSummaryNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "businessProcessId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SnapshotTimeoutException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkTimeoutException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "SnapshotFailedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "AddMetadataLanguageTimeoutException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkTimeoutException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "environmentProcessId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "EnvironmentProcessAlreadyRunningException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "environmentProcessType": {
                "$ref": "#/components/schemas/EnvironmentProcessType"
              }
            }
          }
        ]
      },
      "EnvironmentProcessType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "AddMetadataLanguage",
          "CustomerUpdate",
          "EnvironmentUpdate",
          "CustomerBoostValuesUpdate",
          "CustomerReshard"
        ],
        "enum": [
          "AddMetadataLanguage",
          "CustomerUpdate",
          "EnvironmentUpdate",
          "CustomerBoostValuesUpdate",
          "CustomerReshard"
        ]
      },
      "EnvironmentProcessNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "environmentProcessId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "EnvironmentProcessWaitTimeoutException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkTimeoutException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "environmentProcessId": {
                "type": "string",
                "nullable": true
              },
              "waitedLifecycles": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "CustomerBoostValuesUpdateTimeoutException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkTimeoutException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "environmentProcessId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "NoTermsOfServiceDefinedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "AtLeastOneActiveTermsOfServiceMustExistException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "ForbiddenHtmlElementsUsedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "BusinessProcessStateNotHitException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkTimeoutException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "businessProcessId": {
                "type": "string",
                "nullable": true
              },
              "expected": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              },
              "actual": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "BusinessProcessLifeCycleNotHitException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkTimeoutException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "businessProcessId": {
                "type": "string",
                "nullable": true
              },
              "expected": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/BusinessProcessLifeCycle"
                }
              },
              "actual": {
                "$ref": "#/components/schemas/BusinessProcessLifeCycle"
              }
            }
          }
        ]
      },
      "OnlyAccessibleToRecipientException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "EnvironmentNotAvailableException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "CustomerNotAvailableException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "customerId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "CustomerAliasHeaderMissingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "BusinessRuleActionInvalidDocumentTypeException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "allowedDocumentTypes": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/BusinessRuleTriggerDocType"
                }
              }
            }
          }
        ]
      },
      "BusinessRuleTriggerDocType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Content",
          "ListItem"
        ],
        "enum": [
          "Content",
          "ListItem"
        ]
      },
      "BusinessRuleActionsMissingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "BusinessRuleConditionMissingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "BusinessRuleConditionsMissingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "BusinessRuleConfigurationValidationException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "innerExceptions": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          }
        ]
      },
      "BusinessRuleSchemaIdInvalidException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "BusinessRulePermissionSetIdInvalidException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "permissionSetId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "BusinessRuleRuleIdDuplicationException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "BusinessRuleRuleIdMissingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "BusinessRuleTriggerPointMissingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "BusinessRuleValidationException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "ruleId": {
                "type": "string",
                "nullable": true
              },
              "innerExceptions": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          }
        ]
      },
      "BusinessRuleRegularExpressionInvalidException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "regex": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "BusinessRuleConditionInvalidTriggerPointException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "allowedDocTypes": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/BusinessRuleTriggerDocType"
                }
              },
              "allowedActions": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/BusinessRuleTriggerAction"
                }
              }
            }
          }
        ]
      },
      "BusinessRuleTriggerAction": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Create",
          "Update",
          "FileReplacement",
          "Schedule"
        ],
        "enum": [
          "Create",
          "Update",
          "FileReplacement",
          "Schedule"
        ]
      },
      "BusinessRuleRefIdsMissingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "BusinessRulePathInvalidException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "path": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "BusinessRuleFieldIdInvalidException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "fieldId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "BusinessRuleContentPermissionSetIdsMissingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "BusinessRuleFieldPathInvalidException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "fieldPath": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "BusinessRulePolygonInvalidException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "BusinessRuleArrayIndexInvalidException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "index": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "BusinessRuleDictionaryKeyInvalidException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "key": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "BusinessRuleProjectionTransformationsMissingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "BusinessRuleInvalidVariableNameException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "BusinessRuleTransformationGroupTransformationsMissingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "BusinessRuleTransformationGroupInputsMissingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "BusinessRuleNamedCacheNameInvalidException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "cacheName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "BusinessRuleNGramTransformationSizeInvalidException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "size": {
                "type": "integer",
                "format": "int32"
              },
              "minSize": {
                "type": "integer",
                "format": "int32"
              },
              "maxSize": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "BusinessRuleNGramTransformationMinWordLengthInvalidException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "minWordLength": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "BusinessRuleNGramTransformationMaxWordLengthInvalidException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "maxWordLength": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "BusinessRuleNotificationInvalidIdException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "BusinessRuleNotificationNoRecipientsException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "BusinessRuleNotificationRecipientUserIdMissingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "BusinessRuleNotificationRecipientUserRoleIdMissingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "BusinessRuleNumberSequenceInvalidIdException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "BusinessRuleNumberSequenceIdDuplicationException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "BusinessRuleScheduleInvalidCronExpressionException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "expression": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "BusinessRuleScheduleFilterMissingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "BusinessRuleScheduleRulesMissingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "BusinessRuleStringContainsConditionValuesToMatchMissingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "BusinessRuleUserInUserRolesConditionUserRoleIdsMissingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "BusinessRuleDateMathTransformationTimeSpanInvalidException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "timeSpan": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "BusinessRuleTransferOwnershipTransferUserIdMissingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "BusinessRuleOutputFormatIdMissingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "BusinessRuleEnqueueCreateEmbedActionExpirationDateInvalidException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "expirationDate": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "NamedCacheConfigurationException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "innerExceptions": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/PictureparkValidationException"
                }
              }
            }
          }
        ]
      },
      "NamedCacheNameMissingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "NamedCacheNameDuplicationException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "ListItemNamedCacheSchemaIdInvalidException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "ListItemNamedCacheKeyFieldsInvalidException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "SchemaTagboxFilterLookupNamedCacheSchemaIdInvalidException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "NoTagsFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "OutputNotAvailableException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "ModelNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "DisplayValueRerenderingInProgressException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "OutputFormatNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "outputFormatId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "OutputFormatSourceNotDefinedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "outputFormatId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "OutputFormatRetentionTimeOutOfRangeException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ArgumentRangeException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "outputFormatId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "NotSupportedFileExtensionForFormatException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NotSupportedFileExtensionException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "formatKind": {
                "type": "string",
                "nullable": true
              },
              "outputFormatId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "OutputFormatXmpWritebackNotSupportedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "outputFormatId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "OutputFormatXmpWritebackDerivedFromCopyFormatNotSupportedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OutputFormatXmpWritebackNotSupportedException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "derivingCopyFormatIds": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "OutputFormatsInUseException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "outputFormatIds": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              },
              "dependentOutputFormatIds": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "OutputFormatOperationInProgressException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkBusinessException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "StaticOutputFormatModificationNotSupportedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "outputFormatId": {
                "type": "string",
                "nullable": true
              },
              "property": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "OriginalOutputFormatModificationNotSupportedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "OutputFormatSourceNotValidForRenderingCategoryException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "outputFormatId": {
                "type": "string",
                "nullable": true
              },
              "sourceFormatId": {
                "type": "string",
                "nullable": true
              },
              "renderingCategory": {
                "$ref": "#/components/schemas/RenderingCategory"
              }
            }
          }
        ]
      },
      "CollectionSizeLimitExceededException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "collectionId": {
                "type": "string",
                "nullable": true
              },
              "limit": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "CollectionModificationNotAllowedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "collectionId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "CollectionNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "collectionId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "NonDefaultTemplateNameNotAllowedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SystemTemplateModificationNotAllowedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "templateId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "TemplateDuplicationException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "duplicatedTemplateId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "TemplateLanguageCodeNotSupportedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "languageCode": {
                "type": "string",
                "nullable": true
              },
              "supportedLanguageCodes": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "TemplateMediaTypesMissingException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "requiredMediaTypes": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "TemplateMediaTypesNotSupportedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "unsupportedMediaTypes": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "TemplateNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "XmpMappingFieldNotSupported": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "fieldPath": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "XmpMappingFieldNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "fieldPath": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "XmpMappingSchemaNotAvailableForFileContentSchemaException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "XmpMappingFieldToLayerWithRequiredFieldsNotAllowedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "layerId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "XmpMappingFieldToLayerWithMetadataProtectionForCreateOrUpdateNotSupportedException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "layerId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "XmpMappingFieldInUseException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "schemaId": {
                "type": "string",
                "nullable": true
              },
              "fieldId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "XmpMappingConfigurationInvalidException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "fieldPath": {
                "type": "string",
                "nullable": true
              },
              "expectedConfiguration": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "ActivityMappingInvalidException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "activityMapping": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "StatisticsExportNotEnabledException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StatisticsFeatureNotEnabledException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "StatisticsFeatureNotEnabledException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
              "scope": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "StatisticsReadNotEnabledException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StatisticsFeatureNotEnabledException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "StatisticsWriteNotEnabledException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StatisticsFeatureNotEnabledException"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "ConversionPresetTemplateNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "conversionPresetTemplateId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "CommentNotFoundException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkNotFoundException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "CommentOwnershipFailureException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "commentId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "CommentReplyDeletionException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "commentId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "CommentReplyParentException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "parentId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "CommentReplyContentMismatchException": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PictureparkValidationException"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "parentId": {
                "type": "string",
                "nullable": true
              },
              "contentId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SnapshotRepository": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "entityType",
          "isArchived"
        ],
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "entityId": {
            "type": "string",
            "nullable": true
          },
          "entityType": {
            "$ref": "#/components/schemas/BackupEntityType"
          },
          "isArchived": {
            "type": "boolean"
          }
        }
      },
      "BackupEntityType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Environment",
          "Customer"
        ],
        "enum": [
          "Environment",
          "Customer"
        ]
      },
      "SnapshotRepositoryCustomerCreateRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SnapshotRepositoryBaseCreateRequest"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "customerAlias": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SnapshotRepositoryBaseCreateRequest": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "startTime"
        ],
        "properties": {
          "repositoryName": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SnapshotEnqueueResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tokenId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SnapshotCustomerCreateRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SnapshotBaseCreateRequest"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "customerAlias": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "SnapshotBaseCreateRequest": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "snapshotInactive",
          "reason",
          "timestamp"
        ],
        "properties": {
          "snapshotName": {
            "type": "string",
            "description": "The SnapshotName. Must be unique.\nThe name usually will be enriched with Reason, ContractVersion and DateTime information.",
            "nullable": true
          },
          "repositoryName": {
            "type": "string",
            "description": "The Repository in which the snapshot will be created.",
            "nullable": true
          },
          "indices": {
            "type": "array",
            "description": "The Indices being part of the snapshot.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "snapshotInactive": {
            "type": "boolean",
            "description": "Snapshot also if the entity is inactive."
          },
          "reason": {
            "description": "The snapshot backup reason will be added to the snapshot name.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/BackupReason"
              }
            ]
          },
          "timestamp": {
            "type": "string",
            "description": "Timestamp when creating the requst (utc). If there is a more recent snapshot in the repository, it will keep/return the latest one,\ninstead of creating a new one.",
            "format": "date-time"
          },
          "tokenId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BackupReason": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Custom",
          "Update",
          "Deletion"
        ],
        "enum": [
          "Custom",
          "Update",
          "Deletion"
        ]
      },
      "CustomerExportResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "repositoryName": {
            "type": "string",
            "nullable": true
          },
          "snapshotName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CustomerExportRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "keepRepository",
          "excludeSecondaryIndices"
        ],
        "properties": {
          "customerAlias": {
            "type": "string",
            "nullable": true
          },
          "keepRepository": {
            "type": "boolean"
          },
          "excludeSecondaryIndices": {
            "type": "boolean"
          }
        }
      },
      "SnapshotRestore": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "restoreDate"
        ],
        "properties": {
          "restoreDate": {
            "type": "string",
            "format": "date-time"
          },
          "repositoryName": {
            "type": "string",
            "nullable": true
          },
          "snapshotName": {
            "type": "string",
            "nullable": true
          },
          "indices": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SnapshotCustomerRestoreRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SnapshotBaseRestoreRequest"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "customerAlias": {
                "type": "string",
                "nullable": true
              },
              "customerId": {
                "type": "string",
                "nullable": true
              },
              "resetServiceProviders": {
                "type": "boolean"
              },
              "skipUpdateAfterRestore": {
                "type": "boolean"
              },
              "refillRecreatedSecondaryIndices": {
                "type": "boolean",
                "description": "Defines whether secondary indices which are missing for customer are filled or left empty",
                "default": true
              },
              "recreateSearchIndicesCluster": {
                "type": "string",
                "description": "Defines where searchIndices are recreated if they did not exist (not part of restored snapshot, for example)\nIf null, searchIndices will be recreated on the cluster they were on when the snapshot was taken (or, if that cluster does not exist, on the default)",
                "nullable": true
              }
            }
          }
        ]
      },
      "SnapshotBaseRestoreRequest": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "snapshotName": {
            "type": "string",
            "nullable": true
          },
          "repositoryName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SnapshotCustomerCloneRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "anonymize"
        ],
        "properties": {
          "snapshotName": {
            "type": "string",
            "nullable": true
          },
          "repositoryName": {
            "type": "string",
            "nullable": true
          },
          "sourceCustomerAlias": {
            "type": "string",
            "nullable": true
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "customerAlias": {
            "type": "string",
            "nullable": true
          },
          "customerHosts": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "corsAllowedHosts": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "storagePath": {
            "type": "string",
            "nullable": true
          },
          "baseUrl": {
            "type": "string",
            "nullable": true
          },
          "redirectUri": {
            "type": "string",
            "nullable": true
          },
          "anonymize": {
            "type": "boolean"
          },
          "adminUser": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "adminUserPassword": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "User": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "emailAddress",
          "isDeleted"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "User's Picturepark ID.",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "User's first name.",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "User's last name.",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "description": "Email address of the user (doubles as username).",
            "minLength": 1
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Marks a user that was deleted from the system."
          }
        }
      },
      "Customer": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "lifeCycle"
        ],
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "alias": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "deactivationMessage": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TranslatedStringDictionary"
              }
            ]
          },
          "customerHosts": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "mainCatalog": {
            "type": "string",
            "nullable": true
          },
          "contractVersion": {
            "type": "string",
            "nullable": true
          },
          "storagePath": {
            "type": "string",
            "nullable": true
          },
          "watermarkPath": {
            "type": "string",
            "nullable": true
          },
          "logoPath": {
            "type": "string",
            "nullable": true
          },
          "lifeCycle": {
            "$ref": "#/components/schemas/LifeCycle"
          },
          "licenseInformation": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LicenseInformation"
              }
            ]
          }
        }
      },
      "TranslatedStringDictionary": {
        "type": "object",
        "description": "A custom dictionary type to distinguish language specific class properties.",
        "additionalProperties": {
          "type": "string"
        }
      },
      "LifeCycle": {
        "type": "string",
        "description": "Lifecycle",
        "x-enumNames": [
          "Draft",
          "Active",
          "Inactive",
          "Deleted"
        ],
        "enum": [
          "Draft",
          "Active",
          "Inactive",
          "Deleted"
        ]
      },
      "LicenseInformation": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "backupOption",
          "subscription",
          "historicVersioningState"
        ],
        "properties": {
          "backupOption": {
            "description": "Backup option for the customer",
            "oneOf": [
              {
                "$ref": "#/components/schemas/LicenseBackupOption"
              }
            ]
          },
          "subscription": {
            "description": "Subscription for the customer",
            "oneOf": [
              {
                "$ref": "#/components/schemas/LicenseSubscription"
              }
            ]
          },
          "historicVersioningState": {
            "description": "State of content historic versioning",
            "oneOf": [
              {
                "$ref": "#/components/schemas/HistoricVersioningState"
              }
            ]
          },
          "contentStatistics": {
            "description": "State of statistics features for Content",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/StatisticsLicenseState"
              }
            ]
          },
          "imageOptimization": {
            "description": "Image optimization licensing options",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ImageOptimizationLicenseState"
              }
            ]
          }
        }
      },
      "LicenseBackupOption": {
        "type": "string",
        "description": "License backup option",
        "x-enumNames": [
          "None",
          "SuisseSafe"
        ],
        "enum": [
          "None",
          "SuisseSafe"
        ]
      },
      "LicenseSubscription": {
        "type": "string",
        "description": "License subscription",
        "x-enumNames": [
          "Standard",
          "Premium",
          "Enterprise"
        ],
        "enum": [
          "Standard",
          "Premium",
          "Enterprise"
        ]
      },
      "HistoricVersioningState": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Disabled",
          "Suspended",
          "Enabled"
        ],
        "enum": [
          "Disabled",
          "Suspended",
          "Enabled"
        ]
      },
      "StatisticsLicenseState": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "collection",
          "read",
          "write",
          "export"
        ],
        "properties": {
          "collection": {
            "type": "boolean",
            "description": "Defines whether the respective statistics are gathered periodically"
          },
          "read": {
            "type": "boolean",
            "description": "Allows or prevents access to read endpoints"
          },
          "write": {
            "type": "boolean",
            "description": "Allows or prevents access to write endpoints"
          },
          "export": {
            "type": "boolean",
            "description": "Allows or prevents export of the respective statistics"
          }
        }
      },
      "ImageOptimizationLicenseState": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "embedDelivery",
          "apiOutputEditing"
        ],
        "properties": {
          "embedDelivery": {
            "type": "boolean",
            "description": "Whether image optimization can be used when delivering embeds."
          },
          "apiOutputEditing": {
            "type": "boolean",
            "description": "Whether edit output endpoint is available in API."
          }
        }
      },
      "CustomerImportRequest": {
        "type": "object",
        "description": "Request to import the ElasticSearch repository of a customer from another cloud",
        "additionalProperties": false,
        "required": [
          "resetExternalUserIds",
          "resetIdentityProviderIds",
          "resetServiceProviders",
          "refillRecreatedSecondaryIndices"
        ],
        "properties": {
          "customerId": {
            "type": "string",
            "description": "The customer id",
            "nullable": true
          },
          "repositoryName": {
            "type": "string",
            "description": "Name of the ElasticSearch repository",
            "nullable": true
          },
          "snapshotName": {
            "type": "string",
            "description": "Name of the snapshot within the ElasticSearch repository if available",
            "nullable": true
          },
          "storagePath": {
            "type": "string",
            "description": "Storage path of the originals and outputs, path shall not include the customer id",
            "nullable": true
          },
          "resetExternalUserIds": {
            "type": "boolean",
            "description": "Set to true if the customer was configured against another IDS instance"
          },
          "resetIdentityProviderIds": {
            "type": "boolean",
            "description": "Set to true if the customer was configured against another IDS instance"
          },
          "adminUserEmail": {
            "type": "string",
            "description": "Provide email address of an admin user",
            "nullable": true
          },
          "adminUserPassword": {
            "type": "string",
            "description": "Provide password for the admin user",
            "nullable": true
          },
          "resetServiceProviders": {
            "type": "boolean",
            "description": "Reset service providers"
          },
          "contentBackupStoragePath": {
            "type": "string",
            "description": "Storage path of the content backup, path shall not include the customer id",
            "nullable": true
          },
          "logoPath": {
            "type": "string",
            "description": "Logo path, if not given, the path is automatically set inside the customer folder",
            "nullable": true
          },
          "watermarkPath": {
            "type": "string",
            "description": "Watermark path, if not given, the path is automatically set inside the customer folder",
            "nullable": true
          },
          "baseUrl": {
            "type": "string",
            "description": "Base url for for shares",
            "nullable": true
          },
          "customerHosts": {
            "type": "array",
            "description": "List of customers hosts",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "corsAllowedHosts": {
            "type": "array",
            "description": "List of CORS allowed hosts",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "refillRecreatedSecondaryIndices": {
            "type": "boolean",
            "description": "Defines whether secondary indices which are missing for customer are filled or left empty",
            "default": true
          },
          "recreateSearchIndicesCluster": {
            "type": "string",
            "description": "Defines where searchIndices are recreated if they did not exist (not part of restored snapshot, for example)\nIf null, searchIndices will be recreated on the cluster they were on when the snapshot was taken (or, if that cluster does not exist, on the default)",
            "nullable": true
          }
        }
      },
      "SnapshotRepositoryEnvironmentCreateRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SnapshotRepositoryBaseCreateRequest"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "SnapshotEnvironmentCreateRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SnapshotBaseCreateRequest"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "SnapshotEnvironmentRestoreRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SnapshotBaseRestoreRequest"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "SnapshotEnvironmentSearchResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResultOfSnapshot"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "missingRepositories": {
                "type": "array",
                "description": "List of repositories that were used in the repositories filter, but were not found in the system.",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "BaseResultOfSnapshot": {
        "type": "object",
        "description": "Base class for search results",
        "additionalProperties": false,
        "required": [
          "results",
          "totalResults",
          "elapsedMilliseconds"
        ],
        "properties": {
          "totalResults": {
            "type": "integer",
            "description": "The total number of matching documents.",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "description": "The matched documents.",
            "items": {
              "$ref": "#/components/schemas/Snapshot"
            }
          },
          "elapsedMilliseconds": {
            "type": "integer",
            "description": "The search execution time in milliseconds.",
            "format": "int64"
          },
          "pageToken": {
            "type": "string",
            "description": "An optional token to access the next page of results for those endpoints that support backend scrolling logic.",
            "nullable": true
          }
        }
      },
      "Snapshot": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "durationInMilliseconds",
          "endTime",
          "endTimeInMilliseconds",
          "repositoryStartTime",
          "repositoryIsArchived",
          "startTime",
          "startTimeInMilliseconds",
          "entityType",
          "restoreDate"
        ],
        "properties": {
          "durationInMilliseconds": {
            "type": "integer",
            "description": "The snapshot creation DurationInMilliseconds.",
            "format": "int64"
          },
          "endTime": {
            "type": "string",
            "description": "The snapshot EndTime.",
            "format": "date-time"
          },
          "endTimeInMilliseconds": {
            "type": "integer",
            "description": "The snapshot EndTimeInMilliseconds.",
            "format": "int64"
          },
          "failures": {
            "type": "array",
            "description": "The snapshot elastic search shard failures.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SnapshotShardFailure"
            }
          },
          "indices": {
            "type": "array",
            "description": "The snapshot Indices.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "description": "The snapshot Name.",
            "nullable": true
          },
          "repositoryName": {
            "type": "string",
            "description": "The repository name.",
            "nullable": true
          },
          "repositoryStartTime": {
            "type": "string",
            "description": "The repository start time.",
            "format": "date-time"
          },
          "repositoryIsArchived": {
            "type": "boolean",
            "description": "Is the repository already archived?"
          },
          "startTime": {
            "type": "string",
            "description": "The snapshot StartTime.",
            "format": "date-time"
          },
          "startTimeInMilliseconds": {
            "type": "integer",
            "description": "The snapshot StartTimeInMilliseconds.",
            "format": "int64"
          },
          "state": {
            "type": "string",
            "description": "The snapshot State.",
            "nullable": true
          },
          "entityId": {
            "type": "string",
            "nullable": true
          },
          "entityType": {
            "$ref": "#/components/schemas/BackupEntityType"
          },
          "restoreDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SnapshotShardFailure": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "index": {
            "type": "string",
            "description": "The Index having the shard failure.",
            "nullable": true
          },
          "nodeId": {
            "type": "string",
            "description": "The elastic search NodeId.",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "description": "The elastic serach shard failure Reason.",
            "nullable": true
          },
          "shardId": {
            "type": "string",
            "description": "The failing elastic search ShardId.",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "The snapshot failure status.",
            "nullable": true
          }
        }
      },
      "SnapshotEnvironmentSearchRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "start",
          "limit"
        ],
        "properties": {
          "searchString": {
            "type": "string",
            "nullable": true
          },
          "start": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "repositoryNames": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "environmentId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SnapshotCustomerSearchResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResultOfSnapshot"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "missingRepositories": {
                "type": "array",
                "description": "List of repositories that were used in the repositories filter, but were not found in the system.",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "SnapshotCustomerSearchRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "start",
          "limit"
        ],
        "properties": {
          "searchString": {
            "type": "string",
            "nullable": true
          },
          "start": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "repositoryNames": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "customerAlias": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "snapshotDataType": {
            "description": "Limits the returned snapshots to the ones containing data of the specified type (customer, export or history). This search criteria is applied only if no repository name\nis specified.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SnapshotDataType"
              }
            ]
          }
        }
      },
      "SnapshotDataType": {
        "type": "string",
        "description": "Type of data that have been snapshot",
        "x-enumNames": [
          "Customer",
          "History",
          "Export"
        ],
        "enum": [
          "Customer",
          "History",
          "Export"
        ]
      },
      "SnapshotRepositorySearchResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalResults"
        ],
        "properties": {
          "totalResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SnapshotRepository"
            }
          }
        }
      },
      "SnapshotRepositoryCustomerSearchRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "customerAlias": {
            "type": "string",
            "nullable": true
          },
          "snapshotDataType": {
            "description": "Limits the returned snapshot repositories to the ones containing customer, history or export backups.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SnapshotDataType"
              }
            ]
          }
        }
      },
      "SnapshotRepositoryEnvironmentSearchRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "environmentId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SnapshotRepositoryCleanupResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "cleanupTime"
        ],
        "properties": {
          "repositories": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "cleanupTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SnapshotRepositoryArchiveRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "isArchived"
        ],
        "properties": {
          "isArchived": {
            "type": "boolean"
          },
          "repositoryName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SnapshotRepositorySearchByNameRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "repositoryName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "GlobalSnapshotRepositoryStateResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "backupInProgress"
        ],
        "properties": {
          "backupInProgress": {
            "type": "boolean",
            "description": "Indicates if a Snapshot operation is currently in progress"
          },
          "backupVersion": {
            "type": "string",
            "description": "If no snapshot in progress, this version should be re-checked after\nperforming read operations on Snapshot-Repositories.",
            "nullable": true
          }
        }
      },
      "ContentBackupSearchResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalResults"
        ],
        "properties": {
          "totalResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "pageToken": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ContentBackupSearchRequest": {
        "type": "object",
        "description": "Request to search for outputs that are not yet marked as backed up.",
        "additionalProperties": false,
        "required": [
          "exclusionTime",
          "limit"
        ],
        "properties": {
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "exclusionTime": {
            "type": "string",
            "description": "Time span relative to now for which missing backup timestamp is not considered a missing backup",
            "format": "time-span"
          },
          "limit": {
            "type": "integer",
            "description": "Limits the document count of the result set. Defaults to 30.",
            "format": "int32",
            "default": 30
          },
          "pageToken": {
            "type": "string",
            "description": "To get a large amount of data, page token returned from the response can be used to get all data.",
            "nullable": true
          }
        }
      },
      "ContentBackupEnableRequest": {
        "type": "object",
        "description": "Request to search aggregation values for Contents",
        "additionalProperties": false,
        "properties": {
          "customerId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ContentBackupDisableRequest": {
        "type": "object",
        "description": "Request to search aggregation values for Contents",
        "additionalProperties": false,
        "properties": {
          "customerId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ContentBackupCancelRecoveryRequest": {
        "type": "object",
        "description": "Request to search aggregation values for Contents",
        "additionalProperties": false,
        "properties": {
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "businessProcessId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ContentBackupForceCompleteRecoveryRequest": {
        "type": "object",
        "description": "Request to search aggregation values for Contents",
        "additionalProperties": false,
        "properties": {
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "businessProcessId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ContentBackupAcknowledgementResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "succeeded"
        ],
        "properties": {
          "filePath": {
            "type": "string",
            "nullable": true
          },
          "succeeded": {
            "type": "boolean"
          },
          "error": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ErrorResponse"
              }
            ]
          }
        }
      },
      "ContentBackupAcknowledgementRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "filePath",
          "sha1Hash",
          "allowNotRequested"
        ],
        "properties": {
          "filePath": {
            "type": "string",
            "minLength": 1
          },
          "sha1Hash": {
            "type": "string",
            "minLength": 1
          },
          "allowNotRequested": {
            "type": "boolean",
            "description": "If false (default), only files which were previously copied to backup location\ncan be acknowledged. True allows acknowledging outputs which were backed up\nusing other mechanisms than ContentBackup."
          }
        }
      },
      "CustomerCreateRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "useSsl",
          "enableQueryDetails",
          "elasticSearchNumberOfShards",
          "elasticSearchNumberOfReplicas",
          "rootContentSearchIndexNumberOfShards",
          "rootContentSearchIndexNumberOfReplicas",
          "rootListItemSearchIndexNumberOfShards",
          "rootListItemSearchIndexNumberOfReplicas",
          "indexedFieldThreshold",
          "sortableFieldThreshold",
          "contentRetentionTime",
          "listItemRetentionTime",
          "userRetentionTime",
          "ownerTokenRetentionTime",
          "successfulTransferRetentionTime",
          "incompleteTransferRetentionTime",
          "rollingIndexCreationScheduleTime",
          "documentHistoryRetentionTime",
          "liveStreamRetentionTime",
          "importCollectionRetentionTime",
          "editCollectionRetentionTime",
          "notificationEventCollectionRetentionTime",
          "replacedOriginalsRetentionTime",
          "snapshotEnabled",
          "snapshotFullbackupScheduleTime",
          "snapshotRetentionTime",
          "contentBackupState",
          "apiCallsPerMinute",
          "enableSupportUserRegistrationEmailNotification",
          "enableSupportUserRegistrationNotification",
          "skipSignUpCaptcha"
        ],
        "properties": {
          "alias": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "nullable": true
          },
          "baseUrl": {
            "type": "string",
            "nullable": true
          },
          "storagePath": {
            "type": "string",
            "nullable": true
          },
          "watermarkPath": {
            "type": "string",
            "nullable": true
          },
          "logoPath": {
            "type": "string",
            "nullable": true
          },
          "customerHosts": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "useSsl": {
            "type": "boolean"
          },
          "enableQueryDetails": {
            "type": "boolean"
          },
          "cdnConfiguration": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CdnConfigurationBase"
              }
            ]
          },
          "taggingConfiguration": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaggingConfigurationBase"
              }
            ]
          },
          "supportContactEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "identityServerProviders": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IdentityServerProvider"
            }
          },
          "serviceProviders": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomerServiceProvider"
            }
          },
          "corsAllowedHosts": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "elasticSearchNumberOfShards": {
            "type": "integer",
            "format": "int32"
          },
          "elasticSearchNumberOfReplicas": {
            "type": "integer",
            "format": "int32"
          },
          "rootContentSearchIndexClusterName": {
            "type": "string",
            "description": "Specify ES cluster for ContentSearch index",
            "nullable": true
          },
          "rootContentSearchIndexNumberOfShards": {
            "type": "integer",
            "format": "int32"
          },
          "rootContentSearchIndexNumberOfReplicas": {
            "type": "integer",
            "format": "int32"
          },
          "rootListItemSearchIndexClusterName": {
            "type": "string",
            "description": "Specify ES cluster for ListItemSearch index",
            "nullable": true
          },
          "rootListItemSearchIndexNumberOfShards": {
            "type": "integer",
            "format": "int32"
          },
          "rootListItemSearchIndexNumberOfReplicas": {
            "type": "integer",
            "format": "int32"
          },
          "indexedFieldThreshold": {
            "type": "integer",
            "format": "int32"
          },
          "sortableFieldThreshold": {
            "type": "integer",
            "format": "int32"
          },
          "noReplyEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "languageConfiguration": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LanguageConfiguration"
              }
            ]
          },
          "outputFormats": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/OutputFormat"
            }
          },
          "contentRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "listItemRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "userRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "ownerTokenRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "successfulTransferRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "incompleteTransferRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "rollingIndexCreationScheduleTime": {
            "type": "string",
            "format": "time-span"
          },
          "documentHistoryRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "liveStreamRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "importCollectionRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "editCollectionRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "notificationEventCollectionRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "replacedOriginalsRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "snapshotEnabled": {
            "type": "boolean"
          },
          "snapshotFullbackupScheduleTime": {
            "type": "string",
            "format": "time-span"
          },
          "snapshotRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "adminUser": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "adminUserPassword": {
            "type": "string",
            "nullable": true
          },
          "contentBackupState": {
            "$ref": "#/components/schemas/ContentBackupState"
          },
          "apiCallsPerMinute": {
            "type": "integer",
            "format": "int32"
          },
          "contentBackupStoragePath": {
            "type": "string",
            "nullable": true
          },
          "boostValues": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "enableSupportUserRegistrationEmailNotification": {
            "type": "boolean"
          },
          "enableSupportUserRegistrationNotification": {
            "type": "boolean"
          },
          "defaultUserRoleId": {
            "type": "string",
            "nullable": true
          },
          "skipSignUpCaptcha": {
            "type": "boolean"
          },
          "licenseInformation": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LicenseInformation"
              }
            ]
          },
          "idsAccentColor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CdnConfigurationBase": {
        "type": "object",
        "discriminator": {
          "propertyName": "kind",
          "mapping": {
            "FastlyCdnConfiguration": "#/components/schemas/FastlyCdnConfiguration"
          }
        },
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "kind"
        ],
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          },
          "kind": {
            "type": "string"
          }
        }
      },
      "FastlyCdnConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CdnConfigurationBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "apiToken": {
                "type": "string",
                "nullable": true
              },
              "serviceId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "TaggingConfigurationBase": {
        "type": "object",
        "discriminator": {
          "propertyName": "kind",
          "mapping": {
            "ClarifaiTaggingConfiguration": "#/components/schemas/ClarifaiTaggingConfiguration",
            "SimulatedTaggingConfiguration": "#/components/schemas/SimulatedTaggingConfiguration"
          }
        },
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "kind",
          "enableImageAnalytics",
          "enableLegacyTaggingBehavior"
        ],
        "properties": {
          "enableImageAnalytics": {
            "type": "boolean"
          },
          "enableLegacyTaggingBehavior": {
            "type": "boolean"
          },
          "defaultTagOutputFormatId": {
            "type": "string",
            "nullable": true
          },
          "defaultKeywordLookupCacheName": {
            "type": "string",
            "nullable": true
          },
          "defaultTaggingLayerId": {
            "type": "string",
            "nullable": true
          },
          "defaultFoundTagsFieldId": {
            "type": "string",
            "nullable": true
          },
          "defaultMissingKeywordsFieldId": {
            "type": "string",
            "nullable": true
          },
          "kind": {
            "type": "string"
          }
        }
      },
      "ClarifaiTaggingConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TaggingConfigurationBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "apiToken": {
                "type": "string",
                "nullable": true
              },
              "useDownloadLink": {
                "type": "boolean"
              },
              "defaultModel": {
                "type": "string",
                "nullable": true
              },
              "defaultLanguageCode": {
                "type": "string",
                "nullable": true
              },
              "defaultMinimumValue": {
                "type": "number",
                "format": "decimal"
              }
            }
          }
        ]
      },
      "SimulatedTaggingConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TaggingConfigurationBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "defaultNumberOfKeywords": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "IdentityServerProvider": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CustomerServiceProvider": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "scopes": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "allowedMessages": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomerAllowedMessage"
            }
          },
          "allowedCommands": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomerAllowedCommand"
            }
          },
          "userRoleIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "settings": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CustomerAllowedMessage": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "target": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CustomerAllowedCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "LanguageConfiguration": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "systemLanguages",
          "metadataLanguages",
          "defaultLanguage"
        ],
        "properties": {
          "systemLanguages": {
            "type": "array",
            "description": "A list of languages serving as system languages.",
            "items": {
              "type": "string"
            }
          },
          "metadataLanguages": {
            "type": "array",
            "description": "A list of languages serving as metadata languages.",
            "items": {
              "type": "string"
            }
          },
          "defaultLanguage": {
            "type": "string",
            "description": "The default language. Not the be confused with the metadata fallback language x-default.",
            "minLength": 1
          }
        }
      },
      "OutputFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OutputFormatEditable"
          },
          {
            "type": "object",
            "description": "Represents an output format.",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "description": "Output format ID.",
                "nullable": true
              },
              "system": {
                "type": "boolean",
                "description": "Marks if this is a system output format."
              },
              "dynamic": {
                "type": "boolean",
                "description": "A dynamic output format is not rendered automatically, but only on demand."
              },
              "dataExtraction": {
                "type": "boolean",
                "description": "Specifies if output format should be taken into account during data extraction."
              },
              "temporary": {
                "type": "boolean",
                "description": "Temporary outputs will not be backed up."
              }
            }
          }
        ]
      },
      "OutputFormatEditable": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OutputFormatRenderingSpecification"
          },
          {
            "type": "object",
            "description": "Represents the editable part of the output format.",
            "additionalProperties": false,
            "required": [
              "names"
            ],
            "properties": {
              "names": {
                "description": "Language specific names.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/TranslatedStringDictionary"
                  }
                ]
              },
              "retentionTime": {
                "type": "string",
                "description": "How long should the dynamic outputs created from this format be kept.",
                "format": "time-span"
              },
              "downloadFileNamePatterns": {
                "description": "Optional patterns (liquid syntax) that produce the filename for item of this output format.\nIf set, the customer's default language is required.",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/TranslatedStringDictionary"
                  }
                ]
              },
              "viewForAll": {
                "type": "boolean",
                "description": "Indicates if outputs of this format should be accessible for users not having AccessOriginal permission on the content."
              },
              "enableXmpWriteback": {
                "type": "boolean",
                "description": "Indicates if metadata should be written into XMP header of outputs where applicable and configured."
              },
              "xmpWritebackOptions": {
                "description": "Defines additional settings for XmpWriteback",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/XmpWritebackOptions"
                  }
                ]
              }
            }
          }
        ]
      },
      "XmpWritebackOptions": {
        "type": "object",
        "description": "Defines additional settings for XmpWriteback",
        "additionalProperties": false,
        "required": [
          "mergeMode"
        ],
        "properties": {
          "mergeMode": {
            "description": "Defines how data from XmpMappings interacts with unaltered Xmp data contained in originally uploaded file",
            "oneOf": [
              {
                "$ref": "#/components/schemas/XmpWritebackMergeMode"
              }
            ]
          }
        }
      },
      "XmpWritebackMergeMode": {
        "type": "string",
        "description": "Defines how data from XmpMappings interacts with unaltered Xmp data",
        "x-enumNames": [
          "MappingOnly",
          "MergeWithOriginal"
        ],
        "enum": [
          "MappingOnly",
          "MergeWithOriginal"
        ]
      },
      "OutputFormatRenderingSpecification": {
        "type": "object",
        "description": "Used to specify how to render derived outputs",
        "additionalProperties": false,
        "properties": {
          "sourceOutputFormats": {
            "description": "Which output format should be used as a source of data.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SourceOutputFormats"
              }
            ]
          },
          "format": {
            "description": "Information about the technical format of the data, e.g. JPEG, AAC or video still.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/FormatBase"
              }
            ]
          }
        }
      },
      "SourceOutputFormats": {
        "type": "object",
        "description": "Defines the source used for rendering an OutputFormat depending on the type of content",
        "additionalProperties": false,
        "properties": {
          "image": {
            "type": "string",
            "description": "The source to be used for content of type Image",
            "nullable": true
          },
          "video": {
            "type": "string",
            "description": "The source to be used for content of type Video",
            "nullable": true
          },
          "document": {
            "type": "string",
            "description": "The source to be used for content of type Document",
            "nullable": true
          },
          "audio": {
            "type": "string",
            "description": "The source to be used for content of type Audio",
            "nullable": true
          },
          "vector": {
            "type": "string",
            "description": "The source to be used for content of type Vector",
            "nullable": true
          }
        }
      },
      "FormatBase": {
        "type": "object",
        "discriminator": {
          "propertyName": "kind",
          "mapping": {
            "FormatWithFixedExtensionBase": "#/components/schemas/FormatWithFixedExtensionBase",
            "OriginalFormat": "#/components/schemas/OriginalFormat",
            "CopyFormat": "#/components/schemas/CopyFormat",
            "ImageFormatBase": "#/components/schemas/ImageFormatBase",
            "JpegFormat": "#/components/schemas/JpegFormat",
            "PngFormat": "#/components/schemas/PngFormat",
            "TiffFormat": "#/components/schemas/TiffFormat",
            "WebPFormat": "#/components/schemas/WebPFormat",
            "AvifFormat": "#/components/schemas/AvifFormat",
            "VideoFormatBase": "#/components/schemas/VideoFormatBase",
            "AudioFormatBase": "#/components/schemas/AudioFormatBase",
            "Mp4VideoFormat": "#/components/schemas/Mp4VideoFormat",
            "VideoSpriteFormat": "#/components/schemas/VideoSpriteFormat",
            "VideoStillFormat": "#/components/schemas/VideoStillFormat",
            "AacAudioFormat": "#/components/schemas/AacAudioFormat",
            "AudioStillFormat": "#/components/schemas/AudioStillFormat",
            "Mp3AudioFormat": "#/components/schemas/Mp3AudioFormat",
            "DocumentFormatBase": "#/components/schemas/DocumentFormatBase",
            "DocumentStillFormat": "#/components/schemas/DocumentStillFormat",
            "PdfFormat": "#/components/schemas/PdfFormat",
            "VectorFormatBase": "#/components/schemas/VectorFormatBase",
            "SvgFormat": "#/components/schemas/SvgFormat",
            "VectorStillFormat": "#/components/schemas/VectorStillFormat"
          }
        },
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "kind"
        ],
        "properties": {
          "kind": {
            "type": "string"
          }
        }
      },
      "FormatWithFixedExtensionBase": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FormatBase"
          },
          {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
              "extension": {
                "type": "string",
                "description": "The filename extension of the file produced by this Format.",
                "nullable": true
              }
            }
          }
        ]
      },
      "OriginalFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FormatBase"
          },
          {
            "type": "object",
            "description": "Special format that represents the original.",
            "additionalProperties": false
          }
        ]
      },
      "CopyFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FormatBase"
          },
          {
            "type": "object",
            "description": "A format that, when rendered, simply copies the source file. Primarily intended for use with XmpWriteback.",
            "additionalProperties": false
          }
        ]
      },
      "ImageFormatBase": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FormatWithFixedExtensionBase"
          },
          {
            "type": "object",
            "description": "Base class for ImageFormats such as JPEG, PNG, TIFF, ...",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
              "colorProfile": {
                "description": "Color profile to use. Colorspace is derived from the chosen profile.",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ColorProfile"
                  }
                ]
              },
              "colorTransformationIntent": {
                "description": "The method of conversion for color spaces (e.g. CMYK to RGB). Further information can be found here: http://www.colourphil.co.uk/rendering_intents.shtml",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ColorTransformationIntent"
                  }
                ]
              },
              "horizontalResolution": {
                "type": "number",
                "description": "Horizontal resolution in dpi (dots per inch)",
                "format": "float",
                "nullable": true
              },
              "verticalResolution": {
                "type": "number",
                "description": "Vertical resolution in dpi (dots per inch)",
                "format": "float",
                "nullable": true
              },
              "keepClippingPath": {
                "type": "boolean",
                "description": "Copy clipping paths from input."
              },
              "resizeAction": {
                "description": "Allows resizing of the image.",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ResizeAction"
                  }
                ]
              },
              "actions": {
                "type": "array",
                "description": "A collection of actions to be applied during rendering.",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/ImageActionBase"
                }
              }
            }
          }
        ]
      },
      "ColorProfile": {
        "type": "string",
        "description": "Available color profiles",
        "x-enumNames": [
          "AdobeRgb1998",
          "AppleRgb",
          "ColorMatchRgb",
          "EciRgbV1",
          "EciRgbV2",
          "Srgb",
          "SrgbColorSpaceProfile",
          "EuropeIsoCoatedFogra27",
          "EuroscaleCoated",
          "EuroscaleUncoated",
          "IsoCoated",
          "IsoCoatedEciV2",
          "JapanColor2001Coated",
          "JapanColor2001Uncoated",
          "JapanColor2002Newspaper",
          "JapanWebCoated",
          "UsSheetfedCoated",
          "UsSheetfedUncoated",
          "UsWebCoatedSwop",
          "UsWebUncoated",
          "IsoCoatedV2Grey1cBas",
          "IsoCoated300EciV2",
          "CoatedFogra27",
          "CoatedFogra39",
          "UncoatedFogra29",
          "WebCoatedFogra28",
          "WebCoatedSwop2006Grade3",
          "WebCoatedSwop2006Grade5",
          "Isonewspaper26v4",
          "Isonewspaper26v4Grey"
        ],
        "enum": [
          "AdobeRgb1998",
          "AppleRgb",
          "ColorMatchRgb",
          "EciRgbV1",
          "EciRgbV2",
          "Srgb",
          "SrgbColorSpaceProfile",
          "EuropeIsoCoatedFogra27",
          "EuroscaleCoated",
          "EuroscaleUncoated",
          "IsoCoated",
          "IsoCoatedEciV2",
          "JapanColor2001Coated",
          "JapanColor2001Uncoated",
          "JapanColor2002Newspaper",
          "JapanWebCoated",
          "UsSheetfedCoated",
          "UsSheetfedUncoated",
          "UsWebCoatedSwop",
          "UsWebUncoated",
          "IsoCoatedV2Grey1cBas",
          "IsoCoated300EciV2",
          "CoatedFogra27",
          "CoatedFogra39",
          "UncoatedFogra29",
          "WebCoatedFogra28",
          "WebCoatedSwop2006Grade3",
          "WebCoatedSwop2006Grade5",
          "Isonewspaper26v4",
          "Isonewspaper26v4Grey"
        ]
      },
      "ColorTransformationIntent": {
        "type": "string",
        "description": "http://www.colourphil.co.uk/rendering_intents.shtml",
        "x-enumNames": [
          "RelativeColorimetricBpc",
          "AbsoluteColorimetric",
          "Perceptual",
          "RelativeColorimetric",
          "Saturation"
        ],
        "enum": [
          "RelativeColorimetricBpc",
          "AbsoluteColorimetric",
          "Perceptual",
          "RelativeColorimetric",
          "Saturation"
        ]
      },
      "ResizeAction": {
        "type": "object",
        "description": "Specifies image resize parameters.",
        "additionalProperties": false,
        "required": [
          "width",
          "height",
          "resizeMode"
        ],
        "properties": {
          "width": {
            "type": "integer",
            "description": "Target width for the output.",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "description": "Target height for the output.",
            "format": "int32"
          },
          "resizeMode": {
            "description": "Specifies additional resize behaviour.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ResizeMode"
              }
            ]
          }
        }
      },
      "ResizeMode": {
        "type": "string",
        "description": "Specifies how the dimensions of a ResizeAction are applied to the content",
        "x-enumNames": [
          "Fit",
          "Shrink",
          "Resize"
        ],
        "enum": [
          "Fit",
          "Shrink",
          "Resize"
        ]
      },
      "ImageActionBase": {
        "type": "object",
        "discriminator": {
          "propertyName": "kind",
          "mapping": {
            "AlphaHandlingAction": "#/components/schemas/AlphaHandlingAction",
            "CropActionGeneric": "#/components/schemas/CropActionGeneric",
            "CropActionAbsoluteSizeBase": "#/components/schemas/CropActionAbsoluteSizeBase",
            "CropAction": "#/components/schemas/CropAction",
            "GravityBasedCropAction": "#/components/schemas/GravityBasedCropAction",
            "RelativeCropAction": "#/components/schemas/RelativeCropAction",
            "UnsharpenMaskAction": "#/components/schemas/UnsharpenMaskAction",
            "WatermarkAction": "#/components/schemas/WatermarkAction",
            "RotateAction": "#/components/schemas/RotateAction"
          }
        },
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "kind"
        ],
        "properties": {
          "kind": {
            "type": "string"
          }
        }
      },
      "AlphaHandlingAction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ImageActionBase"
          },
          {
            "type": "object",
            "description": "An ImageAction that allows different forms of modifying alpha information in an image.",
            "additionalProperties": false,
            "properties": {
              "alphaHandling": {
                "description": "Specifies the kind of alpha handling to be applied.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AlphaHandling"
                  }
                ]
              },
              "replacementRgbColorHexCode": {
                "type": "string",
                "description": "Specifies potentially needed color information for alpha handling. Must be given in RGB hex format (8 bit per channel).",
                "nullable": true
              }
            }
          }
        ]
      },
      "AlphaHandling": {
        "type": "string",
        "description": "Specifies the kind of AlphaHandling to be applied to an image",
        "x-enumNames": [
          "DiscardAlpha",
          "ReplaceAlpha",
          "ReplaceInvertedAlpha"
        ],
        "enum": [
          "DiscardAlpha",
          "ReplaceAlpha",
          "ReplaceInvertedAlpha"
        ]
      },
      "CropActionGeneric": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ImageActionBase"
          },
          {
            "type": "object",
            "description": "Parameters for cropping actions.",
            "additionalProperties": false,
            "properties": {
              "position": {
                "description": "Defines position of cropping rectangle.",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CropPositionBase"
                  }
                ]
              },
              "size": {
                "description": "Defines size of cropping rectangle.",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CropSizeBase"
                  }
                ]
              }
            }
          }
        ]
      },
      "CropPositionBase": {
        "type": "object",
        "discriminator": {
          "propertyName": "kind",
          "mapping": {
            "CropOriginAbsolute": "#/components/schemas/CropOriginAbsolute",
            "CropCenterRelative": "#/components/schemas/CropCenterRelative",
            "CropPositionGravity": "#/components/schemas/CropPositionGravity"
          }
        },
        "description": "Defines position of cropping rectangle.",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "kind"
        ],
        "properties": {
          "kind": {
            "type": "string"
          }
        }
      },
      "CropOriginAbsolute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CropPositionBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "x": {
                "type": "integer",
                "description": "X-Coordinate of top left point of the cropping rectangle.",
                "format": "int32"
              },
              "y": {
                "type": "integer",
                "description": "Y-Coordinate of top left point of the cropping rectangle.",
                "format": "int32"
              }
            }
          }
        ]
      },
      "CropCenterRelative": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CropPositionBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "x": {
                "type": "number",
                "description": "Relative horizontal position of center for crop. 0.5 designates the center of the image.",
                "format": "float",
                "maximum": 1.0,
                "minimum": 0.0
              },
              "y": {
                "type": "number",
                "description": "Relative vertical position of center for crop. 0.5 designates the center of the image.",
                "format": "float",
                "maximum": 1.0,
                "minimum": 0.0
              }
            }
          }
        ]
      },
      "CropPositionGravity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CropPositionBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "gravity": {
                "description": "Gravity of the cropping rectangle.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CropGravity"
                  }
                ]
              }
            }
          }
        ]
      },
      "CropGravity": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "NorthWest",
          "North",
          "NorthEast",
          "East",
          "SouthEast",
          "South",
          "SouthWest",
          "West",
          "Center"
        ],
        "enum": [
          "NorthWest",
          "North",
          "NorthEast",
          "East",
          "SouthEast",
          "South",
          "SouthWest",
          "West",
          "Center"
        ]
      },
      "CropSizeBase": {
        "type": "object",
        "discriminator": {
          "propertyName": "kind",
          "mapping": {
            "CropSizeAbsolute": "#/components/schemas/CropSizeAbsolute",
            "CropSizeRelative": "#/components/schemas/CropSizeRelative"
          }
        },
        "description": "Defines size of cropping rectangle.",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "kind"
        ],
        "properties": {
          "kind": {
            "type": "string"
          }
        }
      },
      "CropSizeAbsolute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CropSizeBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "width": {
                "type": "integer",
                "description": "Width of the cropping rectangle.",
                "format": "int32"
              },
              "height": {
                "type": "integer",
                "description": "Height of the cropping rectangle.",
                "format": "int32"
              }
            }
          }
        ]
      },
      "CropSizeRelative": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CropSizeBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "width": {
                "type": "number",
                "description": "Width of the cropping rectangle in range [0, 1].",
                "format": "float",
                "maximum": 1.0,
                "minimum": 0.0
              },
              "height": {
                "type": "number",
                "description": "Height of the cropping rectangle in range [0, 1].",
                "format": "float",
                "maximum": 1.0,
                "minimum": 0.0
              }
            }
          }
        ]
      },
      "CropAction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CropActionAbsoluteSizeBase"
          },
          {
            "type": "object",
            "description": "An ImageAction that allows cropping an image.",
            "additionalProperties": false,
            "properties": {
              "x": {
                "type": "integer",
                "format": "int32"
              },
              "y": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "CropActionAbsoluteSizeBase": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CropActionGeneric"
          },
          {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
              "height": {
                "type": "integer",
                "format": "int32"
              },
              "width": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "GravityBasedCropAction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CropActionAbsoluteSizeBase"
          },
          {
            "type": "object",
            "description": "An ImageAction that allows cropping an image, weighing the cropping rectangle on a gravity.",
            "additionalProperties": false,
            "properties": {
              "gravity": {
                "$ref": "#/components/schemas/CropGravity"
              }
            }
          }
        ]
      },
      "RelativeCropAction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CropActionAbsoluteSizeBase"
          },
          {
            "type": "object",
            "description": "An ImageAction that allows cropping an image, positioning the cropping rectangle relative to the width/height of the image.",
            "additionalProperties": false,
            "properties": {
              "x": {
                "type": "number",
                "format": "float"
              },
              "y": {
                "type": "number",
                "format": "float"
              }
            }
          }
        ]
      },
      "UnsharpenMaskAction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ImageActionBase"
          },
          {
            "type": "object",
            "description": "Increases sharpness of an image by using the unsharp mask technique.",
            "additionalProperties": false,
            "properties": {
              "amount": {
                "type": "number",
                "description": "Unsharp mask amount (the difference between blurred and original image).",
                "format": "float"
              },
              "radius": {
                "type": "number",
                "description": "Blur radius used to produce unfocused version of the image.",
                "format": "float"
              },
              "threshold": {
                "type": "number",
                "description": "The threshold value for the unsharp mask in range [0, 1]",
                "format": "float"
              }
            }
          }
        ]
      },
      "WatermarkAction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ImageActionBase"
          },
          {
            "type": "object",
            "description": "An ImageAction that allows rendering a watermark to an image",
            "additionalProperties": false,
            "properties": {
              "watermarkFilePath": {
                "type": "string",
                "description": "Identifies the image to be used as watermark",
                "nullable": true
              },
              "marginLeft": {
                "type": "integer",
                "description": "Margin to the left border of the image, in pixels",
                "format": "int32",
                "nullable": true
              },
              "marginTop": {
                "type": "integer",
                "description": "Margin to the top of the image, in pixels",
                "format": "int32",
                "nullable": true
              },
              "marginRight": {
                "type": "integer",
                "description": "Margin to the right border of the image, in pixels",
                "format": "int32",
                "nullable": true
              },
              "marginBottom": {
                "type": "integer",
                "description": "Margin to the bottom of the image, in pixels",
                "format": "int32",
                "nullable": true
              },
              "opacity": {
                "type": "number",
                "description": "Scales the opacity of the watermark",
                "format": "float"
              },
              "widthRatio": {
                "type": "number",
                "description": "Scales the watermark width according to the size of the final image.",
                "format": "float"
              },
              "heightRatio": {
                "type": "number",
                "description": "Scales the watermark height according to the size of the final image.",
                "format": "float"
              }
            }
          }
        ]
      },
      "RotateAction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ImageActionBase"
          },
          {
            "type": "object",
            "description": "An ImageAction that allows rotating an image.",
            "additionalProperties": false,
            "properties": {
              "degrees": {
                "type": "integer",
                "description": "Degrees to rotate the image in.",
                "format": "int32"
              },
              "direction": {
                "description": "Direction the rotation should be applied in.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RotateDirection"
                  }
                ]
              }
            }
          }
        ]
      },
      "RotateDirection": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Clockwise",
          "CounterClockwise"
        ],
        "enum": [
          "Clockwise",
          "CounterClockwise"
        ]
      },
      "JpegFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ImageFormatBase"
          },
          {
            "type": "object",
            "description": "Renders a JPEG image.",
            "additionalProperties": false,
            "properties": {
              "quality": {
                "type": "integer",
                "description": "Compression quality. Must be in range [0,100] and defaults to 80.",
                "format": "int32"
              },
              "chromaSubsamplingEnabled": {
                "type": "boolean",
                "description": "Whether to use chroma subsampling or not."
              }
            }
          }
        ]
      },
      "PngFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ImageFormatBase"
          },
          {
            "type": "object",
            "description": "Renders a PNG image.",
            "additionalProperties": false
          }
        ]
      },
      "TiffFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ImageFormatBase"
          },
          {
            "type": "object",
            "description": "Renders a TIFF image",
            "additionalProperties": false,
            "properties": {
              "alphaPremultiplied": {
                "type": "boolean",
                "description": "Specifies whether color channels should be premultiplied with alpha (associated alpha) or not (unassociated alpha)."
              },
              "compressionType": {
                "description": "Specifies the compression type to use.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CompressionType"
                  }
                ]
              },
              "includeUnspecifiedTiffExtraChannels": {
                "type": "boolean",
                "description": "Preserve (including size affecting changes) unspecified extraChannels."
              }
            }
          }
        ]
      },
      "CompressionType": {
        "type": "string",
        "description": "Available compression types.",
        "x-enumNames": [
          "None",
          "Lzw",
          "Rle",
          "Zip"
        ],
        "enum": [
          "None",
          "Lzw",
          "Rle",
          "Zip"
        ]
      },
      "WebPFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ImageFormatBase"
          },
          {
            "type": "object",
            "description": "Renders a WebP image.",
            "additionalProperties": false,
            "properties": {
              "quality": {
                "type": "integer",
                "description": "Compression quality. Must be in range [0,100] and defaults to 90.",
                "format": "int32"
              }
            }
          }
        ]
      },
      "AvifFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ImageFormatBase"
          },
          {
            "type": "object",
            "description": "Renders an AVIF image.",
            "additionalProperties": false,
            "properties": {
              "quality": {
                "type": "integer",
                "description": "Compression quality. Must be in range [0,100] and defaults to 90.",
                "format": "int32"
              }
            }
          }
        ]
      },
      "VideoFormatBase": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FormatWithFixedExtensionBase"
          },
          {
            "type": "object",
            "description": "Base class for rendering video.",
            "x-abstract": true,
            "additionalProperties": false
          }
        ]
      },
      "Mp4VideoFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/VideoFormatBase"
          },
          {
            "type": "object",
            "description": "Renders H.264 in mp4 container.",
            "additionalProperties": false,
            "properties": {
              "resizeAction": {
                "description": "Allows resizing of the video.",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ResizeAction"
                  }
                ]
              },
              "audioCodec": {
                "description": "Gets or sets the encoding audio codec.",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AudioFormatBase"
                  }
                ]
              },
              "preset": {
                "description": "Gets or sets the encoding codec preset.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Preset"
                  }
                ]
              }
            }
          }
        ]
      },
      "AudioFormatBase": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FormatWithFixedExtensionBase"
          },
          {
            "type": "object",
            "description": "Base class for rendering audio.",
            "x-abstract": true,
            "additionalProperties": false
          }
        ]
      },
      "Preset": {
        "type": "string",
        "description": "Video rendering preset, see http://dev.beandog.org/x264_preset_reference.html for more information.",
        "x-enumNames": [
          "ultrafast",
          "superfast",
          "veryfast",
          "faster",
          "fast",
          "medium",
          "slow",
          "slower"
        ],
        "enum": [
          "ultrafast",
          "superfast",
          "veryfast",
          "faster",
          "fast",
          "medium",
          "slow",
          "slower"
        ]
      },
      "VideoSpriteFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/VideoFormatBase"
          },
          {
            "type": "object",
            "description": "Generates a sprite image of the input video.",
            "additionalProperties": false,
            "properties": {
              "spriteResizeAction": {
                "description": "Specifies the dimensions of a single frame in the sprite.",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ResizeAction"
                  }
                ]
              },
              "maxNumberOfSprites": {
                "type": "integer",
                "description": "Limit for the number of frames to generate.",
                "format": "int32"
              },
              "quality": {
                "type": "integer",
                "description": "JPEG-quality to use for the sprite.",
                "format": "int32"
              }
            }
          }
        ]
      },
      "VideoStillFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/VideoFormatBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "positionInSeconds": {
                "type": "integer",
                "description": "Specifies the position from which to produce the image.",
                "format": "int32"
              }
            }
          }
        ]
      },
      "AacAudioFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AudioFormatBase"
          },
          {
            "type": "object",
            "description": "Specifies Aac encoding for the output and additional settings for the encoder.",
            "additionalProperties": false,
            "properties": {
              "profile": {
                "description": "Gets or sets the encoding profile.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Profile"
                  }
                ]
              },
              "coder": {
                "description": "Gets or sets the encoding coder.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Coder"
                  }
                ]
              },
              "bitrate": {
                "type": "integer",
                "description": "Gets or sets the bitrate of the encoding in kbps.",
                "format": "int32",
                "nullable": true
              },
              "variableBitRate": {
                "type": "integer",
                "description": "Gets or sets the encoding variable bit rate (VBR) - 1 is lowest quality and 5 is highest quality.",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ]
      },
      "Profile": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "aac_low",
          "mpeg2_aac_low",
          "aac_ltp",
          "aac_main"
        ],
        "enum": [
          "aac_low",
          "mpeg2_aac_low",
          "aac_ltp",
          "aac_main"
        ]
      },
      "Coder": {
        "type": "string",
        "description": "Audio coders",
        "x-enumNames": [
          "twoloop",
          "anmr",
          "fast"
        ],
        "enum": [
          "twoloop",
          "anmr",
          "fast"
        ]
      },
      "AudioStillFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AudioFormatBase"
          },
          {
            "type": "object",
            "description": "Generates a waveform image from an Audio source.",
            "additionalProperties": false
          }
        ]
      },
      "Mp3AudioFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AudioFormatBase"
          },
          {
            "type": "object",
            "description": "Renders an MP3 audio file.",
            "additionalProperties": false,
            "properties": {
              "bitrate": {
                "type": "integer",
                "description": "Gets or sets the encoding bitrate. This setting and Quality are mutually exclusive.",
                "format": "int32",
                "nullable": true
              },
              "quality": {
                "type": "integer",
                "description": "Gets or sets the encoding quality. This setting and Bitrate are mutually exclusive.\nValues can be set it range of 0 to 9, where a lower value is a higher quality.",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ]
      },
      "DocumentFormatBase": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FormatWithFixedExtensionBase"
          },
          {
            "type": "object",
            "description": "Base class for rendering documents.",
            "x-abstract": true,
            "additionalProperties": false
          }
        ]
      },
      "DocumentStillFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DocumentFormatBase"
          },
          {
            "type": "object",
            "description": "Render a document to a raster image",
            "additionalProperties": false,
            "properties": {
              "resizeAction": {
                "description": "Allows resizing of the image.",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ResizeAction"
                  }
                ]
              }
            }
          }
        ]
      },
      "PdfFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DocumentFormatBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "jpegQuality": {
                "type": "integer",
                "description": "Specifies compression quality used for ReduceFileSize.",
                "format": "int32"
              },
              "fastWebView": {
                "type": "boolean",
                "description": "Whether to linearize the output for fast web viewing."
              },
              "reduceFileSize": {
                "type": "boolean",
                "description": "Whether to apply measures to decrease output size or not."
              },
              "extractFullText": {
                "type": "boolean",
                "description": "Whether to extract document full text from this output."
              }
            }
          }
        ]
      },
      "VectorFormatBase": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FormatWithFixedExtensionBase"
          },
          {
            "type": "object",
            "description": "Base class for rendering vector graphics.",
            "x-abstract": true,
            "additionalProperties": false
          }
        ]
      },
      "SvgFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/VectorFormatBase"
          },
          {
            "type": "object",
            "description": "Render a PDF to SVG",
            "additionalProperties": false
          }
        ]
      },
      "VectorStillFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/VectorFormatBase"
          },
          {
            "type": "object",
            "description": "Render a vector graphic to a raster image",
            "additionalProperties": false,
            "properties": {
              "resizeAction": {
                "description": "Specifies output dimensions for raster operation",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ResizeAction"
                  }
                ]
              }
            }
          }
        ]
      },
      "ContentBackupState": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Disabled",
          "Recovery",
          "Enabled",
          "Resetting"
        ],
        "enum": [
          "Disabled",
          "Recovery",
          "Enabled",
          "Resetting"
        ]
      },
      "CustomerConfiguration": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "useSsl",
          "enableQueryDetails",
          "elasticSearchNumberOfShards",
          "elasticSearchNumberOfReplicas",
          "elasticSearchNumberOfRoutingShards",
          "rootContentSearchIndexNumberOfShards",
          "rootContentSearchIndexNumberOfReplicas",
          "rootContentSearchIndexNumberOfRoutingShards",
          "rootListItemSearchIndexNumberOfShards",
          "rootListItemSearchIndexNumberOfReplicas",
          "rootListItemSearchIndexNumberOfRoutingShards",
          "indexedFieldThreshold",
          "sortableFieldThreshold",
          "redisDatabaseIndex",
          "lifeCycle",
          "snapshotEnabled",
          "snapshotRetentionTime",
          "snapshotFullbackupScheduleTime",
          "contentRetentionTime",
          "listItemRetentionTime",
          "userRetentionTime",
          "ownerTokenRetentionTime",
          "rollingIndexCreationScheduleTime",
          "documentHistoryRetentionTime",
          "liveStreamRetentionTime",
          "successfulTransferRetentionTime",
          "incompleteTransferRetentionTime",
          "replacedOriginalsRetentionTime",
          "importCollectionRetentionTime",
          "editCollectionRetentionTime",
          "notificationEventCollectionRetentionTime",
          "contentBackupState",
          "apiCallsPerMinute",
          "enableSupportUserRegistrationEmailNotification",
          "enableSupportUserRegistrationNotification",
          "isClone",
          "skipSignUpCaptcha"
        ],
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "lifelineId": {
            "type": "string",
            "nullable": true
          },
          "namespace": {
            "type": "string",
            "nullable": true
          },
          "alias": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "mainCatalog": {
            "type": "string",
            "nullable": true
          },
          "userCatalog": {
            "type": "string",
            "nullable": true
          },
          "mailCatalog": {
            "type": "string",
            "nullable": true
          },
          "transferCatalog": {
            "type": "string",
            "nullable": true
          },
          "shareCatalog": {
            "type": "string",
            "nullable": true
          },
          "outputCatalog": {
            "type": "string",
            "nullable": true
          },
          "outputFormatCatalog": {
            "type": "string",
            "nullable": true
          },
          "channelCatalog": {
            "type": "string",
            "nullable": true
          },
          "notificationCatalog": {
            "type": "string",
            "nullable": true
          },
          "businessProcessCatalog": {
            "type": "string",
            "nullable": true
          },
          "listItemCatalog": {
            "type": "string",
            "nullable": true
          },
          "contentCatalog": {
            "type": "string",
            "nullable": true
          },
          "displayValueCatalog": {
            "type": "string",
            "nullable": true
          },
          "tokenCatalog": {
            "type": "string",
            "nullable": true
          },
          "documentHistoryCatalog": {
            "type": "string",
            "nullable": true
          },
          "documentHistorySteadyCatalog": {
            "type": "string",
            "nullable": true
          },
          "liveStreamCatalog": {
            "type": "string",
            "nullable": true
          },
          "cacheCatalog": {
            "type": "string",
            "nullable": true
          },
          "schemaCatalog": {
            "type": "string",
            "nullable": true
          },
          "referenceCatalog": {
            "type": "string",
            "nullable": true
          },
          "statisticsCatalog": {
            "type": "string",
            "nullable": true
          },
          "businessRuleCatalog": {
            "type": "string",
            "nullable": true
          },
          "metadataItemCollectionCatalog": {
            "type": "string",
            "nullable": true
          },
          "watermarkPath": {
            "type": "string",
            "nullable": true
          },
          "logoPath": {
            "type": "string",
            "nullable": true
          },
          "storagePath": {
            "type": "string",
            "nullable": true
          },
          "contractVersion": {
            "type": "string",
            "nullable": true
          },
          "customerHosts": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "useSsl": {
            "type": "boolean"
          },
          "enableQueryDetails": {
            "type": "boolean"
          },
          "serviceProviders": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomerServiceProviderConfiguration"
            }
          },
          "supportContactEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "baseUrl": {
            "type": "string",
            "nullable": true
          },
          "cdnConfiguration": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CdnConfigurationBase"
              }
            ]
          },
          "taggingConfiguration": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaggingConfigurationBase"
              }
            ]
          },
          "elasticSearchNumberOfShards": {
            "type": "integer",
            "format": "int32"
          },
          "elasticSearchNumberOfReplicas": {
            "type": "integer",
            "format": "int32"
          },
          "elasticSearchNumberOfRoutingShards": {
            "type": "integer",
            "format": "int32"
          },
          "rootContentSearchIndexNumberOfShards": {
            "type": "integer",
            "format": "int32"
          },
          "rootContentSearchIndexNumberOfReplicas": {
            "type": "integer",
            "format": "int32"
          },
          "rootContentSearchIndexNumberOfRoutingShards": {
            "type": "integer",
            "format": "int32"
          },
          "rootListItemSearchIndexNumberOfShards": {
            "type": "integer",
            "format": "int32"
          },
          "rootListItemSearchIndexNumberOfReplicas": {
            "type": "integer",
            "format": "int32"
          },
          "rootListItemSearchIndexNumberOfRoutingShards": {
            "type": "integer",
            "format": "int32"
          },
          "indexedFieldThreshold": {
            "type": "integer",
            "format": "int32"
          },
          "sortableFieldThreshold": {
            "type": "integer",
            "format": "int32"
          },
          "corsAllowedHosts": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "noReplyEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "languageConfiguration": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LanguageConfiguration"
              }
            ]
          },
          "redisDatabaseIndex": {
            "type": "integer",
            "format": "int32"
          },
          "lifeCycle": {
            "$ref": "#/components/schemas/LifeCycle"
          },
          "snapshotEnabled": {
            "type": "boolean"
          },
          "snapshotRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "snapshotFullbackupScheduleTime": {
            "type": "string",
            "format": "time-span"
          },
          "contentRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "listItemRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "userRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "ownerTokenRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "rollingIndexCreationScheduleTime": {
            "type": "string",
            "format": "time-span"
          },
          "documentHistoryRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "liveStreamRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "successfulTransferRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "incompleteTransferRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "replacedOriginalsRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "importCollectionRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "editCollectionRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "notificationEventCollectionRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "deactivationMessage": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TranslatedStringDictionary"
              }
            ]
          },
          "serviceAdminUserId": {
            "type": "string",
            "nullable": true
          },
          "contentBackupState": {
            "$ref": "#/components/schemas/ContentBackupState"
          },
          "contentBackupEnableDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "apiCallsPerMinute": {
            "type": "integer",
            "format": "int32"
          },
          "contentBackupStoragePath": {
            "type": "string",
            "nullable": true
          },
          "defaultContentPermissionSetIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "boostValues": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "enableSupportUserRegistrationEmailNotification": {
            "type": "boolean"
          },
          "enableSupportUserRegistrationNotification": {
            "type": "boolean"
          },
          "isClone": {
            "type": "boolean"
          },
          "defaultUserRoleId": {
            "type": "string",
            "nullable": true
          },
          "skipSignUpCaptcha": {
            "type": "boolean"
          },
          "licenseInformation": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LicenseInformation"
              }
            ]
          },
          "activityMapping": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ActivityMapping"
              }
            ]
          },
          "idsAccentColor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CustomerServiceProviderConfiguration": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "serviceProviderId": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "userRoleIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "settings": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ActivityMapping": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "creationDateFieldPath": {
            "type": "string",
            "nullable": true
          },
          "modificationDateFieldPath": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CustomerUpdateRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "snapshotEnabled",
          "liveStreamRetentionTime",
          "snapshotFullbackupScheduleTime",
          "contentRetentionTime",
          "listItemRetentionTime",
          "userRetentionTime",
          "ownerTokenRetentionTime",
          "rollingIndexCreationScheduleTime",
          "documentHistoryRetentionTime",
          "snapshotRetentionTime",
          "successfulTransferRetentionTime",
          "incompleteTransferRetentionTime",
          "importCollectionRetentionTime",
          "editCollectionRetentionTime",
          "notificationEventCollectionRetentionTime",
          "replacedOriginalsRetentionTime",
          "useSsl",
          "enableQueryDetails",
          "apiCallsPerMinute",
          "enableSupportUserRegistrationEmailNotification",
          "enableSupportUserRegistrationNotification",
          "skipSignUpCaptcha"
        ],
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "snapshotEnabled": {
            "type": "boolean"
          },
          "liveStreamRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "snapshotFullbackupScheduleTime": {
            "type": "string",
            "format": "time-span"
          },
          "customerHosts": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "contentRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "listItemRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "userRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "ownerTokenRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "rollingIndexCreationScheduleTime": {
            "type": "string",
            "format": "time-span"
          },
          "documentHistoryRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "snapshotRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "successfulTransferRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "incompleteTransferRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "importCollectionRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "editCollectionRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "notificationEventCollectionRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "replacedOriginalsRetentionTime": {
            "type": "string",
            "format": "time-span"
          },
          "useSsl": {
            "type": "boolean"
          },
          "enableQueryDetails": {
            "type": "boolean"
          },
          "cdnConfiguration": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CdnConfigurationBase"
              }
            ]
          },
          "taggingConfiguration": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TaggingConfigurationBase"
              }
            ]
          },
          "baseUrl": {
            "type": "string",
            "nullable": true
          },
          "watermarkPath": {
            "type": "string",
            "nullable": true
          },
          "logoPath": {
            "type": "string",
            "nullable": true
          },
          "contentBackupStoragePath": {
            "type": "string",
            "nullable": true
          },
          "supportContactEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "corsAllowedHosts": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "noReplyEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "indexedFieldThreshold": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sortableFieldThreshold": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "apiCallsPerMinute": {
            "type": "integer",
            "format": "int32"
          },
          "storagePath": {
            "type": "string",
            "nullable": true
          },
          "defaultContentPermissionSetIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "enableSupportUserRegistrationEmailNotification": {
            "type": "boolean"
          },
          "enableSupportUserRegistrationNotification": {
            "type": "boolean"
          },
          "defaultUserRoleId": {
            "type": "string",
            "nullable": true
          },
          "skipSignUpCaptcha": {
            "type": "boolean"
          },
          "licenseInformation": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LicenseInformation"
              }
            ]
          },
          "elasticSearchNumberOfShards": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "elasticSearchNumberOfRoutingShards": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "activityMapping": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ActivityMapping"
              }
            ]
          },
          "idsAccentColor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CustomerSearchResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseResultOfCustomer"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "BaseResultOfCustomer": {
        "type": "object",
        "description": "Base class for search results",
        "additionalProperties": false,
        "required": [
          "results",
          "totalResults",
          "elapsedMilliseconds"
        ],
        "properties": {
          "totalResults": {
            "type": "integer",
            "description": "The total number of matching documents.",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "description": "The matched documents.",
            "items": {
              "$ref": "#/components/schemas/Customer"
            }
          },
          "elapsedMilliseconds": {
            "type": "integer",
            "description": "The search execution time in milliseconds.",
            "format": "int64"
          },
          "pageToken": {
            "type": "string",
            "description": "An optional token to access the next page of results for those endpoints that support backend scrolling logic.",
            "nullable": true
          }
        }
      },
      "CustomerSearchRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "start",
          "limit"
        ],
        "properties": {
          "searchString": {
            "type": "string",
            "nullable": true
          },
          "start": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "filter": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/FilterBase"
              }
            ]
          }
        }
      },
      "FilterBase": {
        "type": "object",
        "discriminator": {
          "propertyName": "kind",
          "mapping": {
            "AndFilter": "#/components/schemas/AndFilter",
            "OrFilter": "#/components/schemas/OrFilter",
            "NotFilter": "#/components/schemas/NotFilter",
            "DateRangeFilter": "#/components/schemas/DateRangeFilter",
            "ExistsFilter": "#/components/schemas/ExistsFilter",
            "GeoBoundingBoxFilter": "#/components/schemas/GeoBoundingBoxFilter",
            "GeoDistanceFilter": "#/components/schemas/GeoDistanceFilter",
            "NestedFilter": "#/components/schemas/NestedFilter",
            "NumericRangeFilter": "#/components/schemas/NumericRangeFilter",
            "PrefixFilter": "#/components/schemas/PrefixFilter",
            "TermFilter": "#/components/schemas/TermFilter",
            "TermsFilter": "#/components/schemas/TermsFilter",
            "AggregationFilter": "#/components/schemas/AggregationFilter",
            "ChildFilter": "#/components/schemas/ChildFilter",
            "ParentFilter": "#/components/schemas/ParentFilter"
          }
        },
        "description": "The filters' base class",
        "additionalProperties": false,
        "required": [
          "kind"
        ],
        "properties": {
          "kind": {
            "type": "string"
          }
        }
      },
      "AndFilter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBase"
          },
          {
            "type": "object",
            "description": "Used to put filters in \"and\"",
            "additionalProperties": false,
            "properties": {
              "filters": {
                "type": "array",
                "description": "The filters to put in \"and\". All kinds of filters are accepted.",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/FilterBase"
                }
              }
            }
          }
        ]
      },
      "OrFilter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBase"
          },
          {
            "type": "object",
            "description": "Put filters in \"or\"",
            "additionalProperties": false,
            "properties": {
              "filters": {
                "type": "array",
                "description": "The filters to put in \"or\". All kinds of filters are accepted.",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/FilterBase"
                }
              }
            }
          }
        ]
      },
      "NotFilter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBase"
          },
          {
            "type": "object",
            "description": "Negates the specified filter",
            "additionalProperties": false,
            "required": [
              "filter"
            ],
            "properties": {
              "filter": {
                "description": "The filter to be negated.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/FilterBase"
                  }
                ]
              }
            }
          }
        ]
      },
      "DateRangeFilter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBase"
          },
          {
            "type": "object",
            "description": "Filters over a range of date time values",
            "additionalProperties": false,
            "required": [
              "field",
              "range"
            ],
            "properties": {
              "field": {
                "type": "string",
                "description": "The field's name to execute the filter on. It is composed by the field ids of the hierarchy joined with \".\"\n(i.e. personLayer.address.street).",
                "minLength": 1
              },
              "range": {
                "description": "The date time range.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/DateRange"
                  }
                ]
              }
            }
          }
        ]
      },
      "DateRange": {
        "type": "object",
        "description": "The date time range class used in filters",
        "additionalProperties": false,
        "properties": {
          "names": {
            "description": "Language specific range names.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TranslatedStringDictionary"
              }
            ]
          },
          "from": {
            "type": "string",
            "description": "The from value: it can be a datetime string or a pattern now(+-)(int)(YMDHm).",
            "nullable": true
          },
          "to": {
            "type": "string",
            "description": "The to value: it can be a datetime string or a pattern now(+-)(int)(YMDHm).",
            "nullable": true
          }
        }
      },
      "ExistsFilter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBase"
          },
          {
            "type": "object",
            "description": "Filters over the existence of a field's value",
            "additionalProperties": false,
            "required": [
              "field"
            ],
            "properties": {
              "field": {
                "type": "string",
                "description": "The field's name to execute the filter on. It is composed by the field ids of the hierarchy joined with \".\"\n(i.e. personLayer.address.street).",
                "minLength": 1
              }
            }
          }
        ]
      },
      "GeoBoundingBoxFilter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBase"
          },
          {
            "type": "object",
            "description": "Filters geo point values based on a bounding box",
            "additionalProperties": false,
            "required": [
              "field",
              "topLeft",
              "bottomRight"
            ],
            "properties": {
              "field": {
                "type": "string",
                "description": "The field's name to execute the filter on. It is composed by the field ids of the hierarchy joined with \".\"\n(i.e. personLayer.address.street).",
                "minLength": 1
              },
              "topLeft": {
                "description": "The top left corner of the bounding box's geo location (latitude and longitude).",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GeoLocation"
                  }
                ]
              },
              "bottomRight": {
                "description": "The bottom right corner of the bounding box's geo location (latitude and longitude).",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GeoLocation"
                  }
                ]
              }
            }
          }
        ]
      },
      "GeoLocation": {
        "type": "object",
        "description": "It stores geo location information (latitude and longitude)",
        "additionalProperties": false,
        "properties": {
          "lat": {
            "type": "number",
            "description": "The latitude",
            "format": "double"
          },
          "lon": {
            "type": "number",
            "description": "The longitude",
            "format": "double"
          }
        }
      },
      "GeoDistanceFilter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBase"
          },
          {
            "type": "object",
            "description": "Filters within the radius of the distance from a location",
            "additionalProperties": false,
            "required": [
              "field",
              "location"
            ],
            "properties": {
              "field": {
                "type": "string",
                "description": "The field's name to execute the filter on. It is composed by the field ids of the hierarchy joined with \".\"\n(i.e. personLayer.address.street).",
                "minLength": 1
              },
              "location": {
                "description": "The point of origin to calculate the distance from (latitude/longitude).",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GeoLocation"
                  }
                ]
              },
              "distance": {
                "type": "number",
                "description": "The distance in meters from the point of origin.",
                "format": "double"
              }
            }
          }
        ]
      },
      "NestedFilter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBase"
          },
          {
            "type": "object",
            "description": "Filters on nested documents",
            "additionalProperties": false,
            "required": [
              "path",
              "filter"
            ],
            "properties": {
              "path": {
                "type": "string",
                "description": "The path pointing to the nested document (i.e. personLayer.nestedAddress).",
                "minLength": 1
              },
              "filter": {
                "description": "The filter to be applied on the nested documents.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/FilterBase"
                  }
                ]
              }
            }
          }
        ]
      },
      "NumericRangeFilter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBase"
          },
          {
            "type": "object",
            "description": "Filters over a range of numeric values",
            "additionalProperties": false,
            "required": [
              "field",
              "range"
            ],
            "properties": {
              "field": {
                "type": "string",
                "description": "The field's name to execute the filter on. It is composed by the field ids of the hierarchy joined with \".\"\n(i.e. personLayer.address.street).",
                "minLength": 1
              },
              "range": {
                "description": "The numeric range on which filtering.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/NumericRange"
                  }
                ]
              }
            }
          }
        ]
      },
      "NumericRange": {
        "type": "object",
        "description": "The numeric range class",
        "additionalProperties": false,
        "properties": {
          "names": {
            "description": "Language specific range names.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TranslatedStringDictionary"
              }
            ]
          },
          "from": {
            "type": "number",
            "description": "The from value.",
            "format": "double",
            "nullable": true
          },
          "to": {
            "type": "number",
            "description": "The to value.",
            "format": "double",
            "nullable": true
          }
        }
      },
      "PrefixFilter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBase"
          },
          {
            "type": "object",
            "description": "Filters field's values based on a prefix",
            "additionalProperties": false,
            "required": [
              "field",
              "prefix"
            ],
            "properties": {
              "field": {
                "type": "string",
                "description": "The field's name to execute the filter on. It is composed by the field ids of the hierarchy joined with \".\"\n(i.e. personLayer.address.street).",
                "minLength": 1
              },
              "prefix": {
                "type": "string",
                "description": "The value to be used as prefix.",
                "minLength": 1
              }
            }
          }
        ]
      },
      "TermFilter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBase"
          },
          {
            "type": "object",
            "description": "Filters values exactly containing a term",
            "additionalProperties": false,
            "required": [
              "field",
              "term"
            ],
            "properties": {
              "field": {
                "type": "string",
                "description": "The field's name to execute the filter on. It is composed by the field ids of the hierarchy joined with \".\"\n(i.e. personLayer.address.street).",
                "minLength": 1
              },
              "term": {
                "type": "string",
                "description": "The value to use to filter on.",
                "minLength": 1
              }
            }
          }
        ]
      },
      "TermsFilter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBase"
          },
          {
            "type": "object",
            "description": "Filters values containing at least one of the terms",
            "additionalProperties": false,
            "required": [
              "field",
              "terms"
            ],
            "properties": {
              "field": {
                "type": "string",
                "description": "The field's name to execute the filter on. It is composed by the field ids of the hierarchy joined with \".\"\n(i.e. personLayer.address.street).",
                "minLength": 1
              },
              "terms": {
                "type": "array",
                "description": "The list of values to be filtered on. At least one must match to return results.",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "AggregationFilter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBase"
          },
          {
            "type": "object",
            "description": "Filters aggregations",
            "additionalProperties": false,
            "properties": {
              "aggregationName": {
                "type": "string",
                "description": "The name of the aggregation this filter is connected to.",
                "nullable": true
              },
              "filter": {
                "description": "The filter to be applied.",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/FilterBase"
                  }
                ]
              },
              "temporaryAggregatorRequestId": {
                "type": "string",
                "description": "Autogenerated Guid at request time, for precise aggregation result mapping.",
                "nullable": true
              }
            }
          }
        ]
      },
      "ChildFilter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBase"
          },
          {
            "type": "object",
            "description": "Filters on child documents",
            "additionalProperties": false,
            "required": [
              "childType",
              "filter"
            ],
            "properties": {
              "childType": {
                "type": "string",
                "description": "The type of the child document.",
                "minLength": 1
              },
              "filter": {
                "description": "The filter to be applied on the child document. All kinds of filters are accepted.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/FilterBase"
                  }
                ]
              }
            }
          }
        ]
      },
      "ParentFilter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBase"
          },
          {
            "type": "object",
            "description": "Filters on parent documents",
            "additionalProperties": false,
            "required": [
              "parentType",
              "filter"
            ],
            "properties": {
              "parentType": {
                "type": "string",
                "description": "The type of the parent document.",
                "minLength": 1
              },
              "filter": {
                "description": "The filter to be applied on the child document. All kinds of filters are accepted.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/FilterBase"
                  }
                ]
              }
            }
          }
        ]
      },
      "UserWithRoles": {
        "type": "object",
        "description": "User information retrieved via search",
        "additionalProperties": false,
        "required": [
          "id",
          "emailAddress",
          "authorizationState",
          "lifeCycle",
          "isLocked",
          "isSupportUser",
          "isReadOnly",
          "isFederated"
        ],
        "properties": {
          "userRoleIds": {
            "type": "array",
            "description": "IDs of user roles user is assigned to",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string",
            "description": "User's Picturepark ID.",
            "minLength": 1
          },
          "firstName": {
            "type": "string",
            "description": "User's first name.",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "User's last name.",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "description": "Email address of the user (doubles as username).",
            "minLength": 1
          },
          "authorizationState": {
            "description": "Authorization state the user is currently in.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/AuthorizationState"
              }
            ]
          },
          "lifeCycle": {
            "description": "Life cycle state the user is currently in.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/LifeCycle"
              }
            ]
          },
          "isLocked": {
            "type": "boolean",
            "description": "A locked user is not allowed to log in."
          },
          "isSupportUser": {
            "type": "boolean",
            "description": "A support user is a user created for Picturepark support personnel."
          },
          "isReadOnly": {
            "type": "boolean",
            "description": "Read-only users can't be removed from the system, e.g. service user."
          },
          "isFederated": {
            "type": "boolean",
            "description": "Federated user is a user who is (currently) governed by an external identity provider."
          }
        }
      },
      "Index": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "numberOfShards",
          "numberOfReplicas",
          "numberOfRoutingShards",
          "indexType",
          "state"
        ],
        "properties": {
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "indexName": {
            "type": "string",
            "nullable": true
          },
          "indexAlias": {
            "type": "string",
            "nullable": true
          },
          "numberOfShards": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfReplicas": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfRoutingShards": {
            "type": "integer",
            "format": "int32"
          },
          "indexType": {
            "$ref": "#/components/schemas/IndexType"
          },
          "state": {
            "$ref": "#/components/schemas/IndexState"
          },
          "businessProcessId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "IndexType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Configuration",
          "Main",
          "Cache",
          "ContentSearch",
          "ListItemSearch",
          "DocumentHistory",
          "LiveStream",
          "User",
          "Mail",
          "Transfer",
          "Share",
          "Output",
          "Notification",
          "BusinessProcess",
          "ListItem",
          "Content",
          "Token",
          "DisplayValue",
          "Schema",
          "OutputFormat",
          "Channel",
          "Reference",
          "DocumentHistorySteady",
          "Statistics",
          "BusinessRule",
          "MetadataItemCollection"
        ],
        "enum": [
          "Configuration",
          "Main",
          "Cache",
          "ContentSearch",
          "ListItemSearch",
          "DocumentHistory",
          "LiveStream",
          "User",
          "Mail",
          "Transfer",
          "Share",
          "Output",
          "Notification",
          "BusinessProcess",
          "ListItem",
          "Content",
          "Token",
          "DisplayValue",
          "Schema",
          "OutputFormat",
          "Channel",
          "Reference",
          "DocumentHistorySteady",
          "Statistics",
          "BusinessRule",
          "MetadataItemCollection"
        ]
      },
      "IndexState": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Draft",
          "Create",
          "Inactive",
          "Active",
          "Closed",
          "ReindexInProgress",
          "Cancelled"
        ],
        "enum": [
          "Draft",
          "Create",
          "Inactive",
          "Active",
          "Closed",
          "ReindexInProgress",
          "Cancelled"
        ]
      },
      "SearchIndexReindexShardsRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SearchIndexReindexRequest"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "clusterName": {
                "type": "string",
                "nullable": true
              },
              "numberOfShards": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "numberOfReplicas": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "numberOfRoutingShards": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ]
      },
      "SearchIndexReindexRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "searchIndexId": {
            "type": "string",
            "nullable": true
          },
          "onBehalfOfUserId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EnvironmentProcess": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "processType",
          "lifeCycle",
          "startDate",
          "endDate"
        ],
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "processType": {
            "$ref": "#/components/schemas/EnvironmentProcessType"
          },
          "lifeCycle": {
            "$ref": "#/components/schemas/EnvironmentProcessLifeCycle"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "error": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ErrorResponse"
              }
            ]
          },
          "data": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnvironmentProcessDataViewItemBase"
              }
            ]
          }
        }
      },
      "EnvironmentProcessLifeCycle": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Draft",
          "InProgress",
          "Succeeded",
          "Cancelled",
          "CancellationInProgress",
          "Failed",
          "Acknowledged"
        ],
        "enum": [
          "Draft",
          "InProgress",
          "Succeeded",
          "Cancelled",
          "CancellationInProgress",
          "Failed",
          "Acknowledged"
        ]
      },
      "EnvironmentProcessDataViewItemBase": {
        "type": "object",
        "discriminator": {
          "propertyName": "kind",
          "mapping": {
            "EnvironmentProcessAddMetadataLanguageData": "#/components/schemas/EnvironmentProcessAddMetadataLanguageData",
            "EnvironmentProcessCustomerUpdateData": "#/components/schemas/EnvironmentProcessCustomerUpdateData",
            "EnvironmentProcessEnvironmentUpdateData": "#/components/schemas/EnvironmentProcessEnvironmentUpdateData",
            "EnvironmentProcessCustomerBoostValuesUpdateData": "#/components/schemas/EnvironmentProcessCustomerBoostValuesUpdateData",
            "EnvironmentProcessCustomerReshard": "#/components/schemas/EnvironmentProcessCustomerReshard"
          }
        },
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "kind"
        ],
        "properties": {
          "kind": {
            "type": "string"
          }
        }
      },
      "EnvironmentProcessAddMetadataLanguageData": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EnvironmentProcessDataViewItemBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "state": {
                "$ref": "#/components/schemas/AddMetadataLanguageState"
              },
              "language": {
                "type": "string",
                "nullable": true
              },
              "stateHistory": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/EnvironmentProcessState"
                }
              }
            }
          }
        ]
      },
      "AddMetadataLanguageState": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Draft",
          "InProgress",
          "CustomerExported",
          "CustomerUpdated",
          "MasterDataReindexed",
          "RedisCacheRestored",
          "TranslationsForSystemEntitiesAdded",
          "SortingFallbackApplied",
          "SearchIndexesReindexed",
          "Succeeded",
          "Cancelled",
          "Failed"
        ],
        "enum": [
          "Draft",
          "InProgress",
          "CustomerExported",
          "CustomerUpdated",
          "MasterDataReindexed",
          "RedisCacheRestored",
          "TranslationsForSystemEntitiesAdded",
          "SortingFallbackApplied",
          "SearchIndexesReindexed",
          "Succeeded",
          "Cancelled",
          "Failed"
        ]
      },
      "EnvironmentProcessState": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "timestamp"
        ],
        "properties": {
          "state": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "result": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EnvironmentProcessCustomerUpdateData": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EnvironmentProcessDataViewItemBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "state": {
                "$ref": "#/components/schemas/CustomerUpdateState"
              },
              "targetVersion": {
                "type": "string",
                "nullable": true
              },
              "stateHistory": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/EnvironmentProcessState"
                }
              }
            }
          }
        ]
      },
      "CustomerUpdateState": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Draft",
          "InProgress",
          "Succeeded",
          "Cancelled",
          "Failed"
        ],
        "enum": [
          "Draft",
          "InProgress",
          "Succeeded",
          "Cancelled",
          "Failed"
        ]
      },
      "EnvironmentProcessEnvironmentUpdateData": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EnvironmentProcessDataViewItemBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "state": {
                "$ref": "#/components/schemas/EnvironmentUpdateState"
              },
              "targetVersion": {
                "type": "string",
                "nullable": true
              },
              "stateHistory": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/EnvironmentProcessState"
                }
              }
            }
          }
        ]
      },
      "EnvironmentUpdateState": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Draft",
          "InProgress",
          "Succeeded",
          "Cancelled",
          "Failed"
        ],
        "enum": [
          "Draft",
          "InProgress",
          "Succeeded",
          "Cancelled",
          "Failed"
        ]
      },
      "EnvironmentProcessCustomerBoostValuesUpdateData": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EnvironmentProcessDataViewItemBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "state": {
                "$ref": "#/components/schemas/CustomerBoostValuesUpdateState"
              },
              "addedBoostValues": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "number",
                  "format": "double"
                }
              },
              "removedBoostValues": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/CustomerBoostValueRemoveInfo"
                }
              },
              "stateHistory": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/EnvironmentProcessState"
                }
              }
            }
          }
        ]
      },
      "CustomerBoostValuesUpdateState": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Draft",
          "InProgress",
          "BoostValuesAdded",
          "SearchIndexesMappingUpdated",
          "ExistingBoostValuesUpdated",
          "BoostValuesRemoved",
          "SearchIndexesReindexed",
          "Succeeded",
          "Cancelled",
          "Failed"
        ],
        "enum": [
          "Draft",
          "InProgress",
          "BoostValuesAdded",
          "SearchIndexesMappingUpdated",
          "ExistingBoostValuesUpdated",
          "BoostValuesRemoved",
          "SearchIndexesReindexed",
          "Succeeded",
          "Cancelled",
          "Failed"
        ]
      },
      "CustomerBoostValueRemoveInfo": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "valueToRemove",
          "valueToReplaceWith"
        ],
        "properties": {
          "valueToRemove": {
            "type": "number",
            "description": "Existing boost value that is going to be removed.",
            "format": "double"
          },
          "valueToReplaceWith": {
            "type": "number",
            "description": "Boost value that is going to replace the removed one where it was used.",
            "format": "double"
          }
        }
      },
      "EnvironmentProcessCustomerReshard": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EnvironmentProcessDataViewItemBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "state": {
                "$ref": "#/components/schemas/CustomerReshardState"
              },
              "shrunkIndices": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IndexType"
                }
              },
              "splitIndices": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IndexType"
                }
              },
              "stateHistory": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/EnvironmentProcessState"
                }
              }
            }
          }
        ]
      },
      "CustomerReshardState": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Draft",
          "InProgress",
          "ExportingCustomer",
          "ShrinkingIndices",
          "SplittingIndices",
          "Succeeded",
          "Cancelled",
          "Failed"
        ],
        "enum": [
          "Draft",
          "InProgress",
          "ExportingCustomer",
          "ShrinkingIndices",
          "SplittingIndices",
          "Succeeded",
          "Cancelled",
          "Failed"
        ]
      },
      "CustomerMetadataLanguageCreateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "language": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CustomerBoostValuesUpdateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "boostValuesToAdd": {
            "type": "array",
            "description": "List of boost values that need to be added to the existing ones.",
            "nullable": true,
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "boostValuesToRemove": {
            "type": "array",
            "description": "List of existing boost values that need to be removed.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomerBoostValueRemoveInfo"
            }
          }
        }
      },
      "CustomerReshardRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "skipCustomerExport"
        ],
        "properties": {
          "indices": {
            "type": "object",
            "nullable": true,
            "x-dictionaryKey": {
              "$ref": "#/components/schemas/IndexType"
            },
            "additionalProperties": {
              "$ref": "#/components/schemas/IndexShardSettings"
            }
          },
          "skipCustomerExport": {
            "type": "boolean"
          }
        }
      },
      "IndexShardSettings": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "numberOfShards": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "numberOfRoutingShards": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "CustomerQueuePriorityConfiguration": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "customerId",
          "queueConfigurations"
        ],
        "properties": {
          "customerId": {
            "type": "string",
            "minLength": 1
          },
          "queueConfigurations": {
            "type": "object",
            "description": "By QueueFamily",
            "additionalProperties": {
              "$ref": "#/components/schemas/QueuePriorityConfiguration"
            }
          }
        }
      },
      "QueuePriorityConfiguration": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "models"
        ],
        "properties": {
          "models": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QueuePriorityModelConfiguration"
            }
          },
          "aggregation": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/QueueModelAggregationConfiguration"
              }
            ]
          }
        }
      },
      "QueuePriorityModelConfiguration": {
        "type": "object",
        "discriminator": {
          "propertyName": "kind",
          "mapping": {
            "LowLevelPriorityRelatedConfigurationBase": "#/components/schemas/LowLevelPriorityRelatedConfigurationBase",
            "Legacy": "#/components/schemas/Legacy",
            "MessagesInFlight": "#/components/schemas/MessagesInFlight",
            "PerOperation": "#/components/schemas/PerOperation",
            "ConcurrentInteractiveLimit": "#/components/schemas/ConcurrentInteractiveLimit",
            "QueuePriorityModelMessageRateConfigurationBase": "#/components/schemas/QueuePriorityModelMessageRateConfigurationBase",
            "LowItemCountRequestRateBase": "#/components/schemas/LowItemCountRequestRateBase",
            "LowItemCountRequestRateMalus": "#/components/schemas/LowItemCountRequestRateMalus",
            "LowItemCountRequestRateBonus": "#/components/schemas/LowItemCountRequestRateBonus",
            "InheritFromCurrentProcessingMessage": "#/components/schemas/InheritFromCurrentProcessingMessage",
            "LowMessageRateBonus": "#/components/schemas/LowMessageRateBonus",
            "Constant": "#/components/schemas/Constant"
          }
        },
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "kind"
        ],
        "properties": {
          "kind": {
            "type": "string"
          }
        }
      },
      "Legacy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/LowLevelPriorityRelatedConfigurationBase"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "LowLevelPriorityRelatedConfigurationBase": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueuePriorityModelConfiguration"
          },
          {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
              "lowLevelMaxPriority": {
                "type": "integer",
                "format": "int32"
              },
              "ignorePriority": {
                "type": "boolean"
              },
              "ignoreInteractivity": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "MessagesInFlight": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueuePriorityModelConfiguration"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "function": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/QueuePriorityMathFunctionAndArguments"
                  }
                ]
              }
            }
          }
        ]
      },
      "QueuePriorityMathFunctionAndArguments": {
        "type": "object",
        "discriminator": {
          "propertyName": "kind",
          "mapping": {
            "QueuePriorityMathFunctionAndArgumentsExponentialFalling": "#/components/schemas/QueuePriorityMathFunctionAndArgumentsExponentialFalling"
          }
        },
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "kind"
        ],
        "properties": {
          "kind": {
            "type": "string"
          }
        }
      },
      "QueuePriorityMathFunctionAndArgumentsExponentialFalling": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueuePriorityMathFunctionAndArguments"
          },
          {
            "type": "object",
            "description": "(a^b)^-x: Result divides by A every 1/B&gt;, example:\na == 3, b == 0.1, x == 0 =&gt; 1\na == 3, b == 0.1, x == 10 =&gt; 1/3\na == 3, b == 0.1, x == 20 =&gt; 1/9",
            "additionalProperties": false,
            "properties": {
              "a": {
                "type": "number",
                "format": "double"
              },
              "b": {
                "type": "number",
                "format": "double"
              }
            }
          }
        ]
      },
      "PerOperation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueuePriorityModelConfiguration"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "boostMessageCount": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "ConcurrentInteractiveLimit": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueuePriorityModelConfiguration"
          },
          {
            "type": "object",
            "description": "Provides possibility to respect internal interactivity request but only for a limited number of messages in parallel",
            "additionalProperties": false,
            "properties": {
              "maxInteractiveInFlight": {
                "type": "integer",
                "format": "int32"
              },
              "limitReached": {
                "$ref": "#/components/schemas/LimitReachedBehavior"
              },
              "priorityBonusIfInteractivityDenied": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "LimitReachedBehavior": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Ignore",
          "RespondNegative"
        ],
        "enum": [
          "Ignore",
          "RespondNegative"
        ]
      },
      "LowItemCountRequestRateMalus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/LowItemCountRequestRateBase"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "LowItemCountRequestRateBase": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueuePriorityModelMessageRateConfigurationBase"
          },
          {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
              "itemCountBoundaryInclusive": {
                "type": "integer",
                "format": "int32"
              },
              "voteOnInteractivity": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "QueuePriorityModelMessageRateConfigurationBase": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueuePriorityModelConfiguration"
          },
          {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
              "windowLength": {
                "type": "string",
                "format": "time-span"
              },
              "rate": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "LowItemCountRequestRateBonus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/LowItemCountRequestRateBase"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "InheritFromCurrentProcessingMessage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/LowLevelPriorityRelatedConfigurationBase"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "attachResultAsTag",
              "ignoreIncomingTag"
            ],
            "properties": {
              "attachResultAsTag": {
                "type": "boolean",
                "description": "Adds result of this model to the enqueued message"
              },
              "ignoreIncomingTag": {
                "type": "boolean",
                "description": "Whether an attached result from AttachResultAsTag&gt; should be used as result"
              }
            }
          }
        ]
      },
      "LowMessageRateBonus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueuePriorityModelMessageRateConfigurationBase"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "Constant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QueuePriorityModelConfiguration"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "priority": {
                "type": "number",
                "format": "double",
                "maximum": 1.0,
                "minimum": 0.0,
                "nullable": true
              },
              "interactive": {
                "type": "boolean",
                "nullable": true
              }
            }
          }
        ]
      },
      "QueueModelAggregationConfiguration": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "interactivity": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MessagePriorityModelResultInteractivityAggregator"
              }
            ]
          },
          "priority": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MessagePriorityModelResultPriorityAggregator"
              }
            ]
          }
        }
      },
      "MessagePriorityModelResultInteractivityAggregator": {
        "type": "object",
        "discriminator": {
          "propertyName": "kind",
          "mapping": {
            "InteractivityAggregatorSingleVeto": "#/components/schemas/InteractivityAggregatorSingleVeto",
            "InteractivityAggregatorMajorityVote": "#/components/schemas/InteractivityAggregatorMajorityVote"
          }
        },
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "kind"
        ],
        "properties": {
          "kind": {
            "type": "string"
          }
        }
      },
      "InteractivityAggregatorSingleVeto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePriorityModelResultInteractivityAggregator"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "InteractivityAggregatorMajorityVote": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePriorityModelResultInteractivityAggregator"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "interactiveOnTie": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "MessagePriorityModelResultPriorityAggregator": {
        "type": "object",
        "discriminator": {
          "propertyName": "kind",
          "mapping": {
            "PriorityAverage": "#/components/schemas/PriorityAverage",
            "PriorityAverageWeighted": "#/components/schemas/PriorityAverageWeighted"
          }
        },
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "kind",
          "maxPriority"
        ],
        "properties": {
          "maxPriority": {
            "type": "integer",
            "format": "int32",
            "maximum": 255.0,
            "minimum": 0.0
          },
          "kind": {
            "type": "string"
          }
        }
      },
      "PriorityAverage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePriorityModelResultPriorityAggregator"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "PriorityAverageWeighted": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MessagePriorityModelResultPriorityAggregator"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "modelWeights"
            ],
            "properties": {
              "maxWeight": {
                "type": "integer",
                "description": "ModelResults are considered as long as their cumulative weight is at or below this value",
                "format": "int32",
                "default": 100,
                "maximum": 2147483647.0,
                "minimum": 1.0
              },
              "modelWeights": {
                "type": "array",
                "description": "Weights to be used for model results (if they were produced). Results with undefined weights are ignored.",
                "items": {
                  "$ref": "#/components/schemas/PriorityAverageWeightedModelWeight"
                }
              }
            }
          }
        ]
      },
      "PriorityAverageWeightedModelWeight": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "modelType",
          "weight"
        ],
        "properties": {
          "modelType": {
            "type": "string",
            "minLength": 1
          },
          "weight": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CustomerServiceProviderCreateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customerAlias": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "serviceProvider": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CustomerServiceProvider"
              }
            ]
          }
        }
      },
      "CustomerSettings": {
        "type": "object",
        "description": "Customer settings",
        "additionalProperties": false,
        "required": [
          "downloadPrefixName"
        ],
        "properties": {
          "uiDefaultShareExpirationTime": {
            "type": "string",
            "description": "Default expiration time as time span that will be applied as default by the UI when creating a new Share",
            "format": "time-span",
            "nullable": true
          },
          "downloadPrefixName": {
            "type": "string",
            "description": "Prefix to be used for the zip file created when downloading multiple contents",
            "minLength": 1
          }
        }
      },
      "CustomerSettingsUpdateRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomerSettings"
          },
          {
            "type": "object",
            "description": "Customer settings update request",
            "additionalProperties": false
          }
        ]
      },
      "EnvironmentConfiguration": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "lifeCycle"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The environment configuration id.",
            "nullable": true
          },
          "contractVersion": {
            "type": "string",
            "description": "The contract version of the environment configuration.",
            "nullable": true
          },
          "lifeCycle": {
            "description": "Curent lifecycle state of the entity.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/LifeCycle"
              }
            ]
          },
          "deactivationMessage": {
            "description": "Language specific deactivation messages.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TranslatedStringDictionary"
              }
            ]
          }
        }
      },
      "VersionInfo": {
        "type": "object",
        "description": "The version view item for the environment.",
        "additionalProperties": false,
        "properties": {
          "fileVersion": {
            "type": "string",
            "description": "The manual file version of Picturepark.Contract.dll.",
            "nullable": true
          },
          "fileProductVersion": {
            "type": "string",
            "description": "The GitVersionTask generated file product version of Picturepark.Configuration.dll.",
            "nullable": true
          },
          "contractVersion": {
            "type": "string",
            "description": "The current contract version stored in CustomerDoc / EnvironmentDoc.",
            "nullable": true
          },
          "release": {
            "type": "string",
            "description": "The bamboo release version. Only provided on bamboo deployments.",
            "nullable": true
          }
        }
      },
      "EnvironmentProcessWaitResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "lifeCycleHit": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnvironmentProcessLifeCycle"
              }
            ]
          },
          "environmentProcess": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EnvironmentProcess"
              }
            ]
          }
        }
      },
      "EnvironmentProcessSearchResult": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "totalResults"
        ],
        "properties": {
          "totalResults": {
            "type": "integer",
            "format": "int64"
          },
          "results": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/EnvironmentProcess"
            }
          }
        }
      },
      "EnvironmentProcessSearchRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "start",
          "limit"
        ],
        "properties": {
          "start": {
            "type": "integer",
            "description": "Defines the offset from the first result you want to fetch. Defaults to 0.",
            "format": "int32",
            "default": 0
          },
          "limit": {
            "type": "integer",
            "description": "Limits the document count of the result set. Defaults to 30.",
            "format": "int32",
            "default": 30
          },
          "filter": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/FilterBase"
              }
            ]
          }
        }
      },
      "CreateServiceConfigurationRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "queueConfigurations": {
            "nullable": true
          }
        }
      },
      "TouchSchemasRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "schemaIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OutputResetRetryAttemptsRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "includeCompleted"
        ],
        "properties": {
          "outputIds": {
            "type": "array",
            "description": "List of output IDs you want to filter on. If this field is not empty, the other will be ignored.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "contentIds": {
            "type": "array",
            "description": "List of Content IDs you want to filter on.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "fileExtensions": {
            "type": "array",
            "description": "The file extension of the outputs you want to filter on.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "outputFormatIds": {
            "type": "array",
            "description": "The IDs of the output formats you want to filter on.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "includeCompleted": {
            "type": "boolean",
            "description": "Should the successful filter results also be reset (and subsequently re-rendered)?"
          }
        }
      },
      "RecalculateFileInformationRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "skipHashCalculation"
        ],
        "properties": {
          "outputIds": {
            "type": "array",
            "description": "List of output IDs you want to filter on. If this field is not empty, the other will be ignored.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "contentIds": {
            "type": "array",
            "description": "List of Content IDs you want to filter on.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "outputFormatIds": {
            "type": "array",
            "description": "The IDs of the output formats you want to filter on.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "createdBefore": {
            "type": "string",
            "description": "Set to filter on creation date.",
            "format": "date-time",
            "nullable": true
          },
          "createdAfter": {
            "type": "string",
            "description": "Set to filter on creation date.",
            "format": "date-time",
            "nullable": true
          },
          "skipHashCalculation": {
            "type": "boolean",
            "description": "Skip hash calculation (only fix file size)"
          }
        }
      },
      "RecreateXmpUntouchedOriginalsResponse": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "checkedContents",
          "createdOriginals"
        ],
        "properties": {
          "resumeToken": {
            "type": "string",
            "description": "Null if operation finished, otherwise token which allows restart of operation",
            "nullable": true
          },
          "checkedContents": {
            "type": "integer",
            "description": "Indicated the number of contents that were checked for missing Originals",
            "format": "int32"
          },
          "createdOriginals": {
            "type": "integer",
            "description": "Indicates the number of Originals (can be &gt; 1 per Content) which were created",
            "format": "int32"
          }
        }
      },
      "RecreateXmpUntouchedOriginalsRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "contentIds": {
            "type": "array",
            "description": "Optional list of Content IDs you want to filter on.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "resumeToken": {
            "type": "string",
            "description": "Token returned from previous call",
            "nullable": true
          }
        }
      },
      "AddContentEventsRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "events"
        ],
        "properties": {
          "events": {
            "type": "array",
            "description": "Data to be added to statistics",
            "items": {
              "$ref": "#/components/schemas/AddContentEventsRequestItem"
            }
          }
        }
      },
      "AddContentEventsRequestItem": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "timestamp",
          "contentId",
          "statistics"
        ],
        "properties": {
          "timestamp": {
            "type": "string",
            "description": "Specifies at which time the events happened. The information will be automatically aggregated according to internal temporal resolution of statistics.",
            "format": "date-time",
            "minLength": 1
          },
          "contentId": {
            "type": "string",
            "description": "Specifies content for which the events happened",
            "minLength": 1
          },
          "apiClientId": {
            "type": "string",
            "description": "Optionally specify the used ApiClient. Defaults to the API Client sending this request.",
            "nullable": true
          },
          "statistics": {
            "description": "Data to be added to statistics",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContentStatisticsDataEditable"
              }
            ]
          },
          "externalEventTraceId": {
            "type": "string",
            "description": "Optionally specify an additional id under which the supplied data should be tracked. This\nId is only used internally and cannot be retrieved through API or export.",
            "nullable": true
          }
        }
      },
      "ContentStatisticsDataEditable": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "downloads": {
            "description": "Statistical data for downloads of a Content",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ContentDownloadsEditable"
              }
            ]
          }
        }
      },
      "ContentDownloadsEditable": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "total",
          "share",
          "embed"
        ],
        "properties": {
          "total": {
            "type": "integer",
            "description": "Total downloads of content (regardless of formats, single download of multiple formats is counted once)",
            "format": "int32"
          },
          "share": {
            "type": "integer",
            "description": "Downloads of content through basic Share",
            "format": "int32"
          },
          "embed": {
            "type": "integer",
            "description": "Downloads of content through embed",
            "format": "int32"
          }
        }
      },
      "OutputFormatDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OutputFormat"
          },
          {
            "type": "object",
            "description": "Represents an output format.",
            "additionalProperties": false,
            "properties": {
              "audit": {
                "description": "Audit information.",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/UserAuditDetail"
                  }
                ]
              }
            }
          }
        ]
      },
      "UserAuditDetail": {
        "type": "object",
        "description": "Audit information",
        "additionalProperties": false,
        "required": [
          "creationDate",
          "modificationDate"
        ],
        "properties": {
          "creationDate": {
            "type": "string",
            "description": "The date on which the document was created.",
            "format": "date-time"
          },
          "modificationDate": {
            "type": "string",
            "description": "The last date on which the document was modified.",
            "format": "date-time"
          },
          "createdByUser": {
            "description": "ID of the user who created the document.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "modifiedByUser": {
            "description": "ID of the last user who modified the document.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          }
        }
      },
      "ServiceProvider": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "baseUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ServiceProviderCreateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "externalId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "secret": {
            "type": "string",
            "nullable": true
          },
          "baseUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SetServiceLogLevelRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "serviceName": {
            "type": "string",
            "nullable": true
          },
          "level": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "NodeInfo": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "lastResponseTime"
        ],
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "hostName": {
            "type": "string",
            "nullable": true
          },
          "lastResponseTime": {
            "type": "string",
            "format": "date-time"
          },
          "serviceName": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "versionInfo": {
            "type": "string",
            "nullable": true
          },
          "release": {
            "type": "string",
            "nullable": true
          },
          "logLevel": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateInfo": {
        "type": "object",
        "description": "Contains information about a possibly available update",
        "additionalProperties": false,
        "required": [
          "updateAvailable"
        ],
        "properties": {
          "currentVersion": {
            "type": "string",
            "description": "The current version.",
            "nullable": true
          },
          "updateVersion": {
            "type": "string",
            "description": "The maximum version available to update to.",
            "nullable": true
          },
          "updateAvailable": {
            "type": "boolean",
            "description": "Indicates if an update is available."
          }
        }
      },
      "ReactivationEnvironmentRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "DeactivationEnvironmentRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "deactivationMessage": {
            "description": "Language specific deactivation messages.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TranslatedStringDictionary"
              }
            ]
          }
        }
      },
      "UpdateEnvironmentRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "targetVersion": {
            "type": "string",
            "description": "The maximal target version.\nIn case the highest available update version is lower than the desired target version, the environments's contract version will be raised to the highest available update version.",
            "nullable": true
          }
        }
      },
      "CustomerVersionInfo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/VersionInfo"
          },
          {
            "type": "object",
            "description": "The version view item for the customer.",
            "additionalProperties": false,
            "properties": {
              "customerId": {
                "type": "string",
                "description": "The customer id.",
                "nullable": true
              }
            }
          }
        ]
      },
      "DeactivationCustomerRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customerId": {
            "type": "string",
            "description": "The customer id.",
            "nullable": true
          },
          "deactivationMessage": {
            "description": "Language specific deactivation messages.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TranslatedStringDictionary"
              }
            ]
          }
        }
      },
      "ReactivationCustomerRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customerId": {
            "type": "string",
            "description": "The customer id.",
            "nullable": true
          }
        }
      },
      "UpdateCustomerRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "refillRecreatedSecondaryIndices"
        ],
        "properties": {
          "targetVersion": {
            "type": "string",
            "description": "The maximal target version.\nIn case the highest available update version is lower than the desired target version, the customer's contract version will be raised to the highest available update version.",
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "description": "The customer id.",
            "nullable": true
          },
          "refillRecreatedSecondaryIndices": {
            "type": "boolean",
            "description": "Defines whether secondary indices which are missing for customer are filled or left empty",
            "default": true
          },
          "recreateSearchIndicesCluster": {
            "type": "string",
            "description": "Defines where searchIndices are recreated if they did not exist (not part of restored snapshot, for example)\nIf null, searchIndices will be recreated on the cluster they were on when the snapshot was taken (or, if that cluster does not exist, on the default)",
            "nullable": true
          }
        }
      },
      "UserDeveloperFlagUpdateRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "isDeveloper"
        ],
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "isDeveloper": {
            "type": "boolean"
          }
        }
      },
      "DataDictionary": {
        "type": "object",
        "additionalProperties": {}
      },
      "LiveStreamMessage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "customerId": {
                "type": "string",
                "nullable": true
              },
              "customerAlias": {
                "type": "string",
                "nullable": true
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "scope": {
                "type": "string",
                "nullable": true
              },
              "documentChange": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/DocumentChange"
                  }
                ]
              },
              "applicationEvent": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ApplicationEvent"
                  }
                ]
              }
            }
          }
        ]
      },
      "DocumentChange": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "version",
          "timeStamp"
        ],
        "properties": {
          "documentName": {
            "type": "string",
            "nullable": true
          },
          "documentId": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int64"
          },
          "action": {
            "type": "string",
            "nullable": true
          },
          "timeStamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApplicationEvent": {
        "type": "object",
        "discriminator": {
          "propertyName": "kind",
          "mapping": {
            "TransferEvent": "#/components/schemas/TransferEvent",
            "ReindexEvent": "#/components/schemas/ReindexEvent",
            "ContentDetailViewEvent": "#/components/schemas/ContentDetailViewEvent",
            "ContentDownloadEvent": "#/components/schemas/ContentDownloadEvent",
            "ContentShareEvent": "#/components/schemas/ContentShareEvent",
            "SessionRenewalEvent": "#/components/schemas/SessionRenewalEvent",
            "SharePageViewEvent": "#/components/schemas/SharePageViewEvent",
            "ApiStatisticsEvent": "#/components/schemas/ApiStatisticsEvent",
            "TrafficStatisticsEvent": "#/components/schemas/TrafficStatisticsEvent",
            "OutputRenderedEvent": "#/components/schemas/OutputRenderedEvent",
            "ConfigurationChangeEvent": "#/components/schemas/ConfigurationChangeEvent",
            "CustomerChangeEvent": "#/components/schemas/CustomerChangeEvent",
            "SearchReindexCompletedEvent": "#/components/schemas/SearchReindexCompletedEvent",
            "BusinessRuleFiredEvent": "#/components/schemas/BusinessRuleFiredEvent",
            "BusinessProcessCancellationRequestedEvent": "#/components/schemas/BusinessProcessCancellationRequestedEvent",
            "DataExtractionRepairEvent": "#/components/schemas/DataExtractionRepairEvent"
          }
        },
        "additionalProperties": false,
        "required": [
          "kind",
          "timestamp"
        ],
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "kind": {
            "type": "string"
          }
        }
      },
      "TransferEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationEvent"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "transferId": {
                "type": "string",
                "nullable": true
              },
              "state": {
                "$ref": "#/components/schemas/TransferState"
              }
            }
          }
        ]
      },
      "TransferState": {
        "type": "string",
        "description": "Transfer states",
        "x-enumNames": [
          "Draft",
          "UploadInProgress",
          "UploadCompleted",
          "ImportInProgress",
          "ImportCompleted",
          "UploadCancelled",
          "ImportCancelled",
          "ImportFailed",
          "Created",
          "Deleted",
          "TransferReady",
          "FileDeleteInProgress",
          "TransferCleanup",
          "ImportCompletedWithErrors",
          "UploadCompletedWithErrors",
          "UploadCancellationInProgress",
          "ImportDone"
        ],
        "enum": [
          "Draft",
          "UploadInProgress",
          "UploadCompleted",
          "ImportInProgress",
          "ImportCompleted",
          "UploadCancelled",
          "ImportCancelled",
          "ImportFailed",
          "Created",
          "Deleted",
          "TransferReady",
          "FileDeleteInProgress",
          "TransferCleanup",
          "ImportCompletedWithErrors",
          "UploadCompletedWithErrors",
          "UploadCancellationInProgress",
          "ImportDone"
        ]
      },
      "ReindexEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationEvent"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "indexId": {
                "type": "string",
                "nullable": true
              },
              "state": {
                "$ref": "#/components/schemas/IndexState"
              }
            }
          }
        ]
      },
      "ContentDetailViewEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationEvent"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "contentIds": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "ContentDownloadEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationEvent"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "downloadInfos": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/DownloadTrackingInfo"
                }
              },
              "fileSize": {
                "type": "integer",
                "format": "int64"
              },
              "shareToken": {
                "type": "string",
                "nullable": true
              },
              "range": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "DownloadTrackingInfo": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "contentDisposition"
        ],
        "properties": {
          "contentId": {
            "type": "string",
            "nullable": true
          },
          "outputFormatId": {
            "type": "string",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contentDisposition": {
            "$ref": "#/components/schemas/ContentDisposition"
          }
        }
      },
      "ContentDisposition": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Attachment",
          "Inline"
        ],
        "enum": [
          "Attachment",
          "Inline"
        ]
      },
      "ContentShareEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationEvent"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "shareId": {
                "type": "string",
                "nullable": true
              },
              "shareType": {
                "$ref": "#/components/schemas/ShareType"
              },
              "addedContentIds": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "ShareType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Basic",
          "Embed"
        ],
        "enum": [
          "Basic",
          "Embed"
        ]
      },
      "SessionRenewalEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationEvent"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "authorizationState": {
                "$ref": "#/components/schemas/AuthorizationState"
              }
            }
          }
        ]
      },
      "SharePageViewEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationEvent"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "shareToken": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "ApiStatisticsEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationEvent"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "requestsPerClient": {
                "type": "object",
                "nullable": true,
                "additionalProperties": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ]
      },
      "TrafficStatisticsEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationEvent"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "service": {
                "type": "string",
                "nullable": true
              },
              "requestSize": {
                "type": "integer",
                "format": "int64"
              },
              "responseSize": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "OutputRenderedEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationEvent"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "outputId": {
                "type": "string",
                "nullable": true
              },
              "contentId": {
                "type": "string",
                "nullable": true
              },
              "outputFormatId": {
                "type": "string",
                "nullable": true
              },
              "renderingState": {
                "$ref": "#/components/schemas/OutputRenderingState"
              }
            }
          }
        ]
      },
      "OutputRenderingState": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "InProgress",
          "Completed",
          "Failed",
          "Skipped",
          "NoLicense",
          "RerenderRequested"
        ],
        "enum": [
          "InProgress",
          "Completed",
          "Failed",
          "Skipped",
          "NoLicense",
          "RerenderRequested"
        ]
      },
      "ConfigurationChangeEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationEvent"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "documentType": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "CustomerChangeEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ConfigurationChangeEvent"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "lifeCycle": {
                "$ref": "#/components/schemas/LifeCycle"
              }
            }
          }
        ]
      },
      "SearchReindexCompletedEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationEvent"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "searchIndex": {
                "$ref": "#/components/schemas/SearchIndexType"
              },
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "duration": {
                "type": "string",
                "format": "time-span"
              }
            }
          }
        ]
      },
      "SearchIndexType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Content",
          "ListItem"
        ],
        "enum": [
          "Content",
          "ListItem"
        ]
      },
      "BusinessRuleFiredEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationEvent"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "details": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/BusinessRuleFiredEventDetail"
                }
              }
            }
          }
        ]
      },
      "BusinessRuleFiredEventDetail": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "documentId": {
            "type": "string",
            "nullable": true
          },
          "documentType": {
            "type": "string",
            "nullable": true
          },
          "ruleIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BusinessProcessCancellationRequestedEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationEvent"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "businessProcessId": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "DataExtractionRepairEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApplicationEvent"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "contentRepairRequestId": {
                "type": "string",
                "nullable": true
              },
              "contentId": {
                "type": "string",
                "nullable": true
              },
              "error": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                ]
              },
              "hadChanges": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "Message": {
        "type": "object",
        "discriminator": {
          "propertyName": "kind",
          "mapping": {
            "ConsoleMessage": "#/components/schemas/ConsoleMessage",
            "NodeInfoMessage": "#/components/schemas/NodeInfoMessage",
            "LiveStreamMessage": "#/components/schemas/LiveStreamMessage"
          }
        },
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "kind",
          "retries",
          "retriesPerformed",
          "priority",
          "deduplicate"
        ],
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "retries": {
            "type": "integer",
            "format": "int32"
          },
          "retriesPerformed": {
            "type": "integer",
            "format": "int32"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "deduplicate": {
            "type": "boolean"
          },
          "kind": {
            "type": "string"
          }
        }
      },
      "ConsoleMessage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "command": {
                "type": "string",
                "nullable": true
              },
              "arguments": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/TupleOfStringAndString"
                }
              },
              "targetQueue": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "TupleOfStringAndString": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "item1",
          "item2"
        ],
        "properties": {
          "item1": {
            "type": "string"
          },
          "item2": {
            "type": "string"
          }
        }
      },
      "NodeInfoMessage": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Message"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "nodeId": {
                "type": "string",
                "nullable": true
              },
              "hostName": {
                "type": "string",
                "nullable": true
              },
              "lastResponseTime": {
                "type": "string",
                "format": "date-time"
              },
              "serviceName": {
                "type": "string",
                "nullable": true
              },
              "fileVersion": {
                "type": "string",
                "nullable": true
              },
              "productVersion": {
                "type": "string",
                "nullable": true
              },
              "release": {
                "type": "string",
                "nullable": true
              },
              "logLevel": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "AudioMetadata": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FileMetadata"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "audioStreams": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/AudioStream"
                }
              }
            }
          }
        ]
      },
      "AudioStream": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "bitRate": {
            "type": "string",
            "nullable": true
          },
          "bitRateMode": {
            "type": "string",
            "nullable": true
          },
          "channels": {
            "type": "string",
            "nullable": true
          },
          "channelPositions": {
            "type": "string",
            "nullable": true
          },
          "codec": {
            "type": "string",
            "nullable": true
          },
          "durationInSeconds": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "format": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "resolution": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "samplingRate": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "streamSize": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "FileMetadata": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "names": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TranslatedStringDictionary"
              }
            ]
          },
          "descriptions": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TranslatedStringDictionary"
              }
            ]
          },
          "fileExtension": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "filePath": {
            "type": "string",
            "nullable": true
          },
          "fileSizeInBytes": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "sha1Hash": {
            "type": "string",
            "nullable": true
          },
          "xmpMetadata": {
            "nullable": true
          },
          "exifMetadata": {
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DocumentMetadata": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FileMetadata"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "applicationName": {
                "type": "string",
                "nullable": true
              },
              "applicationVersion": {
                "type": "string",
                "nullable": true
              },
              "author": {
                "type": "string",
                "nullable": true
              },
              "creator": {
                "type": "string",
                "nullable": true
              },
              "publisher": {
                "type": "string",
                "nullable": true
              },
              "company": {
                "type": "string",
                "nullable": true
              },
              "documentTitle": {
                "type": "string",
                "nullable": true
              },
              "characterCount": {
                "type": "integer",
                "format": "int32"
              },
              "characterCountWithSpaces": {
                "type": "integer",
                "format": "int32"
              },
              "lineCount": {
                "type": "integer",
                "format": "int32"
              },
              "pageCount": {
                "type": "integer",
                "format": "int32"
              },
              "slideCount": {
                "type": "integer",
                "format": "int32"
              },
              "paragraphCount": {
                "type": "integer",
                "format": "int32"
              },
              "revisionNumber": {
                "type": "integer",
                "format": "int32"
              },
              "titles": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              },
              "imageTitles": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              },
              "epsInfo": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EpsMetadata"
                  }
                ]
              }
            }
          }
        ]
      },
      "EpsMetadata": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "isRasterized",
          "widthInPoints",
          "heightInPoints"
        ],
        "properties": {
          "isRasterized": {
            "type": "boolean"
          },
          "widthInPoints": {
            "type": "number",
            "format": "double"
          },
          "heightInPoints": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "ImageMetadata": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FileMetadata"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "width": {
                "type": "integer",
                "format": "int32"
              },
              "height": {
                "type": "integer",
                "format": "int32"
              },
              "widthInInch": {
                "type": "number",
                "format": "double"
              },
              "heightInInch": {
                "type": "number",
                "format": "double"
              },
              "widthInCm": {
                "type": "number",
                "format": "double"
              },
              "heightInCm": {
                "type": "number",
                "format": "double"
              },
              "colorSpace": {
                "type": "string",
                "nullable": true
              },
              "colorProfile": {
                "type": "string",
                "nullable": true
              },
              "bitsPerPixel": {
                "type": "integer",
                "format": "int32"
              },
              "bitsPerChannel": {
                "type": "integer",
                "format": "int32"
              },
              "channels": {
                "type": "string",
                "nullable": true
              },
              "pixelFormat": {
                "type": "string",
                "nullable": true
              },
              "hasAlpha": {
                "type": "boolean"
              },
              "isIndexed": {
                "type": "boolean"
              },
              "isExtended": {
                "type": "boolean"
              },
              "horizontalResolution": {
                "type": "number",
                "format": "double"
              },
              "verticalResolution": {
                "type": "number",
                "format": "double"
              },
              "totalFrames": {
                "type": "integer",
                "format": "int32"
              },
              "totalUnspecifiedTiffExtraChannels": {
                "type": "integer",
                "format": "int32"
              },
              "hasExifData": {
                "type": "boolean"
              },
              "hasIptcData": {
                "type": "boolean"
              },
              "hasAdobeResourceData": {
                "type": "boolean"
              },
              "hasXmpData": {
                "type": "boolean"
              },
              "uncompressedSizeInBytes": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "VideoMetadata": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FileMetadata"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "width": {
                "type": "integer",
                "format": "int32"
              },
              "height": {
                "type": "integer",
                "format": "int32"
              },
              "durationInSeconds": {
                "type": "number",
                "format": "float"
              },
              "format": {
                "type": "string",
                "nullable": true
              },
              "codec": {
                "type": "string",
                "nullable": true
              },
              "overallBitrate": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "videoStreams": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/VideoStream"
                }
              },
              "audioStreams": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/AudioStream"
                }
              }
            }
          }
        ]
      },
      "VideoStream": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "durationInSeconds"
        ],
        "properties": {
          "bitRate": {
            "type": "string",
            "nullable": true
          },
          "codec": {
            "type": "string",
            "nullable": true
          },
          "displayAspectRatio": {
            "type": "string",
            "nullable": true
          },
          "durationInSeconds": {
            "type": "number",
            "format": "float"
          },
          "format": {
            "type": "string",
            "nullable": true
          },
          "frameCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "frameRate": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "pixelAspectRatio": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "resolution": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "streamSize": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rotation": {
            "type": "number",
            "format": "float",
            "nullable": true
          }
        }
      },
      "VectorMetadata": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FileMetadata"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "author": {
                "type": "string",
                "nullable": true
              },
              "creator": {
                "type": "string",
                "nullable": true
              },
              "publisher": {
                "type": "string",
                "nullable": true
              },
              "company": {
                "type": "string",
                "nullable": true
              },
              "title": {
                "type": "string",
                "nullable": true
              },
              "pageCount": {
                "type": "integer",
                "format": "int32"
              },
              "epsInfo": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EpsMetadata"
                  }
                ]
              }
            }
          }
        ]
      },
      "DynamicViewFieldMeta": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DynamicViewFieldMetaBase"
          },
          {
            "type": "object",
            "description": "Meta information for a dynamic view field",
            "additionalProperties": false,
            "required": [
              "filter",
              "targetDocType"
            ],
            "properties": {
              "filter": {
                "description": "Filter for the dynamic view field.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/FilterBase"
                  }
                ]
              },
              "sort": {
                "type": "array",
                "description": "Sorting information.",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/SortInfo"
                }
              },
              "targetDocType": {
                "type": "string",
                "description": "Target doc type.",
                "minLength": 1
              }
            }
          }
        ]
      },
      "SortInfo": {
        "type": "object",
        "description": "Sorting information",
        "additionalProperties": false,
        "required": [
          "direction"
        ],
        "properties": {
          "field": {
            "type": "string",
            "description": "The field's ID to sort on.",
            "nullable": true
          },
          "direction": {
            "description": "The sort direction (ascending/descending).",
            "default": "Asc",
            "oneOf": [
              {
                "$ref": "#/components/schemas/SortDirection"
              }
            ]
          }
        }
      },
      "SortDirection": {
        "type": "string",
        "description": "The sort direction",
        "x-enumNames": [
          "Asc",
          "Desc"
        ],
        "enum": [
          "Asc",
          "Desc"
        ]
      },
      "DynamicViewFieldMetaBase": {
        "type": "object",
        "discriminator": {
          "propertyName": "kind",
          "mapping": {
            "DynamicViewFieldMetaWithRenderingError": "#/components/schemas/DynamicViewFieldMetaWithRenderingError",
            "DynamicViewFieldMeta": "#/components/schemas/DynamicViewFieldMeta"
          }
        },
        "description": "Base class of meta information for a dynamic view field",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "kind"
        ],
        "properties": {
          "kind": {
            "type": "string"
          }
        }
      },
      "DynamicViewFieldMetaWithHasItems": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DynamicViewFieldMeta"
          },
          {
            "type": "object",
            "description": "Meta information for a dynamic view field including a flag that indicates if the rendered filter does match some items.",
            "additionalProperties": false,
            "properties": {
              "hasItems": {
                "type": "boolean",
                "description": "indicates if the rendered filter does match some items."
              }
            }
          }
        ]
      },
      "DynamicViewFieldMetaWithRenderingError": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DynamicViewFieldMetaBase"
          },
          {
            "type": "object",
            "description": "Meta information for a dynamic view field where the filter could not be rendered successfully.",
            "additionalProperties": false,
            "properties": {
              "error": {
                "type": "string",
                "description": "Error.",
                "nullable": true
              }
            }
          }
        ]
      },
      "ContentBackupFileRemoveInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "filePath": {
            "type": "string",
            "nullable": true
          }
        }
      }
    }
  }
}