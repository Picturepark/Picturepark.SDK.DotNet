### YamlMime:ManagedReference
items:
- uid: Picturepark.SDK.V1.Contract.MetadataStatus
  commentId: T:Picturepark.SDK.V1.Contract.MetadataStatus
  id: MetadataStatus
  parent: Picturepark.SDK.V1.Contract
  children:
  - Picturepark.SDK.V1.Contract.MetadataStatus.ContentOrLayerSchemaIds
  - Picturepark.SDK.V1.Contract.MetadataStatus.FieldIdsToCleanup
  - Picturepark.SDK.V1.Contract.MetadataStatus.FromJson(System.String)
  - Picturepark.SDK.V1.Contract.MetadataStatus.ListSchemaIds
  - Picturepark.SDK.V1.Contract.MetadataStatus.MainDocuments
  - Picturepark.SDK.V1.Contract.MetadataStatus.SearchDocuments
  - Picturepark.SDK.V1.Contract.MetadataStatus.State
  - Picturepark.SDK.V1.Contract.MetadataStatus.ToJson
  langs:
  - csharp
  - vb
  name: MetadataStatus
  nameWithType: MetadataStatus
  fullName: Picturepark.SDK.V1.Contract.MetadataStatus
  type: Class
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: MetadataStatus
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 30435
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: The overall status of the contents and list items in comparison to the actual schemas' structure
  example: []
  syntax:
    content: >-
      [GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]

      public class MetadataStatus
    content.vb: >-
      <GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")>

      Public Class MetadataStatus
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.CodeDom.Compiler.GeneratedCodeAttribute
    ctor: System.CodeDom.Compiler.GeneratedCodeAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: NJsonSchema
    - type: System.String
      value: 13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))
- uid: Picturepark.SDK.V1.Contract.MetadataStatus.ContentOrLayerSchemaIds
  commentId: P:Picturepark.SDK.V1.Contract.MetadataStatus.ContentOrLayerSchemaIds
  id: ContentOrLayerSchemaIds
  parent: Picturepark.SDK.V1.Contract.MetadataStatus
  langs:
  - csharp
  - vb
  name: ContentOrLayerSchemaIds
  nameWithType: MetadataStatus.ContentOrLayerSchemaIds
  fullName: Picturepark.SDK.V1.Contract.MetadataStatus.ContentOrLayerSchemaIds
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: ContentOrLayerSchemaIds
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 30441
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: The schema ids (of type Content or Layer) for which the contents are outdated and need to be updated.
  example: []
  syntax:
    content: >-
      [JsonProperty("contentOrLayerSchemaIds", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      [Obsolete("Use MainDocuments.ContentOrLayerSchemaIds instead. This will be removed in version 11.15.")]

      public ICollection<string> ContentOrLayerSchemaIds { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonProperty("contentOrLayerSchemaIds", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      <Obsolete("Use MainDocuments.ContentOrLayerSchemaIds instead. This will be removed in version 11.15.")>

      Public Property ContentOrLayerSchemaIds As ICollection(Of String)
  overload: Picturepark.SDK.V1.Contract.MetadataStatus.ContentOrLayerSchemaIds*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: contentOrLayerSchemaIds
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use MainDocuments.ContentOrLayerSchemaIds instead. This will be removed in version 11.15.
- uid: Picturepark.SDK.V1.Contract.MetadataStatus.ListSchemaIds
  commentId: P:Picturepark.SDK.V1.Contract.MetadataStatus.ListSchemaIds
  id: ListSchemaIds
  parent: Picturepark.SDK.V1.Contract.MetadataStatus
  langs:
  - csharp
  - vb
  name: ListSchemaIds
  nameWithType: MetadataStatus.ListSchemaIds
  fullName: Picturepark.SDK.V1.Contract.MetadataStatus.ListSchemaIds
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: ListSchemaIds
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 30448
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: The schema ids (of type List) for which the the list items are outdated and need to be updated.
  example: []
  syntax:
    content: >-
      [JsonProperty("listSchemaIds", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      [Obsolete("Use MainDocuments.ListSchemaIds instead. This will be removed in version 11.15.")]

      public ICollection<string> ListSchemaIds { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonProperty("listSchemaIds", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      <Obsolete("Use MainDocuments.ListSchemaIds instead. This will be removed in version 11.15.")>

      Public Property ListSchemaIds As ICollection(Of String)
  overload: Picturepark.SDK.V1.Contract.MetadataStatus.ListSchemaIds*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: listSchemaIds
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use MainDocuments.ListSchemaIds instead. This will be removed in version 11.15.
- uid: Picturepark.SDK.V1.Contract.MetadataStatus.MainDocuments
  commentId: P:Picturepark.SDK.V1.Contract.MetadataStatus.MainDocuments
  id: MainDocuments
  parent: Picturepark.SDK.V1.Contract.MetadataStatus
  langs:
  - csharp
  - vb
  name: MainDocuments
  nameWithType: MetadataStatus.MainDocuments
  fullName: Picturepark.SDK.V1.Contract.MetadataStatus.MainDocuments
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: MainDocuments
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 30455
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Schema IDs for which main documents need to be touched.
  example: []
  syntax:
    content: >-
      [JsonProperty("mainDocuments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public MetadataStatusEntries MainDocuments { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.Contract.MetadataStatusEntries
    content.vb: >-
      <JsonProperty("mainDocuments", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property MainDocuments As MetadataStatusEntries
  overload: Picturepark.SDK.V1.Contract.MetadataStatus.MainDocuments*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: mainDocuments
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.MetadataStatus.SearchDocuments
  commentId: P:Picturepark.SDK.V1.Contract.MetadataStatus.SearchDocuments
  id: SearchDocuments
  parent: Picturepark.SDK.V1.Contract.MetadataStatus
  langs:
  - csharp
  - vb
  name: SearchDocuments
  nameWithType: MetadataStatus.SearchDocuments
  fullName: Picturepark.SDK.V1.Contract.MetadataStatus.SearchDocuments
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: SearchDocuments
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 30461
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Schema IDs for which search documents need to be touched.
  example: []
  syntax:
    content: >-
      [JsonProperty("searchDocuments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public MetadataStatusEntries SearchDocuments { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.Contract.MetadataStatusEntries
    content.vb: >-
      <JsonProperty("searchDocuments", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property SearchDocuments As MetadataStatusEntries
  overload: Picturepark.SDK.V1.Contract.MetadataStatus.SearchDocuments*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: searchDocuments
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.MetadataStatus.State
  commentId: P:Picturepark.SDK.V1.Contract.MetadataStatus.State
  id: State
  parent: Picturepark.SDK.V1.Contract.MetadataStatus
  langs:
  - csharp
  - vb
  name: State
  nameWithType: MetadataStatus.State
  fullName: Picturepark.SDK.V1.Contract.MetadataStatus.State
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: State
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 30467
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: The global state of the Contents and ListItems compared to the schema structure (Green = ok, Red = update needed).
  example: []
  syntax:
    content: >-
      [JsonProperty("state", Required = Required.Always)]

      [Required(AllowEmptyStrings = true)]

      [JsonConverter(typeof(StringEnumConverter))]

      public MetadataState State { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.Contract.MetadataState
    content.vb: >-
      <JsonProperty("state", Required:=Required.Always)>

      <Required(AllowEmptyStrings:=True)>

      <JsonConverter(GetType(StringEnumConverter))>

      Public Property State As MetadataState
  overload: Picturepark.SDK.V1.Contract.MetadataStatus.State*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: state
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: AllowEmptyStrings
      type: System.Boolean
      value: true
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Newtonsoft.Json.Converters.StringEnumConverter
- uid: Picturepark.SDK.V1.Contract.MetadataStatus.FieldIdsToCleanup
  commentId: P:Picturepark.SDK.V1.Contract.MetadataStatus.FieldIdsToCleanup
  id: FieldIdsToCleanup
  parent: Picturepark.SDK.V1.Contract.MetadataStatus
  langs:
  - csharp
  - vb
  name: FieldIdsToCleanup
  nameWithType: MetadataStatus.FieldIdsToCleanup
  fullName: Picturepark.SDK.V1.Contract.MetadataStatus.FieldIdsToCleanup
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: FieldIdsToCleanup
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 30475
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: The field ids that that cannot be used and needs to be cleaned up after updating the outdated contents and list items.
  example: []
  syntax:
    content: >-
      [JsonProperty("fieldIdsToCleanup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public IDictionary<string, ICollection<string>> FieldIdsToCleanup { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.ICollection{System.String}}
    content.vb: >-
      <JsonProperty("fieldIdsToCleanup", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property FieldIdsToCleanup As IDictionary(Of String, ICollection(Of String))
  overload: Picturepark.SDK.V1.Contract.MetadataStatus.FieldIdsToCleanup*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: fieldIdsToCleanup
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.MetadataStatus.ToJson
  commentId: M:Picturepark.SDK.V1.Contract.MetadataStatus.ToJson
  id: ToJson
  parent: Picturepark.SDK.V1.Contract.MetadataStatus
  langs:
  - csharp
  - vb
  name: ToJson()
  nameWithType: MetadataStatus.ToJson()
  fullName: Picturepark.SDK.V1.Contract.MetadataStatus.ToJson()
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: ToJson
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 30478
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  syntax:
    content: public string ToJson()
    return:
      type: System.String
    content.vb: Public Function ToJson() As String
  overload: Picturepark.SDK.V1.Contract.MetadataStatus.ToJson*
- uid: Picturepark.SDK.V1.Contract.MetadataStatus.FromJson(System.String)
  commentId: M:Picturepark.SDK.V1.Contract.MetadataStatus.FromJson(System.String)
  id: FromJson(System.String)
  parent: Picturepark.SDK.V1.Contract.MetadataStatus
  langs:
  - csharp
  - vb
  name: FromJson(string)
  nameWithType: MetadataStatus.FromJson(string)
  fullName: Picturepark.SDK.V1.Contract.MetadataStatus.FromJson(string)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: FromJson
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 30484
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  syntax:
    content: public static MetadataStatus FromJson(string data)
    parameters:
    - id: data
      type: System.String
    return:
      type: Picturepark.SDK.V1.Contract.MetadataStatus
    content.vb: Public Shared Function FromJson(data As String) As MetadataStatus
  overload: Picturepark.SDK.V1.Contract.MetadataStatus.FromJson*
  nameWithType.vb: MetadataStatus.FromJson(String)
  fullName.vb: Picturepark.SDK.V1.Contract.MetadataStatus.FromJson(String)
  name.vb: FromJson(String)
references:
- uid: Picturepark.SDK.V1.Contract
  commentId: N:Picturepark.SDK.V1.Contract
  href: Picturepark.html
  name: Picturepark.SDK.V1.Contract
  nameWithType: Picturepark.SDK.V1.Contract
  fullName: Picturepark.SDK.V1.Contract
  spec.csharp:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.Contract
    name: Contract
    href: Picturepark.SDK.V1.Contract.html
  spec.vb:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.Contract
    name: Contract
    href: Picturepark.SDK.V1.Contract.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Picturepark.SDK.V1.Contract.MetadataStatus.ContentOrLayerSchemaIds*
  commentId: Overload:Picturepark.SDK.V1.Contract.MetadataStatus.ContentOrLayerSchemaIds
  href: Picturepark.SDK.V1.Contract.MetadataStatus.html#Picturepark_SDK_V1_Contract_MetadataStatus_ContentOrLayerSchemaIds
  name: ContentOrLayerSchemaIds
  nameWithType: MetadataStatus.ContentOrLayerSchemaIds
  fullName: Picturepark.SDK.V1.Contract.MetadataStatus.ContentOrLayerSchemaIds
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<string>
  nameWithType: ICollection<string>
  fullName: System.Collections.Generic.ICollection<string>
  nameWithType.vb: ICollection(Of String)
  fullName.vb: System.Collections.Generic.ICollection(Of String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Picturepark.SDK.V1.Contract.MetadataStatus.ListSchemaIds*
  commentId: Overload:Picturepark.SDK.V1.Contract.MetadataStatus.ListSchemaIds
  href: Picturepark.SDK.V1.Contract.MetadataStatus.html#Picturepark_SDK_V1_Contract_MetadataStatus_ListSchemaIds
  name: ListSchemaIds
  nameWithType: MetadataStatus.ListSchemaIds
  fullName: Picturepark.SDK.V1.Contract.MetadataStatus.ListSchemaIds
- uid: Picturepark.SDK.V1.Contract.MetadataStatus.MainDocuments*
  commentId: Overload:Picturepark.SDK.V1.Contract.MetadataStatus.MainDocuments
  href: Picturepark.SDK.V1.Contract.MetadataStatus.html#Picturepark_SDK_V1_Contract_MetadataStatus_MainDocuments
  name: MainDocuments
  nameWithType: MetadataStatus.MainDocuments
  fullName: Picturepark.SDK.V1.Contract.MetadataStatus.MainDocuments
- uid: Picturepark.SDK.V1.Contract.MetadataStatusEntries
  commentId: T:Picturepark.SDK.V1.Contract.MetadataStatusEntries
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.MetadataStatusEntries.html
  name: MetadataStatusEntries
  nameWithType: MetadataStatusEntries
  fullName: Picturepark.SDK.V1.Contract.MetadataStatusEntries
- uid: Picturepark.SDK.V1.Contract.MetadataStatus.SearchDocuments*
  commentId: Overload:Picturepark.SDK.V1.Contract.MetadataStatus.SearchDocuments
  href: Picturepark.SDK.V1.Contract.MetadataStatus.html#Picturepark_SDK_V1_Contract_MetadataStatus_SearchDocuments
  name: SearchDocuments
  nameWithType: MetadataStatus.SearchDocuments
  fullName: Picturepark.SDK.V1.Contract.MetadataStatus.SearchDocuments
- uid: Picturepark.SDK.V1.Contract.MetadataStatus.State*
  commentId: Overload:Picturepark.SDK.V1.Contract.MetadataStatus.State
  href: Picturepark.SDK.V1.Contract.MetadataStatus.html#Picturepark_SDK_V1_Contract_MetadataStatus_State
  name: State
  nameWithType: MetadataStatus.State
  fullName: Picturepark.SDK.V1.Contract.MetadataStatus.State
- uid: Picturepark.SDK.V1.Contract.MetadataState
  commentId: T:Picturepark.SDK.V1.Contract.MetadataState
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.MetadataState.html
  name: MetadataState
  nameWithType: MetadataState
  fullName: Picturepark.SDK.V1.Contract.MetadataState
- uid: Picturepark.SDK.V1.Contract.MetadataStatus.FieldIdsToCleanup*
  commentId: Overload:Picturepark.SDK.V1.Contract.MetadataStatus.FieldIdsToCleanup
  href: Picturepark.SDK.V1.Contract.MetadataStatus.html#Picturepark_SDK_V1_Contract_MetadataStatus_FieldIdsToCleanup
  name: FieldIdsToCleanup
  nameWithType: MetadataStatus.FieldIdsToCleanup
  fullName: Picturepark.SDK.V1.Contract.MetadataStatus.FieldIdsToCleanup
- uid: System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.ICollection{System.String}}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.ICollection{System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, ICollection<string>>
  nameWithType: IDictionary<string, ICollection<string>>
  fullName: System.Collections.Generic.IDictionary<string, System.Collections.Generic.ICollection<string>>
  nameWithType.vb: IDictionary(Of String, ICollection(Of String))
  fullName.vb: System.Collections.Generic.IDictionary(Of String, System.Collections.Generic.ICollection(Of String))
  name.vb: IDictionary(Of String, ICollection(Of String))
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Picturepark.SDK.V1.Contract.MetadataStatus.ToJson*
  commentId: Overload:Picturepark.SDK.V1.Contract.MetadataStatus.ToJson
  href: Picturepark.SDK.V1.Contract.MetadataStatus.html#Picturepark_SDK_V1_Contract_MetadataStatus_ToJson
  name: ToJson
  nameWithType: MetadataStatus.ToJson
  fullName: Picturepark.SDK.V1.Contract.MetadataStatus.ToJson
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Picturepark.SDK.V1.Contract.MetadataStatus.FromJson*
  commentId: Overload:Picturepark.SDK.V1.Contract.MetadataStatus.FromJson
  href: Picturepark.SDK.V1.Contract.MetadataStatus.html#Picturepark_SDK_V1_Contract_MetadataStatus_FromJson_System_String_
  name: FromJson
  nameWithType: MetadataStatus.FromJson
  fullName: Picturepark.SDK.V1.Contract.MetadataStatus.FromJson
- uid: Picturepark.SDK.V1.Contract.MetadataStatus
  commentId: T:Picturepark.SDK.V1.Contract.MetadataStatus
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.MetadataStatus.html
  name: MetadataStatus
  nameWithType: MetadataStatus
  fullName: Picturepark.SDK.V1.Contract.MetadataStatus
