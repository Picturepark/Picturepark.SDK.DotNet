### YamlMime:ManagedReference
items:
- uid: Picturepark.SDK.V1.Contract.UserWithRoles
  commentId: T:Picturepark.SDK.V1.Contract.UserWithRoles
  id: UserWithRoles
  parent: Picturepark.SDK.V1.Contract
  children:
  - Picturepark.SDK.V1.Contract.UserWithRoles.AuthorizationState
  - Picturepark.SDK.V1.Contract.UserWithRoles.EmailAddress
  - Picturepark.SDK.V1.Contract.UserWithRoles.FirstName
  - Picturepark.SDK.V1.Contract.UserWithRoles.FromJson(System.String)
  - Picturepark.SDK.V1.Contract.UserWithRoles.Id
  - Picturepark.SDK.V1.Contract.UserWithRoles.IsAnonymousUser
  - Picturepark.SDK.V1.Contract.UserWithRoles.IsFederated
  - Picturepark.SDK.V1.Contract.UserWithRoles.IsLocked
  - Picturepark.SDK.V1.Contract.UserWithRoles.IsReadOnly
  - Picturepark.SDK.V1.Contract.UserWithRoles.IsSupportUser
  - Picturepark.SDK.V1.Contract.UserWithRoles.LastActivity
  - Picturepark.SDK.V1.Contract.UserWithRoles.LastName
  - Picturepark.SDK.V1.Contract.UserWithRoles.LifeCycle
  - Picturepark.SDK.V1.Contract.UserWithRoles.ToJson
  - Picturepark.SDK.V1.Contract.UserWithRoles.UserRoleIds
  langs:
  - csharp
  - vb
  name: UserWithRoles
  nameWithType: UserWithRoles
  fullName: Picturepark.SDK.V1.Contract.UserWithRoles
  type: Class
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: UserWithRoles
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 42500
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: User information retrieved via search
  example: []
  syntax:
    content: >-
      [GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]

      public class UserWithRoles
    content.vb: >-
      <GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")>

      Public Class UserWithRoles
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.CodeDom.Compiler.GeneratedCodeAttribute
    ctor: System.CodeDom.Compiler.GeneratedCodeAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: NJsonSchema
    - type: System.String
      value: 13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))
- uid: Picturepark.SDK.V1.Contract.UserWithRoles.UserRoleIds
  commentId: P:Picturepark.SDK.V1.Contract.UserWithRoles.UserRoleIds
  id: UserRoleIds
  parent: Picturepark.SDK.V1.Contract.UserWithRoles
  langs:
  - csharp
  - vb
  name: UserRoleIds
  nameWithType: UserWithRoles.UserRoleIds
  fullName: Picturepark.SDK.V1.Contract.UserWithRoles.UserRoleIds
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: UserRoleIds
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 42506
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: IDs of user roles user is assigned to
  example: []
  syntax:
    content: >-
      [JsonProperty("userRoleIds", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public ICollection<string> UserRoleIds { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonProperty("userRoleIds", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property UserRoleIds As ICollection(Of String)
  overload: Picturepark.SDK.V1.Contract.UserWithRoles.UserRoleIds*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: userRoleIds
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.UserWithRoles.Id
  commentId: P:Picturepark.SDK.V1.Contract.UserWithRoles.Id
  id: Id
  parent: Picturepark.SDK.V1.Contract.UserWithRoles
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: UserWithRoles.Id
  fullName: Picturepark.SDK.V1.Contract.UserWithRoles.Id
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Id
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 42512
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: User's Picturepark ID.
  example: []
  syntax:
    content: >-
      [JsonProperty("id", Required = Required.Always)]

      [Required]

      public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("id", Required:=Required.Always)>

      <Required>

      Public Property Id As String
  overload: Picturepark.SDK.V1.Contract.UserWithRoles.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Picturepark.SDK.V1.Contract.UserWithRoles.FirstName
  commentId: P:Picturepark.SDK.V1.Contract.UserWithRoles.FirstName
  id: FirstName
  parent: Picturepark.SDK.V1.Contract.UserWithRoles
  langs:
  - csharp
  - vb
  name: FirstName
  nameWithType: UserWithRoles.FirstName
  fullName: Picturepark.SDK.V1.Contract.UserWithRoles.FirstName
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: FirstName
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 42519
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: User's first name.
  example: []
  syntax:
    content: >-
      [JsonProperty("firstName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public string FirstName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("firstName", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property FirstName As String
  overload: Picturepark.SDK.V1.Contract.UserWithRoles.FirstName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: firstName
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.UserWithRoles.LastName
  commentId: P:Picturepark.SDK.V1.Contract.UserWithRoles.LastName
  id: LastName
  parent: Picturepark.SDK.V1.Contract.UserWithRoles
  langs:
  - csharp
  - vb
  name: LastName
  nameWithType: UserWithRoles.LastName
  fullName: Picturepark.SDK.V1.Contract.UserWithRoles.LastName
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: LastName
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 42525
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: User's last name.
  example: []
  syntax:
    content: >-
      [JsonProperty("lastName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public string LastName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("lastName", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property LastName As String
  overload: Picturepark.SDK.V1.Contract.UserWithRoles.LastName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: lastName
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.UserWithRoles.EmailAddress
  commentId: P:Picturepark.SDK.V1.Contract.UserWithRoles.EmailAddress
  id: EmailAddress
  parent: Picturepark.SDK.V1.Contract.UserWithRoles
  langs:
  - csharp
  - vb
  name: EmailAddress
  nameWithType: UserWithRoles.EmailAddress
  fullName: Picturepark.SDK.V1.Contract.UserWithRoles.EmailAddress
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: EmailAddress
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 42531
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Email address of the user (doubles as username).
  example: []
  syntax:
    content: >-
      [JsonProperty("emailAddress", Required = Required.Always)]

      [Required]

      public string EmailAddress { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("emailAddress", Required:=Required.Always)>

      <Required>

      Public Property EmailAddress As String
  overload: Picturepark.SDK.V1.Contract.UserWithRoles.EmailAddress*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: emailAddress
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Picturepark.SDK.V1.Contract.UserWithRoles.AuthorizationState
  commentId: P:Picturepark.SDK.V1.Contract.UserWithRoles.AuthorizationState
  id: AuthorizationState
  parent: Picturepark.SDK.V1.Contract.UserWithRoles
  langs:
  - csharp
  - vb
  name: AuthorizationState
  nameWithType: UserWithRoles.AuthorizationState
  fullName: Picturepark.SDK.V1.Contract.UserWithRoles.AuthorizationState
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: AuthorizationState
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 42538
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Authorization state the user is currently in.
  example: []
  syntax:
    content: >-
      [JsonProperty("authorizationState", Required = Required.Always)]

      [Required(AllowEmptyStrings = true)]

      [JsonConverter(typeof(StringEnumConverter))]

      public AuthorizationState AuthorizationState { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.Contract.AuthorizationState
    content.vb: >-
      <JsonProperty("authorizationState", Required:=Required.Always)>

      <Required(AllowEmptyStrings:=True)>

      <JsonConverter(GetType(StringEnumConverter))>

      Public Property AuthorizationState As AuthorizationState
  overload: Picturepark.SDK.V1.Contract.UserWithRoles.AuthorizationState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: authorizationState
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: AllowEmptyStrings
      type: System.Boolean
      value: true
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Newtonsoft.Json.Converters.StringEnumConverter
- uid: Picturepark.SDK.V1.Contract.UserWithRoles.LifeCycle
  commentId: P:Picturepark.SDK.V1.Contract.UserWithRoles.LifeCycle
  id: LifeCycle
  parent: Picturepark.SDK.V1.Contract.UserWithRoles
  langs:
  - csharp
  - vb
  name: LifeCycle
  nameWithType: UserWithRoles.LifeCycle
  fullName: Picturepark.SDK.V1.Contract.UserWithRoles.LifeCycle
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: LifeCycle
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 42546
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Life cycle state the user is currently in.
  example: []
  syntax:
    content: >-
      [JsonProperty("lifeCycle", Required = Required.Always)]

      [Required(AllowEmptyStrings = true)]

      [JsonConverter(typeof(StringEnumConverter))]

      public LifeCycle LifeCycle { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.Contract.LifeCycle
    content.vb: >-
      <JsonProperty("lifeCycle", Required:=Required.Always)>

      <Required(AllowEmptyStrings:=True)>

      <JsonConverter(GetType(StringEnumConverter))>

      Public Property LifeCycle As LifeCycle
  overload: Picturepark.SDK.V1.Contract.UserWithRoles.LifeCycle*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: lifeCycle
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: AllowEmptyStrings
      type: System.Boolean
      value: true
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Newtonsoft.Json.Converters.StringEnumConverter
- uid: Picturepark.SDK.V1.Contract.UserWithRoles.IsLocked
  commentId: P:Picturepark.SDK.V1.Contract.UserWithRoles.IsLocked
  id: IsLocked
  parent: Picturepark.SDK.V1.Contract.UserWithRoles
  langs:
  - csharp
  - vb
  name: IsLocked
  nameWithType: UserWithRoles.IsLocked
  fullName: Picturepark.SDK.V1.Contract.UserWithRoles.IsLocked
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: IsLocked
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 42554
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: A locked user is not allowed to log in.
  example: []
  syntax:
    content: >-
      [JsonProperty("isLocked", Required = Required.Always)]

      public bool IsLocked { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("isLocked", Required:=Required.Always)>

      Public Property IsLocked As Boolean
  overload: Picturepark.SDK.V1.Contract.UserWithRoles.IsLocked*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: isLocked
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
- uid: Picturepark.SDK.V1.Contract.UserWithRoles.IsSupportUser
  commentId: P:Picturepark.SDK.V1.Contract.UserWithRoles.IsSupportUser
  id: IsSupportUser
  parent: Picturepark.SDK.V1.Contract.UserWithRoles
  langs:
  - csharp
  - vb
  name: IsSupportUser
  nameWithType: UserWithRoles.IsSupportUser
  fullName: Picturepark.SDK.V1.Contract.UserWithRoles.IsSupportUser
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: IsSupportUser
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 42560
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: A support user is a user created for Picturepark support personnel.
  example: []
  syntax:
    content: >-
      [JsonProperty("isSupportUser", Required = Required.Always)]

      public bool IsSupportUser { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("isSupportUser", Required:=Required.Always)>

      Public Property IsSupportUser As Boolean
  overload: Picturepark.SDK.V1.Contract.UserWithRoles.IsSupportUser*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: isSupportUser
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
- uid: Picturepark.SDK.V1.Contract.UserWithRoles.IsReadOnly
  commentId: P:Picturepark.SDK.V1.Contract.UserWithRoles.IsReadOnly
  id: IsReadOnly
  parent: Picturepark.SDK.V1.Contract.UserWithRoles
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: UserWithRoles.IsReadOnly
  fullName: Picturepark.SDK.V1.Contract.UserWithRoles.IsReadOnly
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: IsReadOnly
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 42566
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Read-only users can't be removed from the system, e.g. service user.
  example: []
  syntax:
    content: >-
      [JsonProperty("isReadOnly", Required = Required.Always)]

      public bool IsReadOnly { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("isReadOnly", Required:=Required.Always)>

      Public Property IsReadOnly As Boolean
  overload: Picturepark.SDK.V1.Contract.UserWithRoles.IsReadOnly*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: isReadOnly
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
- uid: Picturepark.SDK.V1.Contract.UserWithRoles.IsFederated
  commentId: P:Picturepark.SDK.V1.Contract.UserWithRoles.IsFederated
  id: IsFederated
  parent: Picturepark.SDK.V1.Contract.UserWithRoles
  langs:
  - csharp
  - vb
  name: IsFederated
  nameWithType: UserWithRoles.IsFederated
  fullName: Picturepark.SDK.V1.Contract.UserWithRoles.IsFederated
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: IsFederated
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 42572
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Federated user is a user who is (currently) governed by an external identity provider.
  example: []
  syntax:
    content: >-
      [JsonProperty("isFederated", Required = Required.Always)]

      public bool IsFederated { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("isFederated", Required:=Required.Always)>

      Public Property IsFederated As Boolean
  overload: Picturepark.SDK.V1.Contract.UserWithRoles.IsFederated*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: isFederated
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
- uid: Picturepark.SDK.V1.Contract.UserWithRoles.IsAnonymousUser
  commentId: P:Picturepark.SDK.V1.Contract.UserWithRoles.IsAnonymousUser
  id: IsAnonymousUser
  parent: Picturepark.SDK.V1.Contract.UserWithRoles
  langs:
  - csharp
  - vb
  name: IsAnonymousUser
  nameWithType: UserWithRoles.IsAnonymousUser
  fullName: Picturepark.SDK.V1.Contract.UserWithRoles.IsAnonymousUser
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: IsAnonymousUser
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 42578
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Anonymous user is the automatically logged in user if public access is allowed.
  example: []
  syntax:
    content: >-
      [JsonProperty("isAnonymousUser", Required = Required.Always)]

      public bool IsAnonymousUser { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("isAnonymousUser", Required:=Required.Always)>

      Public Property IsAnonymousUser As Boolean
  overload: Picturepark.SDK.V1.Contract.UserWithRoles.IsAnonymousUser*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: isAnonymousUser
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
- uid: Picturepark.SDK.V1.Contract.UserWithRoles.LastActivity
  commentId: P:Picturepark.SDK.V1.Contract.UserWithRoles.LastActivity
  id: LastActivity
  parent: Picturepark.SDK.V1.Contract.UserWithRoles
  langs:
  - csharp
  - vb
  name: LastActivity
  nameWithType: UserWithRoles.LastActivity
  fullName: Picturepark.SDK.V1.Contract.UserWithRoles.LastActivity
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: LastActivity
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 42584
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Last activity of user.
  example: []
  syntax:
    content: >-
      [JsonProperty("lastActivity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public DateTime? LastActivity { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: >-
      <JsonProperty("lastActivity", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property LastActivity As Date?
  overload: Picturepark.SDK.V1.Contract.UserWithRoles.LastActivity*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: lastActivity
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.UserWithRoles.ToJson
  commentId: M:Picturepark.SDK.V1.Contract.UserWithRoles.ToJson
  id: ToJson
  parent: Picturepark.SDK.V1.Contract.UserWithRoles
  langs:
  - csharp
  - vb
  name: ToJson()
  nameWithType: UserWithRoles.ToJson()
  fullName: Picturepark.SDK.V1.Contract.UserWithRoles.ToJson()
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: ToJson
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 42587
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  syntax:
    content: public string ToJson()
    return:
      type: System.String
    content.vb: Public Function ToJson() As String
  overload: Picturepark.SDK.V1.Contract.UserWithRoles.ToJson*
- uid: Picturepark.SDK.V1.Contract.UserWithRoles.FromJson(System.String)
  commentId: M:Picturepark.SDK.V1.Contract.UserWithRoles.FromJson(System.String)
  id: FromJson(System.String)
  parent: Picturepark.SDK.V1.Contract.UserWithRoles
  langs:
  - csharp
  - vb
  name: FromJson(string)
  nameWithType: UserWithRoles.FromJson(string)
  fullName: Picturepark.SDK.V1.Contract.UserWithRoles.FromJson(string)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: FromJson
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 42593
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  syntax:
    content: public static UserWithRoles FromJson(string data)
    parameters:
    - id: data
      type: System.String
    return:
      type: Picturepark.SDK.V1.Contract.UserWithRoles
    content.vb: Public Shared Function FromJson(data As String) As UserWithRoles
  overload: Picturepark.SDK.V1.Contract.UserWithRoles.FromJson*
  nameWithType.vb: UserWithRoles.FromJson(String)
  fullName.vb: Picturepark.SDK.V1.Contract.UserWithRoles.FromJson(String)
  name.vb: FromJson(String)
references:
- uid: Picturepark.SDK.V1.Contract
  commentId: N:Picturepark.SDK.V1.Contract
  href: Picturepark.html
  name: Picturepark.SDK.V1.Contract
  nameWithType: Picturepark.SDK.V1.Contract
  fullName: Picturepark.SDK.V1.Contract
  spec.csharp:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.Contract
    name: Contract
    href: Picturepark.SDK.V1.Contract.html
  spec.vb:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.Contract
    name: Contract
    href: Picturepark.SDK.V1.Contract.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Picturepark.SDK.V1.Contract.UserWithRoles.UserRoleIds*
  commentId: Overload:Picturepark.SDK.V1.Contract.UserWithRoles.UserRoleIds
  href: Picturepark.SDK.V1.Contract.UserWithRoles.html#Picturepark_SDK_V1_Contract_UserWithRoles_UserRoleIds
  name: UserRoleIds
  nameWithType: UserWithRoles.UserRoleIds
  fullName: Picturepark.SDK.V1.Contract.UserWithRoles.UserRoleIds
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<string>
  nameWithType: ICollection<string>
  fullName: System.Collections.Generic.ICollection<string>
  nameWithType.vb: ICollection(Of String)
  fullName.vb: System.Collections.Generic.ICollection(Of String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Picturepark.SDK.V1.Contract.UserWithRoles.Id*
  commentId: Overload:Picturepark.SDK.V1.Contract.UserWithRoles.Id
  href: Picturepark.SDK.V1.Contract.UserWithRoles.html#Picturepark_SDK_V1_Contract_UserWithRoles_Id
  name: Id
  nameWithType: UserWithRoles.Id
  fullName: Picturepark.SDK.V1.Contract.UserWithRoles.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Picturepark.SDK.V1.Contract.UserWithRoles.FirstName*
  commentId: Overload:Picturepark.SDK.V1.Contract.UserWithRoles.FirstName
  href: Picturepark.SDK.V1.Contract.UserWithRoles.html#Picturepark_SDK_V1_Contract_UserWithRoles_FirstName
  name: FirstName
  nameWithType: UserWithRoles.FirstName
  fullName: Picturepark.SDK.V1.Contract.UserWithRoles.FirstName
- uid: Picturepark.SDK.V1.Contract.UserWithRoles.LastName*
  commentId: Overload:Picturepark.SDK.V1.Contract.UserWithRoles.LastName
  href: Picturepark.SDK.V1.Contract.UserWithRoles.html#Picturepark_SDK_V1_Contract_UserWithRoles_LastName
  name: LastName
  nameWithType: UserWithRoles.LastName
  fullName: Picturepark.SDK.V1.Contract.UserWithRoles.LastName
- uid: Picturepark.SDK.V1.Contract.UserWithRoles.EmailAddress*
  commentId: Overload:Picturepark.SDK.V1.Contract.UserWithRoles.EmailAddress
  href: Picturepark.SDK.V1.Contract.UserWithRoles.html#Picturepark_SDK_V1_Contract_UserWithRoles_EmailAddress
  name: EmailAddress
  nameWithType: UserWithRoles.EmailAddress
  fullName: Picturepark.SDK.V1.Contract.UserWithRoles.EmailAddress
- uid: Picturepark.SDK.V1.Contract.UserWithRoles.AuthorizationState*
  commentId: Overload:Picturepark.SDK.V1.Contract.UserWithRoles.AuthorizationState
  href: Picturepark.SDK.V1.Contract.UserWithRoles.html#Picturepark_SDK_V1_Contract_UserWithRoles_AuthorizationState
  name: AuthorizationState
  nameWithType: UserWithRoles.AuthorizationState
  fullName: Picturepark.SDK.V1.Contract.UserWithRoles.AuthorizationState
- uid: Picturepark.SDK.V1.Contract.AuthorizationState
  commentId: T:Picturepark.SDK.V1.Contract.AuthorizationState
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.AuthorizationState.html
  name: AuthorizationState
  nameWithType: AuthorizationState
  fullName: Picturepark.SDK.V1.Contract.AuthorizationState
- uid: Picturepark.SDK.V1.Contract.UserWithRoles.LifeCycle*
  commentId: Overload:Picturepark.SDK.V1.Contract.UserWithRoles.LifeCycle
  href: Picturepark.SDK.V1.Contract.UserWithRoles.html#Picturepark_SDK_V1_Contract_UserWithRoles_LifeCycle
  name: LifeCycle
  nameWithType: UserWithRoles.LifeCycle
  fullName: Picturepark.SDK.V1.Contract.UserWithRoles.LifeCycle
- uid: Picturepark.SDK.V1.Contract.LifeCycle
  commentId: T:Picturepark.SDK.V1.Contract.LifeCycle
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.LifeCycle.html
  name: LifeCycle
  nameWithType: LifeCycle
  fullName: Picturepark.SDK.V1.Contract.LifeCycle
- uid: Picturepark.SDK.V1.Contract.UserWithRoles.IsLocked*
  commentId: Overload:Picturepark.SDK.V1.Contract.UserWithRoles.IsLocked
  href: Picturepark.SDK.V1.Contract.UserWithRoles.html#Picturepark_SDK_V1_Contract_UserWithRoles_IsLocked
  name: IsLocked
  nameWithType: UserWithRoles.IsLocked
  fullName: Picturepark.SDK.V1.Contract.UserWithRoles.IsLocked
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Picturepark.SDK.V1.Contract.UserWithRoles.IsSupportUser*
  commentId: Overload:Picturepark.SDK.V1.Contract.UserWithRoles.IsSupportUser
  href: Picturepark.SDK.V1.Contract.UserWithRoles.html#Picturepark_SDK_V1_Contract_UserWithRoles_IsSupportUser
  name: IsSupportUser
  nameWithType: UserWithRoles.IsSupportUser
  fullName: Picturepark.SDK.V1.Contract.UserWithRoles.IsSupportUser
- uid: Picturepark.SDK.V1.Contract.UserWithRoles.IsReadOnly*
  commentId: Overload:Picturepark.SDK.V1.Contract.UserWithRoles.IsReadOnly
  href: Picturepark.SDK.V1.Contract.UserWithRoles.html#Picturepark_SDK_V1_Contract_UserWithRoles_IsReadOnly
  name: IsReadOnly
  nameWithType: UserWithRoles.IsReadOnly
  fullName: Picturepark.SDK.V1.Contract.UserWithRoles.IsReadOnly
- uid: Picturepark.SDK.V1.Contract.UserWithRoles.IsFederated*
  commentId: Overload:Picturepark.SDK.V1.Contract.UserWithRoles.IsFederated
  href: Picturepark.SDK.V1.Contract.UserWithRoles.html#Picturepark_SDK_V1_Contract_UserWithRoles_IsFederated
  name: IsFederated
  nameWithType: UserWithRoles.IsFederated
  fullName: Picturepark.SDK.V1.Contract.UserWithRoles.IsFederated
- uid: Picturepark.SDK.V1.Contract.UserWithRoles.IsAnonymousUser*
  commentId: Overload:Picturepark.SDK.V1.Contract.UserWithRoles.IsAnonymousUser
  href: Picturepark.SDK.V1.Contract.UserWithRoles.html#Picturepark_SDK_V1_Contract_UserWithRoles_IsAnonymousUser
  name: IsAnonymousUser
  nameWithType: UserWithRoles.IsAnonymousUser
  fullName: Picturepark.SDK.V1.Contract.UserWithRoles.IsAnonymousUser
- uid: Picturepark.SDK.V1.Contract.UserWithRoles.LastActivity*
  commentId: Overload:Picturepark.SDK.V1.Contract.UserWithRoles.LastActivity
  href: Picturepark.SDK.V1.Contract.UserWithRoles.html#Picturepark_SDK_V1_Contract_UserWithRoles_LastActivity
  name: LastActivity
  nameWithType: UserWithRoles.LastActivity
  fullName: Picturepark.SDK.V1.Contract.UserWithRoles.LastActivity
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime?
  nameWithType: DateTime?
  fullName: System.DateTime?
  nameWithType.vb: Date?
  fullName.vb: Date?
  name.vb: Date?
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
  spec.vb:
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Picturepark.SDK.V1.Contract.UserWithRoles.ToJson*
  commentId: Overload:Picturepark.SDK.V1.Contract.UserWithRoles.ToJson
  href: Picturepark.SDK.V1.Contract.UserWithRoles.html#Picturepark_SDK_V1_Contract_UserWithRoles_ToJson
  name: ToJson
  nameWithType: UserWithRoles.ToJson
  fullName: Picturepark.SDK.V1.Contract.UserWithRoles.ToJson
- uid: Picturepark.SDK.V1.Contract.UserWithRoles.FromJson*
  commentId: Overload:Picturepark.SDK.V1.Contract.UserWithRoles.FromJson
  href: Picturepark.SDK.V1.Contract.UserWithRoles.html#Picturepark_SDK_V1_Contract_UserWithRoles_FromJson_System_String_
  name: FromJson
  nameWithType: UserWithRoles.FromJson
  fullName: Picturepark.SDK.V1.Contract.UserWithRoles.FromJson
- uid: Picturepark.SDK.V1.Contract.UserWithRoles
  commentId: T:Picturepark.SDK.V1.Contract.UserWithRoles
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.UserWithRoles.html
  name: UserWithRoles
  nameWithType: UserWithRoles
  fullName: Picturepark.SDK.V1.Contract.UserWithRoles
