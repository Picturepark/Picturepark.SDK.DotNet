### YamlMime:ManagedReference
items:
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest
  commentId: T:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest
  id: CustomerImportRequest
  parent: Picturepark.SDK.V1.CloudManager.Contract
  children:
  - Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.AdminUserEmail
  - Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.AdminUserPassword
  - Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.BaseUrl
  - Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ContentBackupStorageSiloName
  - Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ContentDeliveryBaseUrl
  - Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.CorsAllowedHosts
  - Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.CustomerId
  - Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.FromJson(System.String)
  - Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.HostConfiguration
  - Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.RecreateSearchIndicesCluster
  - Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.RefillRecreatedSecondaryIndices
  - Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.RepositoryName
  - Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ResetExternalUserIds
  - Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ResetIdentityProviderIds
  - Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ResetServiceProviders
  - Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.SnapshotName
  - Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.StorageSiloName
  - Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ToJson
  langs:
  - csharp
  - vb
  name: CustomerImportRequest
  nameWithType: CustomerImportRequest
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest
  type: Class
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: CustomerImportRequest
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 15944
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: Request to import the ElasticSearch repository of a customer from another cloud
  example: []
  syntax:
    content: >-
      [GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]

      public class CustomerImportRequest
    content.vb: >-
      <GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")>

      Public Class CustomerImportRequest
  inheritance:
  - System.Object
  derivedClasses:
  - Picturepark.SDK.V1.CloudManager.Contract.CustomerImportAllClustersRequest
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.CodeDom.Compiler.GeneratedCodeAttribute
    ctor: System.CodeDom.Compiler.GeneratedCodeAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: NJsonSchema
    - type: System.String
      value: 13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.CustomerId
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.CustomerId
  id: CustomerId
  parent: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest
  langs:
  - csharp
  - vb
  name: CustomerId
  nameWithType: CustomerImportRequest.CustomerId
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.CustomerId
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: CustomerId
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 15950
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: The customer id
  example: []
  syntax:
    content: >-
      [JsonProperty("customerId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public string CustomerId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("customerId", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property CustomerId As String
  overload: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.CustomerId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: customerId
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.RepositoryName
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.RepositoryName
  id: RepositoryName
  parent: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest
  langs:
  - csharp
  - vb
  name: RepositoryName
  nameWithType: CustomerImportRequest.RepositoryName
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.RepositoryName
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: RepositoryName
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 15956
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: Name of the ElasticSearch repository
  example: []
  syntax:
    content: >-
      [JsonProperty("repositoryName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public string RepositoryName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("repositoryName", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property RepositoryName As String
  overload: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.RepositoryName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: repositoryName
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.SnapshotName
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.SnapshotName
  id: SnapshotName
  parent: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest
  langs:
  - csharp
  - vb
  name: SnapshotName
  nameWithType: CustomerImportRequest.SnapshotName
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.SnapshotName
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: SnapshotName
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 15962
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: Name of the snapshot within the ElasticSearch repository if available
  example: []
  syntax:
    content: >-
      [JsonProperty("snapshotName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public string SnapshotName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("snapshotName", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property SnapshotName As String
  overload: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.SnapshotName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: snapshotName
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ResetExternalUserIds
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ResetExternalUserIds
  id: ResetExternalUserIds
  parent: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest
  langs:
  - csharp
  - vb
  name: ResetExternalUserIds
  nameWithType: CustomerImportRequest.ResetExternalUserIds
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ResetExternalUserIds
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: ResetExternalUserIds
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 15968
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: Set to true if the customer was configured against another IDS instance
  example: []
  syntax:
    content: >-
      [JsonProperty("resetExternalUserIds", Required = Required.Always)]

      public bool ResetExternalUserIds { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("resetExternalUserIds", Required:=Required.Always)>

      Public Property ResetExternalUserIds As Boolean
  overload: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ResetExternalUserIds*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: resetExternalUserIds
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ResetIdentityProviderIds
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ResetIdentityProviderIds
  id: ResetIdentityProviderIds
  parent: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest
  langs:
  - csharp
  - vb
  name: ResetIdentityProviderIds
  nameWithType: CustomerImportRequest.ResetIdentityProviderIds
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ResetIdentityProviderIds
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: ResetIdentityProviderIds
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 15974
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: Set to true if the customer was configured against another IDS instance
  example: []
  syntax:
    content: >-
      [JsonProperty("resetIdentityProviderIds", Required = Required.Always)]

      public bool ResetIdentityProviderIds { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("resetIdentityProviderIds", Required:=Required.Always)>

      Public Property ResetIdentityProviderIds As Boolean
  overload: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ResetIdentityProviderIds*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: resetIdentityProviderIds
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.AdminUserEmail
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.AdminUserEmail
  id: AdminUserEmail
  parent: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest
  langs:
  - csharp
  - vb
  name: AdminUserEmail
  nameWithType: CustomerImportRequest.AdminUserEmail
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.AdminUserEmail
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: AdminUserEmail
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 15980
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: Provide email address of an admin user
  example: []
  syntax:
    content: >-
      [JsonProperty("adminUserEmail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public string AdminUserEmail { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("adminUserEmail", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property AdminUserEmail As String
  overload: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.AdminUserEmail*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: adminUserEmail
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.AdminUserPassword
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.AdminUserPassword
  id: AdminUserPassword
  parent: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest
  langs:
  - csharp
  - vb
  name: AdminUserPassword
  nameWithType: CustomerImportRequest.AdminUserPassword
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.AdminUserPassword
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: AdminUserPassword
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 15986
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: Provide password for the admin user
  example: []
  syntax:
    content: >-
      [JsonProperty("adminUserPassword", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public string AdminUserPassword { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("adminUserPassword", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property AdminUserPassword As String
  overload: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.AdminUserPassword*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: adminUserPassword
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ResetServiceProviders
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ResetServiceProviders
  id: ResetServiceProviders
  parent: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest
  langs:
  - csharp
  - vb
  name: ResetServiceProviders
  nameWithType: CustomerImportRequest.ResetServiceProviders
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ResetServiceProviders
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: ResetServiceProviders
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 15992
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: Reset service providers
  example: []
  syntax:
    content: >-
      [JsonProperty("resetServiceProviders", Required = Required.Always)]

      public bool ResetServiceProviders { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("resetServiceProviders", Required:=Required.Always)>

      Public Property ResetServiceProviders As Boolean
  overload: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ResetServiceProviders*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: resetServiceProviders
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.BaseUrl
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.BaseUrl
  id: BaseUrl
  parent: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest
  langs:
  - csharp
  - vb
  name: BaseUrl
  nameWithType: CustomerImportRequest.BaseUrl
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.BaseUrl
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: BaseUrl
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 15998
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: Base url for customer
  example: []
  syntax:
    content: >-
      [JsonProperty("baseUrl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public string BaseUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("baseUrl", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property BaseUrl As String
  overload: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.BaseUrl*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: baseUrl
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ContentDeliveryBaseUrl
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ContentDeliveryBaseUrl
  id: ContentDeliveryBaseUrl
  parent: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest
  langs:
  - csharp
  - vb
  name: ContentDeliveryBaseUrl
  nameWithType: CustomerImportRequest.ContentDeliveryBaseUrl
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ContentDeliveryBaseUrl
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: ContentDeliveryBaseUrl
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 16004
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: ContentDelivery Base url for shares
  example: []
  syntax:
    content: >-
      [JsonProperty("contentDeliveryBaseUrl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public string ContentDeliveryBaseUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("contentDeliveryBaseUrl", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property ContentDeliveryBaseUrl As String
  overload: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ContentDeliveryBaseUrl*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: contentDeliveryBaseUrl
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.HostConfiguration
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.HostConfiguration
  id: HostConfiguration
  parent: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest
  langs:
  - csharp
  - vb
  name: HostConfiguration
  nameWithType: CustomerImportRequest.HostConfiguration
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.HostConfiguration
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: HostConfiguration
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 16010
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: Host configuration
  example: []
  syntax:
    content: >-
      [JsonProperty("hostConfiguration", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public CustomerHostConfigurationCreation HostConfiguration { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.CloudManager.Contract.CustomerHostConfigurationCreation
    content.vb: >-
      <JsonProperty("hostConfiguration", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property HostConfiguration As CustomerHostConfigurationCreation
  overload: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.HostConfiguration*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: hostConfiguration
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.CorsAllowedHosts
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.CorsAllowedHosts
  id: CorsAllowedHosts
  parent: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest
  langs:
  - csharp
  - vb
  name: CorsAllowedHosts
  nameWithType: CustomerImportRequest.CorsAllowedHosts
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.CorsAllowedHosts
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: CorsAllowedHosts
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 16016
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: List of CORS allowed hosts
  example: []
  syntax:
    content: >-
      [JsonProperty("corsAllowedHosts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public ICollection<string> CorsAllowedHosts { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonProperty("corsAllowedHosts", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property CorsAllowedHosts As ICollection(Of String)
  overload: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.CorsAllowedHosts*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: corsAllowedHosts
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.RefillRecreatedSecondaryIndices
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.RefillRecreatedSecondaryIndices
  id: RefillRecreatedSecondaryIndices
  parent: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest
  langs:
  - csharp
  - vb
  name: RefillRecreatedSecondaryIndices
  nameWithType: CustomerImportRequest.RefillRecreatedSecondaryIndices
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.RefillRecreatedSecondaryIndices
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: RefillRecreatedSecondaryIndices
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 16022
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: Defines whether secondary indices which are missing for customer are filled or left empty
  example: []
  syntax:
    content: >-
      [JsonProperty("refillRecreatedSecondaryIndices", Required = Required.Always)]

      public bool RefillRecreatedSecondaryIndices { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("refillRecreatedSecondaryIndices", Required:=Required.Always)>

      Public Property RefillRecreatedSecondaryIndices As Boolean
  overload: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.RefillRecreatedSecondaryIndices*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: refillRecreatedSecondaryIndices
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.RecreateSearchIndicesCluster
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.RecreateSearchIndicesCluster
  id: RecreateSearchIndicesCluster
  parent: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest
  langs:
  - csharp
  - vb
  name: RecreateSearchIndicesCluster
  nameWithType: CustomerImportRequest.RecreateSearchIndicesCluster
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.RecreateSearchIndicesCluster
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: RecreateSearchIndicesCluster
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 16029
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: >-
    Defines where searchIndices are recreated if they did not exist (not part of restored snapshot, for example)

    <br />If null, searchIndices will be recreated on the cluster they were on when the snapshot was taken (or, if that cluster does not exist, on the default)
  example: []
  syntax:
    content: >-
      [JsonProperty("recreateSearchIndicesCluster", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public string RecreateSearchIndicesCluster { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("recreateSearchIndicesCluster", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property RecreateSearchIndicesCluster As String
  overload: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.RecreateSearchIndicesCluster*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: recreateSearchIndicesCluster
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.StorageSiloName
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.StorageSiloName
  id: StorageSiloName
  parent: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest
  langs:
  - csharp
  - vb
  name: StorageSiloName
  nameWithType: CustomerImportRequest.StorageSiloName
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.StorageSiloName
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: StorageSiloName
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 16035
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: Name of the storage silo where customer's files are located. Must be configured in cloud.
  example: []
  syntax:
    content: >-
      [JsonProperty("storageSiloName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public string StorageSiloName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("storageSiloName", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property StorageSiloName As String
  overload: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.StorageSiloName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: storageSiloName
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ContentBackupStorageSiloName
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ContentBackupStorageSiloName
  id: ContentBackupStorageSiloName
  parent: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest
  langs:
  - csharp
  - vb
  name: ContentBackupStorageSiloName
  nameWithType: CustomerImportRequest.ContentBackupStorageSiloName
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ContentBackupStorageSiloName
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: ContentBackupStorageSiloName
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 16042
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: >-
    Optional name of the storage silo where customer's content backup is written to. Must be configured in cloud.

    <br />If not set, default configured in cloud will be used.
  example: []
  syntax:
    content: >-
      [JsonProperty("contentBackupStorageSiloName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public string ContentBackupStorageSiloName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("contentBackupStorageSiloName", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property ContentBackupStorageSiloName As String
  overload: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ContentBackupStorageSiloName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: contentBackupStorageSiloName
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ToJson
  commentId: M:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ToJson
  id: ToJson
  parent: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest
  langs:
  - csharp
  - vb
  name: ToJson()
  nameWithType: CustomerImportRequest.ToJson()
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ToJson()
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: ToJson
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 16045
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  syntax:
    content: public string ToJson()
    return:
      type: System.String
    content.vb: Public Function ToJson() As String
  overload: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ToJson*
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.FromJson(System.String)
  commentId: M:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.FromJson(System.String)
  id: FromJson(System.String)
  parent: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest
  langs:
  - csharp
  - vb
  name: FromJson(string)
  nameWithType: CustomerImportRequest.FromJson(string)
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.FromJson(string)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: FromJson
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 16051
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  syntax:
    content: public static CustomerImportRequest FromJson(string data)
    parameters:
    - id: data
      type: System.String
    return:
      type: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest
    content.vb: Public Shared Function FromJson(data As String) As CustomerImportRequest
  overload: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.FromJson*
  nameWithType.vb: CustomerImportRequest.FromJson(String)
  fullName.vb: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.FromJson(String)
  name.vb: FromJson(String)
references:
- uid: Picturepark.SDK.V1.CloudManager.Contract
  commentId: N:Picturepark.SDK.V1.CloudManager.Contract
  href: Picturepark.html
  name: Picturepark.SDK.V1.CloudManager.Contract
  nameWithType: Picturepark.SDK.V1.CloudManager.Contract
  fullName: Picturepark.SDK.V1.CloudManager.Contract
  spec.csharp:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.CloudManager
    name: CloudManager
    href: Picturepark.SDK.V1.CloudManager.html
  - name: .
  - uid: Picturepark.SDK.V1.CloudManager.Contract
    name: Contract
    href: Picturepark.SDK.V1.CloudManager.Contract.html
  spec.vb:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.CloudManager
    name: CloudManager
    href: Picturepark.SDK.V1.CloudManager.html
  - name: .
  - uid: Picturepark.SDK.V1.CloudManager.Contract
    name: Contract
    href: Picturepark.SDK.V1.CloudManager.Contract.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.CustomerId*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.CustomerId
  href: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.html#Picturepark_SDK_V1_CloudManager_Contract_CustomerImportRequest_CustomerId
  name: CustomerId
  nameWithType: CustomerImportRequest.CustomerId
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.CustomerId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.RepositoryName*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.RepositoryName
  href: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.html#Picturepark_SDK_V1_CloudManager_Contract_CustomerImportRequest_RepositoryName
  name: RepositoryName
  nameWithType: CustomerImportRequest.RepositoryName
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.RepositoryName
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.SnapshotName*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.SnapshotName
  href: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.html#Picturepark_SDK_V1_CloudManager_Contract_CustomerImportRequest_SnapshotName
  name: SnapshotName
  nameWithType: CustomerImportRequest.SnapshotName
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.SnapshotName
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ResetExternalUserIds*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ResetExternalUserIds
  href: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.html#Picturepark_SDK_V1_CloudManager_Contract_CustomerImportRequest_ResetExternalUserIds
  name: ResetExternalUserIds
  nameWithType: CustomerImportRequest.ResetExternalUserIds
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ResetExternalUserIds
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ResetIdentityProviderIds*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ResetIdentityProviderIds
  href: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.html#Picturepark_SDK_V1_CloudManager_Contract_CustomerImportRequest_ResetIdentityProviderIds
  name: ResetIdentityProviderIds
  nameWithType: CustomerImportRequest.ResetIdentityProviderIds
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ResetIdentityProviderIds
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.AdminUserEmail*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.AdminUserEmail
  href: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.html#Picturepark_SDK_V1_CloudManager_Contract_CustomerImportRequest_AdminUserEmail
  name: AdminUserEmail
  nameWithType: CustomerImportRequest.AdminUserEmail
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.AdminUserEmail
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.AdminUserPassword*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.AdminUserPassword
  href: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.html#Picturepark_SDK_V1_CloudManager_Contract_CustomerImportRequest_AdminUserPassword
  name: AdminUserPassword
  nameWithType: CustomerImportRequest.AdminUserPassword
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.AdminUserPassword
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ResetServiceProviders*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ResetServiceProviders
  href: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.html#Picturepark_SDK_V1_CloudManager_Contract_CustomerImportRequest_ResetServiceProviders
  name: ResetServiceProviders
  nameWithType: CustomerImportRequest.ResetServiceProviders
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ResetServiceProviders
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.BaseUrl*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.BaseUrl
  href: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.html#Picturepark_SDK_V1_CloudManager_Contract_CustomerImportRequest_BaseUrl
  name: BaseUrl
  nameWithType: CustomerImportRequest.BaseUrl
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.BaseUrl
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ContentDeliveryBaseUrl*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ContentDeliveryBaseUrl
  href: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.html#Picturepark_SDK_V1_CloudManager_Contract_CustomerImportRequest_ContentDeliveryBaseUrl
  name: ContentDeliveryBaseUrl
  nameWithType: CustomerImportRequest.ContentDeliveryBaseUrl
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ContentDeliveryBaseUrl
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.HostConfiguration*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.HostConfiguration
  href: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.html#Picturepark_SDK_V1_CloudManager_Contract_CustomerImportRequest_HostConfiguration
  name: HostConfiguration
  nameWithType: CustomerImportRequest.HostConfiguration
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.HostConfiguration
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerHostConfigurationCreation
  commentId: T:Picturepark.SDK.V1.CloudManager.Contract.CustomerHostConfigurationCreation
  parent: Picturepark.SDK.V1.CloudManager.Contract
  href: Picturepark.SDK.V1.CloudManager.Contract.CustomerHostConfigurationCreation.html
  name: CustomerHostConfigurationCreation
  nameWithType: CustomerHostConfigurationCreation
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerHostConfigurationCreation
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.CorsAllowedHosts*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.CorsAllowedHosts
  href: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.html#Picturepark_SDK_V1_CloudManager_Contract_CustomerImportRequest_CorsAllowedHosts
  name: CorsAllowedHosts
  nameWithType: CustomerImportRequest.CorsAllowedHosts
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.CorsAllowedHosts
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<string>
  nameWithType: ICollection<string>
  fullName: System.Collections.Generic.ICollection<string>
  nameWithType.vb: ICollection(Of String)
  fullName.vb: System.Collections.Generic.ICollection(Of String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.RefillRecreatedSecondaryIndices*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.RefillRecreatedSecondaryIndices
  href: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.html#Picturepark_SDK_V1_CloudManager_Contract_CustomerImportRequest_RefillRecreatedSecondaryIndices
  name: RefillRecreatedSecondaryIndices
  nameWithType: CustomerImportRequest.RefillRecreatedSecondaryIndices
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.RefillRecreatedSecondaryIndices
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.RecreateSearchIndicesCluster*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.RecreateSearchIndicesCluster
  href: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.html#Picturepark_SDK_V1_CloudManager_Contract_CustomerImportRequest_RecreateSearchIndicesCluster
  name: RecreateSearchIndicesCluster
  nameWithType: CustomerImportRequest.RecreateSearchIndicesCluster
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.RecreateSearchIndicesCluster
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.StorageSiloName*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.StorageSiloName
  href: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.html#Picturepark_SDK_V1_CloudManager_Contract_CustomerImportRequest_StorageSiloName
  name: StorageSiloName
  nameWithType: CustomerImportRequest.StorageSiloName
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.StorageSiloName
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ContentBackupStorageSiloName*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ContentBackupStorageSiloName
  href: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.html#Picturepark_SDK_V1_CloudManager_Contract_CustomerImportRequest_ContentBackupStorageSiloName
  name: ContentBackupStorageSiloName
  nameWithType: CustomerImportRequest.ContentBackupStorageSiloName
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ContentBackupStorageSiloName
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ToJson*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ToJson
  href: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.html#Picturepark_SDK_V1_CloudManager_Contract_CustomerImportRequest_ToJson
  name: ToJson
  nameWithType: CustomerImportRequest.ToJson
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.ToJson
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.FromJson*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.FromJson
  href: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.html#Picturepark_SDK_V1_CloudManager_Contract_CustomerImportRequest_FromJson_System_String_
  name: FromJson
  nameWithType: CustomerImportRequest.FromJson
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.FromJson
- uid: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest
  commentId: T:Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest
  parent: Picturepark.SDK.V1.CloudManager.Contract
  href: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest.html
  name: CustomerImportRequest
  nameWithType: CustomerImportRequest
  fullName: Picturepark.SDK.V1.CloudManager.Contract.CustomerImportRequest
