### YamlMime:ManagedReference
items:
- uid: Priority_Queue.FastPriorityQueue`1
  commentId: T:Priority_Queue.FastPriorityQueue`1
  id: FastPriorityQueue`1
  parent: Priority_Queue
  children:
  - Priority_Queue.FastPriorityQueue`1.#ctor(System.Int32)
  - Priority_Queue.FastPriorityQueue`1.Clear
  - Priority_Queue.FastPriorityQueue`1.Contains(`0)
  - Priority_Queue.FastPriorityQueue`1.Count
  - Priority_Queue.FastPriorityQueue`1.Dequeue
  - Priority_Queue.FastPriorityQueue`1.Enqueue(`0,System.Single)
  - Priority_Queue.FastPriorityQueue`1.First
  - Priority_Queue.FastPriorityQueue`1.GetEnumerator
  - Priority_Queue.FastPriorityQueue`1.IsValidQueue
  - Priority_Queue.FastPriorityQueue`1.MaxSize
  - Priority_Queue.FastPriorityQueue`1.Remove(`0)
  - Priority_Queue.FastPriorityQueue`1.Resize(System.Int32)
  - Priority_Queue.FastPriorityQueue`1.UpdatePriority(`0,System.Single)
  langs:
  - csharp
  - vb
  name: FastPriorityQueue<T>
  nameWithType: FastPriorityQueue<T>
  fullName: Priority_Queue.FastPriorityQueue<T>
  type: Class
  source:
    remote:
      path: src/Picturepark.SDK.V1.ServiceProvider/OptimizedPriorityQueue/FastPriorityQueue.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: FastPriorityQueue
    path: ../../src/Picturepark.SDK.V1.ServiceProvider/OptimizedPriorityQueue/FastPriorityQueue.cs
    startLine: 13
  assemblies:
  - Picturepark.SDK.V1.ServiceProvider
  namespace: Priority_Queue
  summary: >-
    An implementation of a min-Priority Queue using a heap.  Has O(1) .Contains()!

    See https://github.com/BlueRaja/High-Speed-Priority-Queue-for-C-Sharp/wiki/Getting-Started for more information
  example: []
  syntax:
    content: 'public sealed class FastPriorityQueue<T> : IPriorityQueue<T, float>, IEnumerable<T>, IEnumerable where T : FastPriorityQueueNode'
    typeParameters:
    - id: T
      description: The values in the queue.  Must extend the FastPriorityQueueNode class
    content.vb: Public NotInheritable Class FastPriorityQueue(Of T As FastPriorityQueueNode) Implements IPriorityQueue(Of T, Single), IEnumerable(Of T), IEnumerable
  inheritance:
  - System.Object
  implements:
  - Priority_Queue.IPriorityQueue{{T},System.Single}
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: FastPriorityQueue(Of T)
  fullName.vb: Priority_Queue.FastPriorityQueue(Of T)
  name.vb: FastPriorityQueue(Of T)
- uid: Priority_Queue.FastPriorityQueue`1.#ctor(System.Int32)
  commentId: M:Priority_Queue.FastPriorityQueue`1.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Priority_Queue.FastPriorityQueue`1
  langs:
  - csharp
  - vb
  name: FastPriorityQueue(int)
  nameWithType: FastPriorityQueue<T>.FastPriorityQueue(int)
  fullName: Priority_Queue.FastPriorityQueue<T>.FastPriorityQueue(int)
  type: Constructor
  source:
    remote:
      path: src/Picturepark.SDK.V1.ServiceProvider/OptimizedPriorityQueue/FastPriorityQueue.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: .ctor
    path: ../../src/Picturepark.SDK.V1.ServiceProvider/OptimizedPriorityQueue/FastPriorityQueue.cs
    startLine: 23
  assemblies:
  - Picturepark.SDK.V1.ServiceProvider
  namespace: Priority_Queue
  summary: Instantiate a new Priority Queue
  example: []
  syntax:
    content: public FastPriorityQueue(int maxNodes)
    parameters:
    - id: maxNodes
      type: System.Int32
      description: The max nodes ever allowed to be enqueued (going over this will cause undefined behavior)
    content.vb: Public Sub New(maxNodes As Integer)
  overload: Priority_Queue.FastPriorityQueue`1.#ctor*
  nameWithType.vb: FastPriorityQueue(Of T).New(Integer)
  fullName.vb: Priority_Queue.FastPriorityQueue(Of T).New(Integer)
  name.vb: New(Integer)
- uid: Priority_Queue.FastPriorityQueue`1.Count
  commentId: P:Priority_Queue.FastPriorityQueue`1.Count
  id: Count
  parent: Priority_Queue.FastPriorityQueue`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: FastPriorityQueue<T>.Count
  fullName: Priority_Queue.FastPriorityQueue<T>.Count
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.ServiceProvider/OptimizedPriorityQueue/FastPriorityQueue.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Count
    path: ../../src/Picturepark.SDK.V1.ServiceProvider/OptimizedPriorityQueue/FastPriorityQueue.cs
    startLine: 40
  assemblies:
  - Picturepark.SDK.V1.ServiceProvider
  namespace: Priority_Queue
  summary: >-
    Returns the number of nodes in the queue.

    O(1)
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Priority_Queue.FastPriorityQueue`1.Count*
  implements:
  - Priority_Queue.IPriorityQueue{{T},System.Single}.Count
  nameWithType.vb: FastPriorityQueue(Of T).Count
  fullName.vb: Priority_Queue.FastPriorityQueue(Of T).Count
- uid: Priority_Queue.FastPriorityQueue`1.MaxSize
  commentId: P:Priority_Queue.FastPriorityQueue`1.MaxSize
  id: MaxSize
  parent: Priority_Queue.FastPriorityQueue`1
  langs:
  - csharp
  - vb
  name: MaxSize
  nameWithType: FastPriorityQueue<T>.MaxSize
  fullName: Priority_Queue.FastPriorityQueue<T>.MaxSize
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.ServiceProvider/OptimizedPriorityQueue/FastPriorityQueue.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: MaxSize
    path: ../../src/Picturepark.SDK.V1.ServiceProvider/OptimizedPriorityQueue/FastPriorityQueue.cs
    startLine: 52
  assemblies:
  - Picturepark.SDK.V1.ServiceProvider
  namespace: Priority_Queue
  summary: >-
    Returns the maximum number of items that can be enqueued at once in this queue.  Once you hit this number (ie. once Count == MaxSize),

    attempting to enqueue another item will cause undefined behavior.  O(1)
  example: []
  syntax:
    content: public int MaxSize { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property MaxSize As Integer
  overload: Priority_Queue.FastPriorityQueue`1.MaxSize*
  nameWithType.vb: FastPriorityQueue(Of T).MaxSize
  fullName.vb: Priority_Queue.FastPriorityQueue(Of T).MaxSize
- uid: Priority_Queue.FastPriorityQueue`1.Clear
  commentId: M:Priority_Queue.FastPriorityQueue`1.Clear
  id: Clear
  parent: Priority_Queue.FastPriorityQueue`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: FastPriorityQueue<T>.Clear()
  fullName: Priority_Queue.FastPriorityQueue<T>.Clear()
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.ServiceProvider/OptimizedPriorityQueue/FastPriorityQueue.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Clear
    path: ../../src/Picturepark.SDK.V1.ServiceProvider/OptimizedPriorityQueue/FastPriorityQueue.cs
    startLine: 67
  assemblies:
  - Picturepark.SDK.V1.ServiceProvider
  namespace: Priority_Queue
  summary: >-
    Removes every node from the queue.

    O(n) (So, don't do this often!)
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: Priority_Queue.FastPriorityQueue`1.Clear*
  implements:
  - Priority_Queue.IPriorityQueue{{T},System.Single}.Clear
  nameWithType.vb: FastPriorityQueue(Of T).Clear()
  fullName.vb: Priority_Queue.FastPriorityQueue(Of T).Clear()
- uid: Priority_Queue.FastPriorityQueue`1.Contains(`0)
  commentId: M:Priority_Queue.FastPriorityQueue`1.Contains(`0)
  id: Contains(`0)
  parent: Priority_Queue.FastPriorityQueue`1
  langs:
  - csharp
  - vb
  name: Contains(T)
  nameWithType: FastPriorityQueue<T>.Contains(T)
  fullName: Priority_Queue.FastPriorityQueue<T>.Contains(T)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.ServiceProvider/OptimizedPriorityQueue/FastPriorityQueue.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Contains
    path: ../../src/Picturepark.SDK.V1.ServiceProvider/OptimizedPriorityQueue/FastPriorityQueue.cs
    startLine: 79
  assemblies:
  - Picturepark.SDK.V1.ServiceProvider
  namespace: Priority_Queue
  summary: Returns (in O(1)!) whether the given node is in the queue.  O(1)
  example: []
  syntax:
    content: public bool Contains(T node)
    parameters:
    - id: node
      type: '{T}'
    return:
      type: System.Boolean
    content.vb: Public Function Contains(node As T) As Boolean
  overload: Priority_Queue.FastPriorityQueue`1.Contains*
  implements:
  - Priority_Queue.IPriorityQueue{{T},System.Single}.Contains({T})
  nameWithType.vb: FastPriorityQueue(Of T).Contains(T)
  fullName.vb: Priority_Queue.FastPriorityQueue(Of T).Contains(T)
- uid: Priority_Queue.FastPriorityQueue`1.Enqueue(`0,System.Single)
  commentId: M:Priority_Queue.FastPriorityQueue`1.Enqueue(`0,System.Single)
  id: Enqueue(`0,System.Single)
  parent: Priority_Queue.FastPriorityQueue`1
  langs:
  - csharp
  - vb
  name: Enqueue(T, float)
  nameWithType: FastPriorityQueue<T>.Enqueue(T, float)
  fullName: Priority_Queue.FastPriorityQueue<T>.Enqueue(T, float)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.ServiceProvider/OptimizedPriorityQueue/FastPriorityQueue.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Enqueue
    path: ../../src/Picturepark.SDK.V1.ServiceProvider/OptimizedPriorityQueue/FastPriorityQueue.cs
    startLine: 104
  assemblies:
  - Picturepark.SDK.V1.ServiceProvider
  namespace: Priority_Queue
  summary: >-
    Enqueue a node to the priority queue.  Lower values are placed in front. Ties are broken by first-in-first-out.

    If the queue is full, the result is undefined.

    If the node is already enqueued, the result is undefined.

    O(log n)
  example: []
  syntax:
    content: public void Enqueue(T node, float priority)
    parameters:
    - id: node
      type: '{T}'
    - id: priority
      type: System.Single
    content.vb: Public Sub Enqueue(node As T, priority As Single)
  overload: Priority_Queue.FastPriorityQueue`1.Enqueue*
  implements:
  - Priority_Queue.IPriorityQueue{{T},System.Single}.Enqueue({T},System.Single)
  nameWithType.vb: FastPriorityQueue(Of T).Enqueue(T, Single)
  fullName.vb: Priority_Queue.FastPriorityQueue(Of T).Enqueue(T, Single)
  name.vb: Enqueue(T, Single)
- uid: Priority_Queue.FastPriorityQueue`1.Dequeue
  commentId: M:Priority_Queue.FastPriorityQueue`1.Dequeue
  id: Dequeue
  parent: Priority_Queue.FastPriorityQueue`1
  langs:
  - csharp
  - vb
  name: Dequeue()
  nameWithType: FastPriorityQueue<T>.Dequeue()
  fullName: Priority_Queue.FastPriorityQueue<T>.Dequeue()
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.ServiceProvider/OptimizedPriorityQueue/FastPriorityQueue.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Dequeue
    path: ../../src/Picturepark.SDK.V1.ServiceProvider/OptimizedPriorityQueue/FastPriorityQueue.cs
    startLine: 238
  assemblies:
  - Picturepark.SDK.V1.ServiceProvider
  namespace: Priority_Queue
  summary: >-
    Removes the head of the queue and returns it.

    If queue is empty, result is undefined

    O(log n)
  example: []
  syntax:
    content: public T Dequeue()
    return:
      type: '{T}'
    content.vb: Public Function Dequeue() As T
  overload: Priority_Queue.FastPriorityQueue`1.Dequeue*
  implements:
  - Priority_Queue.IPriorityQueue{{T},System.Single}.Dequeue
  nameWithType.vb: FastPriorityQueue(Of T).Dequeue()
  fullName.vb: Priority_Queue.FastPriorityQueue(Of T).Dequeue()
- uid: Priority_Queue.FastPriorityQueue`1.Resize(System.Int32)
  commentId: M:Priority_Queue.FastPriorityQueue`1.Resize(System.Int32)
  id: Resize(System.Int32)
  parent: Priority_Queue.FastPriorityQueue`1
  langs:
  - csharp
  - vb
  name: Resize(int)
  nameWithType: FastPriorityQueue<T>.Resize(int)
  fullName: Priority_Queue.FastPriorityQueue<T>.Resize(int)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.ServiceProvider/OptimizedPriorityQueue/FastPriorityQueue.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Resize
    path: ../../src/Picturepark.SDK.V1.ServiceProvider/OptimizedPriorityQueue/FastPriorityQueue.cs
    startLine: 263
  assemblies:
  - Picturepark.SDK.V1.ServiceProvider
  namespace: Priority_Queue
  summary: >-
    Resize the queue so it can accept more nodes.  All currently enqueued nodes are remain.

    Attempting to decrease the queue size to a size too small to hold the existing nodes results in undefined behavior

    O(n)
  example: []
  syntax:
    content: public void Resize(int maxNodes)
    parameters:
    - id: maxNodes
      type: System.Int32
    content.vb: Public Sub Resize(maxNodes As Integer)
  overload: Priority_Queue.FastPriorityQueue`1.Resize*
  nameWithType.vb: FastPriorityQueue(Of T).Resize(Integer)
  fullName.vb: Priority_Queue.FastPriorityQueue(Of T).Resize(Integer)
  name.vb: Resize(Integer)
- uid: Priority_Queue.FastPriorityQueue`1.First
  commentId: P:Priority_Queue.FastPriorityQueue`1.First
  id: First
  parent: Priority_Queue.FastPriorityQueue`1
  langs:
  - csharp
  - vb
  name: First
  nameWithType: FastPriorityQueue<T>.First
  fullName: Priority_Queue.FastPriorityQueue<T>.First
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.ServiceProvider/OptimizedPriorityQueue/FastPriorityQueue.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: First
    path: ../../src/Picturepark.SDK.V1.ServiceProvider/OptimizedPriorityQueue/FastPriorityQueue.cs
    startLine: 291
  assemblies:
  - Picturepark.SDK.V1.ServiceProvider
  namespace: Priority_Queue
  summary: >-
    Returns the head of the queue, without removing it (use Dequeue() for that).

    If the queue is empty, behavior is undefined.

    O(1)
  example: []
  syntax:
    content: public T First { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public ReadOnly Property First As T
  overload: Priority_Queue.FastPriorityQueue`1.First*
  implements:
  - Priority_Queue.IPriorityQueue{{T},System.Single}.First
  nameWithType.vb: FastPriorityQueue(Of T).First
  fullName.vb: Priority_Queue.FastPriorityQueue(Of T).First
- uid: Priority_Queue.FastPriorityQueue`1.UpdatePriority(`0,System.Single)
  commentId: M:Priority_Queue.FastPriorityQueue`1.UpdatePriority(`0,System.Single)
  id: UpdatePriority(`0,System.Single)
  parent: Priority_Queue.FastPriorityQueue`1
  langs:
  - csharp
  - vb
  name: UpdatePriority(T, float)
  nameWithType: FastPriorityQueue<T>.UpdatePriority(T, float)
  fullName: Priority_Queue.FastPriorityQueue<T>.UpdatePriority(T, float)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.ServiceProvider/OptimizedPriorityQueue/FastPriorityQueue.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: UpdatePriority
    path: ../../src/Picturepark.SDK.V1.ServiceProvider/OptimizedPriorityQueue/FastPriorityQueue.cs
    startLine: 315
  assemblies:
  - Picturepark.SDK.V1.ServiceProvider
  namespace: Priority_Queue
  summary: >-
    This method must be called on a node every time its priority changes while it is in the queue.  

    <b>Forgetting to call this method will result in a corrupted queue!</b>

    Calling this method on a node not in the queue results in undefined behavior

    O(log n)
  example: []
  syntax:
    content: public void UpdatePriority(T node, float priority)
    parameters:
    - id: node
      type: '{T}'
    - id: priority
      type: System.Single
    content.vb: Public Sub UpdatePriority(node As T, priority As Single)
  overload: Priority_Queue.FastPriorityQueue`1.UpdatePriority*
  implements:
  - Priority_Queue.IPriorityQueue{{T},System.Single}.UpdatePriority({T},System.Single)
  nameWithType.vb: FastPriorityQueue(Of T).UpdatePriority(T, Single)
  fullName.vb: Priority_Queue.FastPriorityQueue(Of T).UpdatePriority(T, Single)
  name.vb: UpdatePriority(T, Single)
- uid: Priority_Queue.FastPriorityQueue`1.Remove(`0)
  commentId: M:Priority_Queue.FastPriorityQueue`1.Remove(`0)
  id: Remove(`0)
  parent: Priority_Queue.FastPriorityQueue`1
  langs:
  - csharp
  - vb
  name: Remove(T)
  nameWithType: FastPriorityQueue<T>.Remove(T)
  fullName: Priority_Queue.FastPriorityQueue<T>.Remove(T)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.ServiceProvider/OptimizedPriorityQueue/FastPriorityQueue.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Remove
    path: ../../src/Picturepark.SDK.V1.ServiceProvider/OptimizedPriorityQueue/FastPriorityQueue.cs
    startLine: 354
  assemblies:
  - Picturepark.SDK.V1.ServiceProvider
  namespace: Priority_Queue
  summary: >-
    Removes a node from the queue.  The node does not need to be the head of the queue.  

    If the node is not in the queue, the result is undefined.  If unsure, check Contains() first

    O(log n)
  example: []
  syntax:
    content: public void Remove(T node)
    parameters:
    - id: node
      type: '{T}'
    content.vb: Public Sub Remove(node As T)
  overload: Priority_Queue.FastPriorityQueue`1.Remove*
  implements:
  - Priority_Queue.IPriorityQueue{{T},System.Single}.Remove({T})
  nameWithType.vb: FastPriorityQueue(Of T).Remove(T)
  fullName.vb: Priority_Queue.FastPriorityQueue(Of T).Remove(T)
- uid: Priority_Queue.FastPriorityQueue`1.GetEnumerator
  commentId: M:Priority_Queue.FastPriorityQueue`1.GetEnumerator
  id: GetEnumerator
  parent: Priority_Queue.FastPriorityQueue`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: FastPriorityQueue<T>.GetEnumerator()
  fullName: Priority_Queue.FastPriorityQueue<T>.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.ServiceProvider/OptimizedPriorityQueue/FastPriorityQueue.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: GetEnumerator
    path: ../../src/Picturepark.SDK.V1.ServiceProvider/OptimizedPriorityQueue/FastPriorityQueue.cs
    startLine: 385
  assemblies:
  - Picturepark.SDK.V1.ServiceProvider
  namespace: Priority_Queue
  example: []
  syntax:
    content: public IEnumerator<T> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
    content.vb: Public Function GetEnumerator() As IEnumerator(Of T)
  overload: Priority_Queue.FastPriorityQueue`1.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  nameWithType.vb: FastPriorityQueue(Of T).GetEnumerator()
  fullName.vb: Priority_Queue.FastPriorityQueue(Of T).GetEnumerator()
- uid: Priority_Queue.FastPriorityQueue`1.IsValidQueue
  commentId: M:Priority_Queue.FastPriorityQueue`1.IsValidQueue
  id: IsValidQueue
  parent: Priority_Queue.FastPriorityQueue`1
  langs:
  - csharp
  - vb
  name: IsValidQueue()
  nameWithType: FastPriorityQueue<T>.IsValidQueue()
  fullName: Priority_Queue.FastPriorityQueue<T>.IsValidQueue()
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.ServiceProvider/OptimizedPriorityQueue/FastPriorityQueue.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: IsValidQueue
    path: ../../src/Picturepark.SDK.V1.ServiceProvider/OptimizedPriorityQueue/FastPriorityQueue.cs
    startLine: 400
  assemblies:
  - Picturepark.SDK.V1.ServiceProvider
  namespace: Priority_Queue
  summary: >-
    <b>Should not be called in production code.</b>

    Checks to make sure the queue is still in a valid state.  Used for testing/debugging the queue.
  example: []
  syntax:
    content: public bool IsValidQueue()
    return:
      type: System.Boolean
    content.vb: Public Function IsValidQueue() As Boolean
  overload: Priority_Queue.FastPriorityQueue`1.IsValidQueue*
  nameWithType.vb: FastPriorityQueue(Of T).IsValidQueue()
  fullName.vb: Priority_Queue.FastPriorityQueue(Of T).IsValidQueue()
references:
- uid: Priority_Queue
  commentId: N:Priority_Queue
  href: Priority_Queue.html
  name: Priority_Queue
  nameWithType: Priority_Queue
  fullName: Priority_Queue
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Priority_Queue.IPriorityQueue{{T},System.Single}
  commentId: T:Priority_Queue.IPriorityQueue{`0,System.Single}
  parent: Priority_Queue
  definition: Priority_Queue.IPriorityQueue`2
  href: Priority_Queue.IPriorityQueue-2.html
  name: IPriorityQueue<T, float>
  nameWithType: IPriorityQueue<T, float>
  fullName: Priority_Queue.IPriorityQueue<T, float>
  nameWithType.vb: IPriorityQueue(Of T, Single)
  fullName.vb: Priority_Queue.IPriorityQueue(Of T, Single)
  name.vb: IPriorityQueue(Of T, Single)
  spec.csharp:
  - uid: Priority_Queue.IPriorityQueue`2
    name: IPriorityQueue
    href: Priority_Queue.IPriorityQueue-2.html
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: Priority_Queue.IPriorityQueue`2
    name: IPriorityQueue
    href: Priority_Queue.IPriorityQueue-2.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Priority_Queue.IPriorityQueue`2
  commentId: T:Priority_Queue.IPriorityQueue`2
  href: Priority_Queue.IPriorityQueue-2.html
  name: IPriorityQueue<TItem, TPriority>
  nameWithType: IPriorityQueue<TItem, TPriority>
  fullName: Priority_Queue.IPriorityQueue<TItem, TPriority>
  nameWithType.vb: IPriorityQueue(Of TItem, TPriority)
  fullName.vb: Priority_Queue.IPriorityQueue(Of TItem, TPriority)
  name.vb: IPriorityQueue(Of TItem, TPriority)
  spec.csharp:
  - uid: Priority_Queue.IPriorityQueue`2
    name: IPriorityQueue
    href: Priority_Queue.IPriorityQueue-2.html
  - name: <
  - name: TItem
  - name: ','
  - name: " "
  - name: TPriority
  - name: '>'
  spec.vb:
  - uid: Priority_Queue.IPriorityQueue`2
    name: IPriorityQueue
    href: Priority_Queue.IPriorityQueue-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TItem
  - name: ','
  - name: " "
  - name: TPriority
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: Priority_Queue.FastPriorityQueue`1.#ctor*
  commentId: Overload:Priority_Queue.FastPriorityQueue`1.#ctor
  href: Priority_Queue.FastPriorityQueue-1.html#Priority_Queue_FastPriorityQueue_1__ctor_System_Int32_
  name: FastPriorityQueue
  nameWithType: FastPriorityQueue<T>.FastPriorityQueue
  fullName: Priority_Queue.FastPriorityQueue<T>.FastPriorityQueue
  nameWithType.vb: FastPriorityQueue(Of T).New
  fullName.vb: Priority_Queue.FastPriorityQueue(Of T).New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Priority_Queue.FastPriorityQueue`1.Count*
  commentId: Overload:Priority_Queue.FastPriorityQueue`1.Count
  href: Priority_Queue.FastPriorityQueue-1.html#Priority_Queue_FastPriorityQueue_1_Count
  name: Count
  nameWithType: FastPriorityQueue<T>.Count
  fullName: Priority_Queue.FastPriorityQueue<T>.Count
  nameWithType.vb: FastPriorityQueue(Of T).Count
  fullName.vb: Priority_Queue.FastPriorityQueue(Of T).Count
- uid: Priority_Queue.IPriorityQueue{{T},System.Single}.Count
  commentId: P:Priority_Queue.IPriorityQueue{`0,System.Single}.Count
  parent: Priority_Queue.IPriorityQueue{{T},System.Single}
  definition: Priority_Queue.IPriorityQueue`2.Count
  href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_Count
  name: Count
  nameWithType: IPriorityQueue<T, float>.Count
  fullName: Priority_Queue.IPriorityQueue<T, float>.Count
  nameWithType.vb: IPriorityQueue(Of T, Single).Count
  fullName.vb: Priority_Queue.IPriorityQueue(Of T, Single).Count
- uid: Priority_Queue.IPriorityQueue`2.Count
  commentId: P:Priority_Queue.IPriorityQueue`2.Count
  href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_Count
  name: Count
  nameWithType: IPriorityQueue<TItem, TPriority>.Count
  fullName: Priority_Queue.IPriorityQueue<TItem, TPriority>.Count
  nameWithType.vb: IPriorityQueue(Of TItem, TPriority).Count
  fullName.vb: Priority_Queue.IPriorityQueue(Of TItem, TPriority).Count
- uid: Priority_Queue.FastPriorityQueue`1.MaxSize*
  commentId: Overload:Priority_Queue.FastPriorityQueue`1.MaxSize
  href: Priority_Queue.FastPriorityQueue-1.html#Priority_Queue_FastPriorityQueue_1_MaxSize
  name: MaxSize
  nameWithType: FastPriorityQueue<T>.MaxSize
  fullName: Priority_Queue.FastPriorityQueue<T>.MaxSize
  nameWithType.vb: FastPriorityQueue(Of T).MaxSize
  fullName.vb: Priority_Queue.FastPriorityQueue(Of T).MaxSize
- uid: Priority_Queue.FastPriorityQueue`1.Clear*
  commentId: Overload:Priority_Queue.FastPriorityQueue`1.Clear
  href: Priority_Queue.FastPriorityQueue-1.html#Priority_Queue_FastPriorityQueue_1_Clear
  name: Clear
  nameWithType: FastPriorityQueue<T>.Clear
  fullName: Priority_Queue.FastPriorityQueue<T>.Clear
  nameWithType.vb: FastPriorityQueue(Of T).Clear
  fullName.vb: Priority_Queue.FastPriorityQueue(Of T).Clear
- uid: Priority_Queue.IPriorityQueue{{T},System.Single}.Clear
  commentId: M:Priority_Queue.IPriorityQueue{`0,System.Single}.Clear
  parent: Priority_Queue.IPriorityQueue{{T},System.Single}
  definition: Priority_Queue.IPriorityQueue`2.Clear
  href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_Clear
  name: Clear()
  nameWithType: IPriorityQueue<T, float>.Clear()
  fullName: Priority_Queue.IPriorityQueue<T, float>.Clear()
  nameWithType.vb: IPriorityQueue(Of T, Single).Clear()
  fullName.vb: Priority_Queue.IPriorityQueue(Of T, Single).Clear()
  spec.csharp:
  - uid: Priority_Queue.IPriorityQueue{`0,System.Single}.Clear
    name: Clear
    href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_Clear
  - name: (
  - name: )
  spec.vb:
  - uid: Priority_Queue.IPriorityQueue{`0,System.Single}.Clear
    name: Clear
    href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_Clear
  - name: (
  - name: )
- uid: Priority_Queue.IPriorityQueue`2.Clear
  commentId: M:Priority_Queue.IPriorityQueue`2.Clear
  href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_Clear
  name: Clear()
  nameWithType: IPriorityQueue<TItem, TPriority>.Clear()
  fullName: Priority_Queue.IPriorityQueue<TItem, TPriority>.Clear()
  nameWithType.vb: IPriorityQueue(Of TItem, TPriority).Clear()
  fullName.vb: Priority_Queue.IPriorityQueue(Of TItem, TPriority).Clear()
  spec.csharp:
  - uid: Priority_Queue.IPriorityQueue`2.Clear
    name: Clear
    href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_Clear
  - name: (
  - name: )
  spec.vb:
  - uid: Priority_Queue.IPriorityQueue`2.Clear
    name: Clear
    href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_Clear
  - name: (
  - name: )
- uid: Priority_Queue.FastPriorityQueue`1.Contains*
  commentId: Overload:Priority_Queue.FastPriorityQueue`1.Contains
  href: Priority_Queue.FastPriorityQueue-1.html#Priority_Queue_FastPriorityQueue_1_Contains__0_
  name: Contains
  nameWithType: FastPriorityQueue<T>.Contains
  fullName: Priority_Queue.FastPriorityQueue<T>.Contains
  nameWithType.vb: FastPriorityQueue(Of T).Contains
  fullName.vb: Priority_Queue.FastPriorityQueue(Of T).Contains
- uid: Priority_Queue.IPriorityQueue{{T},System.Single}.Contains({T})
  commentId: M:Priority_Queue.IPriorityQueue{`0,System.Single}.Contains(`0)
  parent: Priority_Queue.IPriorityQueue{{T},System.Single}
  definition: Priority_Queue.IPriorityQueue`2.Contains(`0)
  href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_Contains__0_
  name: Contains(T)
  nameWithType: IPriorityQueue<T, float>.Contains(T)
  fullName: Priority_Queue.IPriorityQueue<T, float>.Contains(T)
  nameWithType.vb: IPriorityQueue(Of T, Single).Contains(T)
  fullName.vb: Priority_Queue.IPriorityQueue(Of T, Single).Contains(T)
  spec.csharp:
  - uid: Priority_Queue.IPriorityQueue{`0,System.Single}.Contains(`0)
    name: Contains
    href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_Contains__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Priority_Queue.IPriorityQueue{`0,System.Single}.Contains(`0)
    name: Contains
    href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_Contains__0_
  - name: (
  - name: T
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Priority_Queue.IPriorityQueue`2.Contains(`0)
  commentId: M:Priority_Queue.IPriorityQueue`2.Contains(`0)
  href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_Contains__0_
  name: Contains(TItem)
  nameWithType: IPriorityQueue<TItem, TPriority>.Contains(TItem)
  fullName: Priority_Queue.IPriorityQueue<TItem, TPriority>.Contains(TItem)
  nameWithType.vb: IPriorityQueue(Of TItem, TPriority).Contains(TItem)
  fullName.vb: Priority_Queue.IPriorityQueue(Of TItem, TPriority).Contains(TItem)
  spec.csharp:
  - uid: Priority_Queue.IPriorityQueue`2.Contains(`0)
    name: Contains
    href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_Contains__0_
  - name: (
  - name: TItem
  - name: )
  spec.vb:
  - uid: Priority_Queue.IPriorityQueue`2.Contains(`0)
    name: Contains
    href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_Contains__0_
  - name: (
  - name: TItem
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Priority_Queue.FastPriorityQueue`1.Enqueue*
  commentId: Overload:Priority_Queue.FastPriorityQueue`1.Enqueue
  href: Priority_Queue.FastPriorityQueue-1.html#Priority_Queue_FastPriorityQueue_1_Enqueue__0_System_Single_
  name: Enqueue
  nameWithType: FastPriorityQueue<T>.Enqueue
  fullName: Priority_Queue.FastPriorityQueue<T>.Enqueue
  nameWithType.vb: FastPriorityQueue(Of T).Enqueue
  fullName.vb: Priority_Queue.FastPriorityQueue(Of T).Enqueue
- uid: Priority_Queue.IPriorityQueue{{T},System.Single}.Enqueue({T},System.Single)
  commentId: M:Priority_Queue.IPriorityQueue{`0,System.Single}.Enqueue(`0,System.Single)
  parent: Priority_Queue.IPriorityQueue{{T},System.Single}
  definition: Priority_Queue.IPriorityQueue`2.Enqueue(`0,`1)
  href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_Enqueue__0__1_
  name: Enqueue(T, float)
  nameWithType: IPriorityQueue<T, float>.Enqueue(T, float)
  fullName: Priority_Queue.IPriorityQueue<T, float>.Enqueue(T, float)
  nameWithType.vb: IPriorityQueue(Of T, Single).Enqueue(T, Single)
  fullName.vb: Priority_Queue.IPriorityQueue(Of T, Single).Enqueue(T, Single)
  name.vb: Enqueue(T, Single)
  spec.csharp:
  - uid: Priority_Queue.IPriorityQueue{`0,System.Single}.Enqueue(`0,System.Single)
    name: Enqueue
    href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_Enqueue__0__1_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Priority_Queue.IPriorityQueue{`0,System.Single}.Enqueue(`0,System.Single)
    name: Enqueue
    href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_Enqueue__0__1_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Priority_Queue.IPriorityQueue`2.Enqueue(`0,`1)
  commentId: M:Priority_Queue.IPriorityQueue`2.Enqueue(`0,`1)
  href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_Enqueue__0__1_
  name: Enqueue(TItem, TPriority)
  nameWithType: IPriorityQueue<TItem, TPriority>.Enqueue(TItem, TPriority)
  fullName: Priority_Queue.IPriorityQueue<TItem, TPriority>.Enqueue(TItem, TPriority)
  nameWithType.vb: IPriorityQueue(Of TItem, TPriority).Enqueue(TItem, TPriority)
  fullName.vb: Priority_Queue.IPriorityQueue(Of TItem, TPriority).Enqueue(TItem, TPriority)
  spec.csharp:
  - uid: Priority_Queue.IPriorityQueue`2.Enqueue(`0,`1)
    name: Enqueue
    href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_Enqueue__0__1_
  - name: (
  - name: TItem
  - name: ','
  - name: " "
  - name: TPriority
  - name: )
  spec.vb:
  - uid: Priority_Queue.IPriorityQueue`2.Enqueue(`0,`1)
    name: Enqueue
    href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_Enqueue__0__1_
  - name: (
  - name: TItem
  - name: ','
  - name: " "
  - name: TPriority
  - name: )
- uid: Priority_Queue.FastPriorityQueue`1.Dequeue*
  commentId: Overload:Priority_Queue.FastPriorityQueue`1.Dequeue
  href: Priority_Queue.FastPriorityQueue-1.html#Priority_Queue_FastPriorityQueue_1_Dequeue
  name: Dequeue
  nameWithType: FastPriorityQueue<T>.Dequeue
  fullName: Priority_Queue.FastPriorityQueue<T>.Dequeue
  nameWithType.vb: FastPriorityQueue(Of T).Dequeue
  fullName.vb: Priority_Queue.FastPriorityQueue(Of T).Dequeue
- uid: Priority_Queue.IPriorityQueue{{T},System.Single}.Dequeue
  commentId: M:Priority_Queue.IPriorityQueue{`0,System.Single}.Dequeue
  parent: Priority_Queue.IPriorityQueue{{T},System.Single}
  definition: Priority_Queue.IPriorityQueue`2.Dequeue
  href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_Dequeue
  name: Dequeue()
  nameWithType: IPriorityQueue<T, float>.Dequeue()
  fullName: Priority_Queue.IPriorityQueue<T, float>.Dequeue()
  nameWithType.vb: IPriorityQueue(Of T, Single).Dequeue()
  fullName.vb: Priority_Queue.IPriorityQueue(Of T, Single).Dequeue()
  spec.csharp:
  - uid: Priority_Queue.IPriorityQueue{`0,System.Single}.Dequeue
    name: Dequeue
    href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_Dequeue
  - name: (
  - name: )
  spec.vb:
  - uid: Priority_Queue.IPriorityQueue{`0,System.Single}.Dequeue
    name: Dequeue
    href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_Dequeue
  - name: (
  - name: )
- uid: Priority_Queue.IPriorityQueue`2.Dequeue
  commentId: M:Priority_Queue.IPriorityQueue`2.Dequeue
  href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_Dequeue
  name: Dequeue()
  nameWithType: IPriorityQueue<TItem, TPriority>.Dequeue()
  fullName: Priority_Queue.IPriorityQueue<TItem, TPriority>.Dequeue()
  nameWithType.vb: IPriorityQueue(Of TItem, TPriority).Dequeue()
  fullName.vb: Priority_Queue.IPriorityQueue(Of TItem, TPriority).Dequeue()
  spec.csharp:
  - uid: Priority_Queue.IPriorityQueue`2.Dequeue
    name: Dequeue
    href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_Dequeue
  - name: (
  - name: )
  spec.vb:
  - uid: Priority_Queue.IPriorityQueue`2.Dequeue
    name: Dequeue
    href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_Dequeue
  - name: (
  - name: )
- uid: Priority_Queue.FastPriorityQueue`1.Resize*
  commentId: Overload:Priority_Queue.FastPriorityQueue`1.Resize
  href: Priority_Queue.FastPriorityQueue-1.html#Priority_Queue_FastPriorityQueue_1_Resize_System_Int32_
  name: Resize
  nameWithType: FastPriorityQueue<T>.Resize
  fullName: Priority_Queue.FastPriorityQueue<T>.Resize
  nameWithType.vb: FastPriorityQueue(Of T).Resize
  fullName.vb: Priority_Queue.FastPriorityQueue(Of T).Resize
- uid: Priority_Queue.FastPriorityQueue`1.First*
  commentId: Overload:Priority_Queue.FastPriorityQueue`1.First
  href: Priority_Queue.FastPriorityQueue-1.html#Priority_Queue_FastPriorityQueue_1_First
  name: First
  nameWithType: FastPriorityQueue<T>.First
  fullName: Priority_Queue.FastPriorityQueue<T>.First
  nameWithType.vb: FastPriorityQueue(Of T).First
  fullName.vb: Priority_Queue.FastPriorityQueue(Of T).First
- uid: Priority_Queue.IPriorityQueue{{T},System.Single}.First
  commentId: P:Priority_Queue.IPriorityQueue{`0,System.Single}.First
  parent: Priority_Queue.IPriorityQueue{{T},System.Single}
  definition: Priority_Queue.IPriorityQueue`2.First
  href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_First
  name: First
  nameWithType: IPriorityQueue<T, float>.First
  fullName: Priority_Queue.IPriorityQueue<T, float>.First
  nameWithType.vb: IPriorityQueue(Of T, Single).First
  fullName.vb: Priority_Queue.IPriorityQueue(Of T, Single).First
- uid: Priority_Queue.IPriorityQueue`2.First
  commentId: P:Priority_Queue.IPriorityQueue`2.First
  href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_First
  name: First
  nameWithType: IPriorityQueue<TItem, TPriority>.First
  fullName: Priority_Queue.IPriorityQueue<TItem, TPriority>.First
  nameWithType.vb: IPriorityQueue(Of TItem, TPriority).First
  fullName.vb: Priority_Queue.IPriorityQueue(Of TItem, TPriority).First
- uid: Priority_Queue.FastPriorityQueue`1.UpdatePriority*
  commentId: Overload:Priority_Queue.FastPriorityQueue`1.UpdatePriority
  href: Priority_Queue.FastPriorityQueue-1.html#Priority_Queue_FastPriorityQueue_1_UpdatePriority__0_System_Single_
  name: UpdatePriority
  nameWithType: FastPriorityQueue<T>.UpdatePriority
  fullName: Priority_Queue.FastPriorityQueue<T>.UpdatePriority
  nameWithType.vb: FastPriorityQueue(Of T).UpdatePriority
  fullName.vb: Priority_Queue.FastPriorityQueue(Of T).UpdatePriority
- uid: Priority_Queue.IPriorityQueue{{T},System.Single}.UpdatePriority({T},System.Single)
  commentId: M:Priority_Queue.IPriorityQueue{`0,System.Single}.UpdatePriority(`0,System.Single)
  parent: Priority_Queue.IPriorityQueue{{T},System.Single}
  definition: Priority_Queue.IPriorityQueue`2.UpdatePriority(`0,`1)
  href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_UpdatePriority__0__1_
  name: UpdatePriority(T, float)
  nameWithType: IPriorityQueue<T, float>.UpdatePriority(T, float)
  fullName: Priority_Queue.IPriorityQueue<T, float>.UpdatePriority(T, float)
  nameWithType.vb: IPriorityQueue(Of T, Single).UpdatePriority(T, Single)
  fullName.vb: Priority_Queue.IPriorityQueue(Of T, Single).UpdatePriority(T, Single)
  name.vb: UpdatePriority(T, Single)
  spec.csharp:
  - uid: Priority_Queue.IPriorityQueue{`0,System.Single}.UpdatePriority(`0,System.Single)
    name: UpdatePriority
    href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_UpdatePriority__0__1_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Priority_Queue.IPriorityQueue{`0,System.Single}.UpdatePriority(`0,System.Single)
    name: UpdatePriority
    href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_UpdatePriority__0__1_
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Priority_Queue.IPriorityQueue`2.UpdatePriority(`0,`1)
  commentId: M:Priority_Queue.IPriorityQueue`2.UpdatePriority(`0,`1)
  href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_UpdatePriority__0__1_
  name: UpdatePriority(TItem, TPriority)
  nameWithType: IPriorityQueue<TItem, TPriority>.UpdatePriority(TItem, TPriority)
  fullName: Priority_Queue.IPriorityQueue<TItem, TPriority>.UpdatePriority(TItem, TPriority)
  nameWithType.vb: IPriorityQueue(Of TItem, TPriority).UpdatePriority(TItem, TPriority)
  fullName.vb: Priority_Queue.IPriorityQueue(Of TItem, TPriority).UpdatePriority(TItem, TPriority)
  spec.csharp:
  - uid: Priority_Queue.IPriorityQueue`2.UpdatePriority(`0,`1)
    name: UpdatePriority
    href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_UpdatePriority__0__1_
  - name: (
  - name: TItem
  - name: ','
  - name: " "
  - name: TPriority
  - name: )
  spec.vb:
  - uid: Priority_Queue.IPriorityQueue`2.UpdatePriority(`0,`1)
    name: UpdatePriority
    href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_UpdatePriority__0__1_
  - name: (
  - name: TItem
  - name: ','
  - name: " "
  - name: TPriority
  - name: )
- uid: Priority_Queue.FastPriorityQueue`1.Remove*
  commentId: Overload:Priority_Queue.FastPriorityQueue`1.Remove
  href: Priority_Queue.FastPriorityQueue-1.html#Priority_Queue_FastPriorityQueue_1_Remove__0_
  name: Remove
  nameWithType: FastPriorityQueue<T>.Remove
  fullName: Priority_Queue.FastPriorityQueue<T>.Remove
  nameWithType.vb: FastPriorityQueue(Of T).Remove
  fullName.vb: Priority_Queue.FastPriorityQueue(Of T).Remove
- uid: Priority_Queue.IPriorityQueue{{T},System.Single}.Remove({T})
  commentId: M:Priority_Queue.IPriorityQueue{`0,System.Single}.Remove(`0)
  parent: Priority_Queue.IPriorityQueue{{T},System.Single}
  definition: Priority_Queue.IPriorityQueue`2.Remove(`0)
  href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_Remove__0_
  name: Remove(T)
  nameWithType: IPriorityQueue<T, float>.Remove(T)
  fullName: Priority_Queue.IPriorityQueue<T, float>.Remove(T)
  nameWithType.vb: IPriorityQueue(Of T, Single).Remove(T)
  fullName.vb: Priority_Queue.IPriorityQueue(Of T, Single).Remove(T)
  spec.csharp:
  - uid: Priority_Queue.IPriorityQueue{`0,System.Single}.Remove(`0)
    name: Remove
    href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_Remove__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Priority_Queue.IPriorityQueue{`0,System.Single}.Remove(`0)
    name: Remove
    href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_Remove__0_
  - name: (
  - name: T
  - name: )
- uid: Priority_Queue.IPriorityQueue`2.Remove(`0)
  commentId: M:Priority_Queue.IPriorityQueue`2.Remove(`0)
  href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_Remove__0_
  name: Remove(TItem)
  nameWithType: IPriorityQueue<TItem, TPriority>.Remove(TItem)
  fullName: Priority_Queue.IPriorityQueue<TItem, TPriority>.Remove(TItem)
  nameWithType.vb: IPriorityQueue(Of TItem, TPriority).Remove(TItem)
  fullName.vb: Priority_Queue.IPriorityQueue(Of TItem, TPriority).Remove(TItem)
  spec.csharp:
  - uid: Priority_Queue.IPriorityQueue`2.Remove(`0)
    name: Remove
    href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_Remove__0_
  - name: (
  - name: TItem
  - name: )
  spec.vb:
  - uid: Priority_Queue.IPriorityQueue`2.Remove(`0)
    name: Remove
    href: Priority_Queue.IPriorityQueue-2.html#Priority_Queue_IPriorityQueue_2_Remove__0_
  - name: (
  - name: TItem
  - name: )
- uid: Priority_Queue.FastPriorityQueue`1.GetEnumerator*
  commentId: Overload:Priority_Queue.FastPriorityQueue`1.GetEnumerator
  href: Priority_Queue.FastPriorityQueue-1.html#Priority_Queue_FastPriorityQueue_1_GetEnumerator
  name: GetEnumerator
  nameWithType: FastPriorityQueue<T>.GetEnumerator
  fullName: Priority_Queue.FastPriorityQueue<T>.GetEnumerator
  nameWithType.vb: FastPriorityQueue(Of T).GetEnumerator
  fullName.vb: Priority_Queue.FastPriorityQueue(Of T).GetEnumerator
- uid: System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{T}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{`0}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{`0}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{{T}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Priority_Queue.FastPriorityQueue`1.IsValidQueue*
  commentId: Overload:Priority_Queue.FastPriorityQueue`1.IsValidQueue
  href: Priority_Queue.FastPriorityQueue-1.html#Priority_Queue_FastPriorityQueue_1_IsValidQueue
  name: IsValidQueue
  nameWithType: FastPriorityQueue<T>.IsValidQueue
  fullName: Priority_Queue.FastPriorityQueue<T>.IsValidQueue
  nameWithType.vb: FastPriorityQueue(Of T).IsValidQueue
  fullName.vb: Priority_Queue.FastPriorityQueue(Of T).IsValidQueue
