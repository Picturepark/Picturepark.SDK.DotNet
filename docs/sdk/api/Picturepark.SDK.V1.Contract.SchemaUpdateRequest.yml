### YamlMime:ManagedReference
items:
- uid: Picturepark.SDK.V1.Contract.SchemaUpdateRequest
  commentId: T:Picturepark.SDK.V1.Contract.SchemaUpdateRequest
  id: SchemaUpdateRequest
  parent: Picturepark.SDK.V1.Contract
  children:
  - Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Aggregations
  - Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Descriptions
  - Picturepark.SDK.V1.Contract.SchemaUpdateRequest.DisplayPatterns
  - Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Fields
  - Picturepark.SDK.V1.Contract.SchemaUpdateRequest.FieldsOverwrite
  - Picturepark.SDK.V1.Contract.SchemaUpdateRequest.FromJson(System.String)
  - Picturepark.SDK.V1.Contract.SchemaUpdateRequest.LayerSchemaIds
  - Picturepark.SDK.V1.Contract.SchemaUpdateRequest.MetadataProtection
  - Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Names
  - Picturepark.SDK.V1.Contract.SchemaUpdateRequest.ReferencedInContentSchemaIds
  - Picturepark.SDK.V1.Contract.SchemaUpdateRequest.SchemaPermissionSetIds
  - Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Sort
  - Picturepark.SDK.V1.Contract.SchemaUpdateRequest.ToJson
  - Picturepark.SDK.V1.Contract.SchemaUpdateRequest.ViewForAll
  langs:
  - csharp
  - vb
  name: SchemaUpdateRequest
  nameWithType: SchemaUpdateRequest
  fullName: Picturepark.SDK.V1.Contract.SchemaUpdateRequest
  type: Class
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: SchemaUpdateRequest
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 37376
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Request to update an existing schema
  example: []
  syntax:
    content: >-
      [GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]

      public class SchemaUpdateRequest
    content.vb: >-
      <GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")>

      Public Class SchemaUpdateRequest
  inheritance:
  - System.Object
  derivedClasses:
  - Picturepark.SDK.V1.Contract.SchemaUpdateItem
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.CodeDom.Compiler.GeneratedCodeAttribute
    ctor: System.CodeDom.Compiler.GeneratedCodeAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: NJsonSchema
    - type: System.String
      value: 13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))
- uid: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Names
  commentId: P:Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Names
  id: Names
  parent: Picturepark.SDK.V1.Contract.SchemaUpdateRequest
  langs:
  - csharp
  - vb
  name: Names
  nameWithType: SchemaUpdateRequest.Names
  fullName: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Names
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: Names
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 37382
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Language specific schema names.
  example: []
  syntax:
    content: >-
      [JsonProperty("names", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public TranslatedStringDictionary Names { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.Contract.TranslatedStringDictionary
    content.vb: >-
      <JsonProperty("names", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Names As TranslatedStringDictionary
  overload: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Names*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: names
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Descriptions
  commentId: P:Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Descriptions
  id: Descriptions
  parent: Picturepark.SDK.V1.Contract.SchemaUpdateRequest
  langs:
  - csharp
  - vb
  name: Descriptions
  nameWithType: SchemaUpdateRequest.Descriptions
  fullName: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Descriptions
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: Descriptions
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 37388
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Language specific schema descriptions.
  example: []
  syntax:
    content: >-
      [JsonProperty("descriptions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public TranslatedStringDictionary Descriptions { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.Contract.TranslatedStringDictionary
    content.vb: >-
      <JsonProperty("descriptions", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Descriptions As TranslatedStringDictionary
  overload: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Descriptions*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: descriptions
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.DisplayPatterns
  commentId: P:Picturepark.SDK.V1.Contract.SchemaUpdateRequest.DisplayPatterns
  id: DisplayPatterns
  parent: Picturepark.SDK.V1.Contract.SchemaUpdateRequest
  langs:
  - csharp
  - vb
  name: DisplayPatterns
  nameWithType: SchemaUpdateRequest.DisplayPatterns
  fullName: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.DisplayPatterns
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: DisplayPatterns
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 37394
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Language specific DotLiquid templates. These templates will be resolved into display values in content documents and/or list items.
  example: []
  syntax:
    content: >-
      [JsonProperty("displayPatterns", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public ICollection<DisplayPattern> DisplayPatterns { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.DisplayPattern}
    content.vb: >-
      <JsonProperty("displayPatterns", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property DisplayPatterns As ICollection(Of DisplayPattern)
  overload: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.DisplayPatterns*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: displayPatterns
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Fields
  commentId: P:Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Fields
  id: Fields
  parent: Picturepark.SDK.V1.Contract.SchemaUpdateRequest
  langs:
  - csharp
  - vb
  name: Fields
  nameWithType: SchemaUpdateRequest.Fields
  fullName: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Fields
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: Fields
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 37400
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: The schema fields.
  example: []
  syntax:
    content: >-
      [JsonProperty("fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public ICollection<FieldBase> Fields { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.FieldBase}
    content.vb: >-
      <JsonProperty("fields", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Fields As ICollection(Of FieldBase)
  overload: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Fields*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: fields
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.FieldsOverwrite
  commentId: P:Picturepark.SDK.V1.Contract.SchemaUpdateRequest.FieldsOverwrite
  id: FieldsOverwrite
  parent: Picturepark.SDK.V1.Contract.SchemaUpdateRequest
  langs:
  - csharp
  - vb
  name: FieldsOverwrite
  nameWithType: SchemaUpdateRequest.FieldsOverwrite
  fullName: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.FieldsOverwrite
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: FieldsOverwrite
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 37407
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: >-
    A list of schema fields overwrite information. It is used to overwrite the field configuration coming from the parent schema.

    <br />Only a subset of properties of a FieldSingleTagbox and FieldMultiTagbox can be be overwritten. All other properties and fields cannot.
  example: []
  syntax:
    content: >-
      [JsonProperty("fieldsOverwrite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public ICollection<FieldOverwriteBase> FieldsOverwrite { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.FieldOverwriteBase}
    content.vb: >-
      <JsonProperty("fieldsOverwrite", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property FieldsOverwrite As ICollection(Of FieldOverwriteBase)
  overload: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.FieldsOverwrite*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: fieldsOverwrite
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Aggregations
  commentId: P:Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Aggregations
  id: Aggregations
  parent: Picturepark.SDK.V1.Contract.SchemaUpdateRequest
  langs:
  - csharp
  - vb
  name: Aggregations
  nameWithType: SchemaUpdateRequest.Aggregations
  fullName: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Aggregations
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: Aggregations
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 37414
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: >-
    An optional list of aggregations to show grouped list item documents. When aggregations are defined for a List,

    <br />the UI uses such information to show the available filters and grouped results.
  example: []
  syntax:
    content: >-
      [JsonProperty("aggregations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public ICollection<AggregatorBase> Aggregations { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.AggregatorBase}
    content.vb: >-
      <JsonProperty("aggregations", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Aggregations As ICollection(Of AggregatorBase)
  overload: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Aggregations*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: aggregations
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Sort
  commentId: P:Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Sort
  id: Sort
  parent: Picturepark.SDK.V1.Contract.SchemaUpdateRequest
  langs:
  - csharp
  - vb
  name: Sort
  nameWithType: SchemaUpdateRequest.Sort
  fullName: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Sort
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: Sort
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 37421
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: >-
    Sorts content documents and/or list items. In order for the sorting to work properly, the Sortable property of the related field

    <br />must be set to true. Multiple sorting is supported: they are applied in the specified order.
  example: []
  syntax:
    content: >-
      [JsonProperty("sort", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public ICollection<SortInfo> Sort { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.SortInfo}
    content.vb: >-
      <JsonProperty("sort", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Sort As ICollection(Of SortInfo)
  overload: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Sort*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: sort
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.ViewForAll
  commentId: P:Picturepark.SDK.V1.Contract.SchemaUpdateRequest.ViewForAll
  id: ViewForAll
  parent: Picturepark.SDK.V1.Contract.SchemaUpdateRequest
  langs:
  - csharp
  - vb
  name: ViewForAll
  nameWithType: SchemaUpdateRequest.ViewForAll
  fullName: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.ViewForAll
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: ViewForAll
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 37427
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Defines a schema as viewable by everyone. Everyone with ManageSchema user permission is able to see the schema.
  example: []
  syntax:
    content: >-
      [JsonProperty("viewForAll", Required = Required.Always)]

      public bool ViewForAll { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("viewForAll", Required:=Required.Always)>

      Public Property ViewForAll As Boolean
  overload: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.ViewForAll*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: viewForAll
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
- uid: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.SchemaPermissionSetIds
  commentId: P:Picturepark.SDK.V1.Contract.SchemaUpdateRequest.SchemaPermissionSetIds
  id: SchemaPermissionSetIds
  parent: Picturepark.SDK.V1.Contract.SchemaUpdateRequest
  langs:
  - csharp
  - vb
  name: SchemaPermissionSetIds
  nameWithType: SchemaUpdateRequest.SchemaPermissionSetIds
  fullName: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.SchemaPermissionSetIds
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: SchemaPermissionSetIds
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 37433
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: An optional list of schema permission set IDs which control schema permissions.
  example: []
  syntax:
    content: >-
      [JsonProperty("schemaPermissionSetIds", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public ICollection<string> SchemaPermissionSetIds { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonProperty("schemaPermissionSetIds", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property SchemaPermissionSetIds As ICollection(Of String)
  overload: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.SchemaPermissionSetIds*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: schemaPermissionSetIds
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.LayerSchemaIds
  commentId: P:Picturepark.SDK.V1.Contract.SchemaUpdateRequest.LayerSchemaIds
  id: LayerSchemaIds
  parent: Picturepark.SDK.V1.Contract.SchemaUpdateRequest
  langs:
  - csharp
  - vb
  name: LayerSchemaIds
  nameWithType: SchemaUpdateRequest.LayerSchemaIds
  fullName: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.LayerSchemaIds
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: LayerSchemaIds
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 37439
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: An optional list of schemas' IDs with type layer. For a Content schema it stores the layers that can be assigned to a content.
  example: []
  syntax:
    content: >-
      [JsonProperty("layerSchemaIds", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public ICollection<string> LayerSchemaIds { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonProperty("layerSchemaIds", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property LayerSchemaIds As ICollection(Of String)
  overload: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.LayerSchemaIds*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: layerSchemaIds
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.ReferencedInContentSchemaIds
  commentId: P:Picturepark.SDK.V1.Contract.SchemaUpdateRequest.ReferencedInContentSchemaIds
  id: ReferencedInContentSchemaIds
  parent: Picturepark.SDK.V1.Contract.SchemaUpdateRequest
  langs:
  - csharp
  - vb
  name: ReferencedInContentSchemaIds
  nameWithType: SchemaUpdateRequest.ReferencedInContentSchemaIds
  fullName: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.ReferencedInContentSchemaIds
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: ReferencedInContentSchemaIds
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 37446
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: >-
    If the schema if of type Layer, the list contains the schemas with type Content

    <br />that reference the layer.
  example: []
  syntax:
    content: >-
      [JsonProperty("referencedInContentSchemaIds", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public ICollection<string> ReferencedInContentSchemaIds { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonProperty("referencedInContentSchemaIds", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property ReferencedInContentSchemaIds As ICollection(Of String)
  overload: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.ReferencedInContentSchemaIds*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: referencedInContentSchemaIds
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.MetadataProtection
  commentId: P:Picturepark.SDK.V1.Contract.SchemaUpdateRequest.MetadataProtection
  id: MetadataProtection
  parent: Picturepark.SDK.V1.Contract.SchemaUpdateRequest
  langs:
  - csharp
  - vb
  name: MetadataProtection
  nameWithType: SchemaUpdateRequest.MetadataProtection
  fullName: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.MetadataProtection
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: MetadataProtection
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 37452
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Metadata protection options.
  example: []
  syntax:
    content: >-
      [JsonProperty("metadataProtection", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public MetadataProtection MetadataProtection { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.Contract.MetadataProtection
    content.vb: >-
      <JsonProperty("metadataProtection", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property MetadataProtection As MetadataProtection
  overload: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.MetadataProtection*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: metadataProtection
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.ToJson
  commentId: M:Picturepark.SDK.V1.Contract.SchemaUpdateRequest.ToJson
  id: ToJson
  parent: Picturepark.SDK.V1.Contract.SchemaUpdateRequest
  langs:
  - csharp
  - vb
  name: ToJson()
  nameWithType: SchemaUpdateRequest.ToJson()
  fullName: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.ToJson()
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: ToJson
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 37455
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  syntax:
    content: public string ToJson()
    return:
      type: System.String
    content.vb: Public Function ToJson() As String
  overload: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.ToJson*
- uid: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.FromJson(System.String)
  commentId: M:Picturepark.SDK.V1.Contract.SchemaUpdateRequest.FromJson(System.String)
  id: FromJson(System.String)
  parent: Picturepark.SDK.V1.Contract.SchemaUpdateRequest
  langs:
  - csharp
  - vb
  name: FromJson(string)
  nameWithType: SchemaUpdateRequest.FromJson(string)
  fullName: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.FromJson(string)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: FromJson
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 37461
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  syntax:
    content: public static SchemaUpdateRequest FromJson(string data)
    parameters:
    - id: data
      type: System.String
    return:
      type: Picturepark.SDK.V1.Contract.SchemaUpdateRequest
    content.vb: Public Shared Function FromJson(data As String) As SchemaUpdateRequest
  overload: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.FromJson*
  nameWithType.vb: SchemaUpdateRequest.FromJson(String)
  fullName.vb: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.FromJson(String)
  name.vb: FromJson(String)
references:
- uid: Picturepark.SDK.V1.Contract
  commentId: N:Picturepark.SDK.V1.Contract
  href: Picturepark.html
  name: Picturepark.SDK.V1.Contract
  nameWithType: Picturepark.SDK.V1.Contract
  fullName: Picturepark.SDK.V1.Contract
  spec.csharp:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.Contract
    name: Contract
    href: Picturepark.SDK.V1.Contract.html
  spec.vb:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.Contract
    name: Contract
    href: Picturepark.SDK.V1.Contract.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Names*
  commentId: Overload:Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Names
  href: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.html#Picturepark_SDK_V1_Contract_SchemaUpdateRequest_Names
  name: Names
  nameWithType: SchemaUpdateRequest.Names
  fullName: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Names
- uid: Picturepark.SDK.V1.Contract.TranslatedStringDictionary
  commentId: T:Picturepark.SDK.V1.Contract.TranslatedStringDictionary
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.TranslatedStringDictionary.html
  name: TranslatedStringDictionary
  nameWithType: TranslatedStringDictionary
  fullName: Picturepark.SDK.V1.Contract.TranslatedStringDictionary
- uid: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Descriptions*
  commentId: Overload:Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Descriptions
  href: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.html#Picturepark_SDK_V1_Contract_SchemaUpdateRequest_Descriptions
  name: Descriptions
  nameWithType: SchemaUpdateRequest.Descriptions
  fullName: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Descriptions
- uid: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.DisplayPatterns*
  commentId: Overload:Picturepark.SDK.V1.Contract.SchemaUpdateRequest.DisplayPatterns
  href: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.html#Picturepark_SDK_V1_Contract_SchemaUpdateRequest_DisplayPatterns
  name: DisplayPatterns
  nameWithType: SchemaUpdateRequest.DisplayPatterns
  fullName: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.DisplayPatterns
- uid: System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.DisplayPattern}
  commentId: T:System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.DisplayPattern}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<DisplayPattern>
  nameWithType: ICollection<DisplayPattern>
  fullName: System.Collections.Generic.ICollection<Picturepark.SDK.V1.Contract.DisplayPattern>
  nameWithType.vb: ICollection(Of DisplayPattern)
  fullName.vb: System.Collections.Generic.ICollection(Of Picturepark.SDK.V1.Contract.DisplayPattern)
  name.vb: ICollection(Of DisplayPattern)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Picturepark.SDK.V1.Contract.DisplayPattern
    name: DisplayPattern
    href: Picturepark.SDK.V1.Contract.DisplayPattern.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.DisplayPattern
    name: DisplayPattern
    href: Picturepark.SDK.V1.Contract.DisplayPattern.html
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Fields*
  commentId: Overload:Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Fields
  href: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.html#Picturepark_SDK_V1_Contract_SchemaUpdateRequest_Fields
  name: Fields
  nameWithType: SchemaUpdateRequest.Fields
  fullName: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Fields
- uid: System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.FieldBase}
  commentId: T:System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.FieldBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<FieldBase>
  nameWithType: ICollection<FieldBase>
  fullName: System.Collections.Generic.ICollection<Picturepark.SDK.V1.Contract.FieldBase>
  nameWithType.vb: ICollection(Of FieldBase)
  fullName.vb: System.Collections.Generic.ICollection(Of Picturepark.SDK.V1.Contract.FieldBase)
  name.vb: ICollection(Of FieldBase)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Picturepark.SDK.V1.Contract.FieldBase
    name: FieldBase
    href: Picturepark.SDK.V1.Contract.FieldBase.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.FieldBase
    name: FieldBase
    href: Picturepark.SDK.V1.Contract.FieldBase.html
  - name: )
- uid: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.FieldsOverwrite*
  commentId: Overload:Picturepark.SDK.V1.Contract.SchemaUpdateRequest.FieldsOverwrite
  href: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.html#Picturepark_SDK_V1_Contract_SchemaUpdateRequest_FieldsOverwrite
  name: FieldsOverwrite
  nameWithType: SchemaUpdateRequest.FieldsOverwrite
  fullName: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.FieldsOverwrite
- uid: System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.FieldOverwriteBase}
  commentId: T:System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.FieldOverwriteBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<FieldOverwriteBase>
  nameWithType: ICollection<FieldOverwriteBase>
  fullName: System.Collections.Generic.ICollection<Picturepark.SDK.V1.Contract.FieldOverwriteBase>
  nameWithType.vb: ICollection(Of FieldOverwriteBase)
  fullName.vb: System.Collections.Generic.ICollection(Of Picturepark.SDK.V1.Contract.FieldOverwriteBase)
  name.vb: ICollection(Of FieldOverwriteBase)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Picturepark.SDK.V1.Contract.FieldOverwriteBase
    name: FieldOverwriteBase
    href: Picturepark.SDK.V1.Contract.FieldOverwriteBase.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.FieldOverwriteBase
    name: FieldOverwriteBase
    href: Picturepark.SDK.V1.Contract.FieldOverwriteBase.html
  - name: )
- uid: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Aggregations*
  commentId: Overload:Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Aggregations
  href: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.html#Picturepark_SDK_V1_Contract_SchemaUpdateRequest_Aggregations
  name: Aggregations
  nameWithType: SchemaUpdateRequest.Aggregations
  fullName: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Aggregations
- uid: System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.AggregatorBase}
  commentId: T:System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.AggregatorBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<AggregatorBase>
  nameWithType: ICollection<AggregatorBase>
  fullName: System.Collections.Generic.ICollection<Picturepark.SDK.V1.Contract.AggregatorBase>
  nameWithType.vb: ICollection(Of AggregatorBase)
  fullName.vb: System.Collections.Generic.ICollection(Of Picturepark.SDK.V1.Contract.AggregatorBase)
  name.vb: ICollection(Of AggregatorBase)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Picturepark.SDK.V1.Contract.AggregatorBase
    name: AggregatorBase
    href: Picturepark.SDK.V1.Contract.AggregatorBase.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.AggregatorBase
    name: AggregatorBase
    href: Picturepark.SDK.V1.Contract.AggregatorBase.html
  - name: )
- uid: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Sort*
  commentId: Overload:Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Sort
  href: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.html#Picturepark_SDK_V1_Contract_SchemaUpdateRequest_Sort
  name: Sort
  nameWithType: SchemaUpdateRequest.Sort
  fullName: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.Sort
- uid: System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.SortInfo}
  commentId: T:System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.SortInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<SortInfo>
  nameWithType: ICollection<SortInfo>
  fullName: System.Collections.Generic.ICollection<Picturepark.SDK.V1.Contract.SortInfo>
  nameWithType.vb: ICollection(Of SortInfo)
  fullName.vb: System.Collections.Generic.ICollection(Of Picturepark.SDK.V1.Contract.SortInfo)
  name.vb: ICollection(Of SortInfo)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Picturepark.SDK.V1.Contract.SortInfo
    name: SortInfo
    href: Picturepark.SDK.V1.Contract.SortInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.SortInfo
    name: SortInfo
    href: Picturepark.SDK.V1.Contract.SortInfo.html
  - name: )
- uid: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.ViewForAll*
  commentId: Overload:Picturepark.SDK.V1.Contract.SchemaUpdateRequest.ViewForAll
  href: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.html#Picturepark_SDK_V1_Contract_SchemaUpdateRequest_ViewForAll
  name: ViewForAll
  nameWithType: SchemaUpdateRequest.ViewForAll
  fullName: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.ViewForAll
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.SchemaPermissionSetIds*
  commentId: Overload:Picturepark.SDK.V1.Contract.SchemaUpdateRequest.SchemaPermissionSetIds
  href: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.html#Picturepark_SDK_V1_Contract_SchemaUpdateRequest_SchemaPermissionSetIds
  name: SchemaPermissionSetIds
  nameWithType: SchemaUpdateRequest.SchemaPermissionSetIds
  fullName: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.SchemaPermissionSetIds
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<string>
  nameWithType: ICollection<string>
  fullName: System.Collections.Generic.ICollection<string>
  nameWithType.vb: ICollection(Of String)
  fullName.vb: System.Collections.Generic.ICollection(Of String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.LayerSchemaIds*
  commentId: Overload:Picturepark.SDK.V1.Contract.SchemaUpdateRequest.LayerSchemaIds
  href: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.html#Picturepark_SDK_V1_Contract_SchemaUpdateRequest_LayerSchemaIds
  name: LayerSchemaIds
  nameWithType: SchemaUpdateRequest.LayerSchemaIds
  fullName: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.LayerSchemaIds
- uid: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.ReferencedInContentSchemaIds*
  commentId: Overload:Picturepark.SDK.V1.Contract.SchemaUpdateRequest.ReferencedInContentSchemaIds
  href: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.html#Picturepark_SDK_V1_Contract_SchemaUpdateRequest_ReferencedInContentSchemaIds
  name: ReferencedInContentSchemaIds
  nameWithType: SchemaUpdateRequest.ReferencedInContentSchemaIds
  fullName: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.ReferencedInContentSchemaIds
- uid: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.MetadataProtection*
  commentId: Overload:Picturepark.SDK.V1.Contract.SchemaUpdateRequest.MetadataProtection
  href: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.html#Picturepark_SDK_V1_Contract_SchemaUpdateRequest_MetadataProtection
  name: MetadataProtection
  nameWithType: SchemaUpdateRequest.MetadataProtection
  fullName: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.MetadataProtection
- uid: Picturepark.SDK.V1.Contract.MetadataProtection
  commentId: T:Picturepark.SDK.V1.Contract.MetadataProtection
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.MetadataProtection.html
  name: MetadataProtection
  nameWithType: MetadataProtection
  fullName: Picturepark.SDK.V1.Contract.MetadataProtection
- uid: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.ToJson*
  commentId: Overload:Picturepark.SDK.V1.Contract.SchemaUpdateRequest.ToJson
  href: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.html#Picturepark_SDK_V1_Contract_SchemaUpdateRequest_ToJson
  name: ToJson
  nameWithType: SchemaUpdateRequest.ToJson
  fullName: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.ToJson
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.FromJson*
  commentId: Overload:Picturepark.SDK.V1.Contract.SchemaUpdateRequest.FromJson
  href: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.html#Picturepark_SDK_V1_Contract_SchemaUpdateRequest_FromJson_System_String_
  name: FromJson
  nameWithType: SchemaUpdateRequest.FromJson
  fullName: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.FromJson
- uid: Picturepark.SDK.V1.Contract.SchemaUpdateRequest
  commentId: T:Picturepark.SDK.V1.Contract.SchemaUpdateRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.SchemaUpdateRequest.html
  name: SchemaUpdateRequest
  nameWithType: SchemaUpdateRequest
  fullName: Picturepark.SDK.V1.Contract.SchemaUpdateRequest
