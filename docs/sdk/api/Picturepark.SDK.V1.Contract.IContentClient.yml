### YamlMime:ManagedReference
items:
- uid: Picturepark.SDK.V1.Contract.IContentClient
  commentId: T:Picturepark.SDK.V1.Contract.IContentClient
  id: IContentClient
  parent: Picturepark.SDK.V1.Contract
  children:
  - Picturepark.SDK.V1.Contract.IContentClient.AggregateAsync(Picturepark.SDK.V1.Contract.ContentAggregationRequest,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.AggregateOnChannelAsync(Picturepark.SDK.V1.Contract.ContentAggregationOnChannelRequest,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.BatchUpdateFieldsByFilterAsync(Picturepark.SDK.V1.Contract.ContentFieldsBatchUpdateFilterRequest,System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.BatchUpdateFieldsByIdsAsync(Picturepark.SDK.V1.Contract.ContentFieldsBatchUpdateRequest,System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.CheckContentSchemaChangeAsync(Picturepark.SDK.V1.Contract.CheckContentSchemaIdChangeRequest,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.CheckUpdateFileAsync(System.String,Picturepark.SDK.V1.Contract.ContentFileUpdateCheckRequest,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.CreateAndAwaitDownloadLinkAsync(Picturepark.SDK.V1.Contract.ContentDownloadLinkCreateRequest,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.CreateAsync(Picturepark.SDK.V1.Contract.ContentCreateRequest,System.Collections.Generic.IEnumerable{Picturepark.SDK.V1.Contract.ContentResolveBehavior},System.Nullable{System.Boolean},System.Nullable{System.TimeSpan},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.CreateCommentAsync(System.String,Picturepark.SDK.V1.Contract.CommentCreateRequest,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.CreateDownloadLinkAsync(Picturepark.SDK.V1.Contract.ContentDownloadLinkCreateRequest,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.CreateManyAsync(Picturepark.SDK.V1.Contract.ContentCreateManyRequest,System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.CreateVersionDownloadLinkAsync(System.String,System.Int32,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.DeleteAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.TimeSpan},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.DeleteCommentAsync(System.String)
  - Picturepark.SDK.V1.Contract.IContentClient.DeleteManyAsync(Picturepark.SDK.V1.Contract.ContentDeleteManyRequest,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.DeleteManyByFilterAsync(Picturepark.SDK.V1.Contract.ContentDeleteManyFilterRequest,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.DeleteVersionAsync(System.String,System.Int32,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.DownloadAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.DownloadFilesAsync(Picturepark.SDK.V1.Contract.ContentSearchResult,System.String,System.Boolean,System.Int32,System.String,System.String,System.Boolean,System.Action{Picturepark.SDK.V1.Contract.ContentDetail},System.Action{System.Exception},System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.DownloadThumbnailAsync(System.String,Picturepark.SDK.V1.Contract.ThumbnailSize,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.EditOutputAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.GetAsync(System.String,System.Collections.Generic.IEnumerable{Picturepark.SDK.V1.Contract.ContentResolveBehavior},System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.GetCommentAsync(System.String)
  - Picturepark.SDK.V1.Contract.IContentClient.GetDownloadLinkAsync(System.String,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.GetManyAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Picturepark.SDK.V1.Contract.ContentResolveBehavior},System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.GetOutputsAsync(System.String,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.GetOutputsManyAsync(Picturepark.SDK.V1.Contract.OutputResolveManyRequest,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.GetReferencesAsync(System.String,Picturepark.SDK.V1.Contract.ContentReferencesRequest,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.GetReferencesManyAsync(Picturepark.SDK.V1.Contract.ContentManyReferencesRequest,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.GetVersionDownloadLinkAsync(System.String,System.Int32,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.GetVersionsAsync(System.String,Picturepark.SDK.V1.Contract.HistoricVersionSearchRequest,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.RepairContentsBatchAsync(Picturepark.SDK.V1.Contract.ContentRepairBatchRequest,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.RepairContentsByFilterAsync(Picturepark.SDK.V1.Contract.ContentRepairByFilterRequest,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.RestoreAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.TimeSpan},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.RestoreManyAsync(Picturepark.SDK.V1.Contract.ContentRestoreManyRequest,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.SearchAsync(Picturepark.SDK.V1.Contract.ContentSearchRequest,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.SearchCommentsAsync(System.String,Picturepark.SDK.V1.Contract.CommentSearchRequest,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.SetDisplayContentAsync(System.String,Picturepark.SDK.V1.Contract.SetDisplayContentRequest,System.Collections.Generic.IEnumerable{Picturepark.SDK.V1.Contract.ContentResolveBehavior},System.Nullable{System.TimeSpan},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.SetManyDisplayContentsAsync(Picturepark.SDK.V1.Contract.SetDisplayContentsManyRequest,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.TransferOwnershipAsync(System.String,Picturepark.SDK.V1.Contract.ContentOwnershipTransferRequest,System.Nullable{System.TimeSpan},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.TransferOwnershipByFilterAsync(Picturepark.SDK.V1.Contract.ContentOwnershipBatchTransferFilterRequest,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.TransferOwnershipManyAsync(Picturepark.SDK.V1.Contract.ContentOwnershipTransferManyRequest,System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.UpdateCommentAsync(System.String,Picturepark.SDK.V1.Contract.CommentEditable)
  - Picturepark.SDK.V1.Contract.IContentClient.UpdateFileAsync(System.String,Picturepark.SDK.V1.Contract.ContentFileUpdateRequest,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.UpdateMetadataAsync(System.String,Picturepark.SDK.V1.Contract.ContentMetadataUpdateRequest,System.Collections.Generic.IEnumerable{Picturepark.SDK.V1.Contract.ContentResolveBehavior},System.Nullable{System.Boolean},System.Nullable{System.TimeSpan},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.UpdateMetadataManyAsync(Picturepark.SDK.V1.Contract.ContentMetadataUpdateManyRequest,System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.UpdatePermissionsAsync(System.String,Picturepark.SDK.V1.Contract.ContentPermissionsUpdateRequest,System.Collections.Generic.IEnumerable{Picturepark.SDK.V1.Contract.ContentResolveBehavior},System.Nullable{System.TimeSpan},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.UpdatePermissionsByFilterAsync(Picturepark.SDK.V1.Contract.ContentPermissionsBatchUpdateFilterRequest,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.UpdatePermissionsManyAsync(Picturepark.SDK.V1.Contract.ContentPermissionsUpdateManyRequest,System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.WaitForBusinessProcessAndReturnResult(System.String,System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)
  - Picturepark.SDK.V1.Contract.IContentClient.WaitForBusinessProcessAndReturnResultWithRequestId(System.String,System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IContentClient
  nameWithType: IContentClient
  fullName: Picturepark.SDK.V1.Contract.IContentClient
  type: Interface
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Partials/IContentClient.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: IContentClient
    path: ../../src/Picturepark.SDK.V1.Contract/Partials/IContentClient.cs
    startLine: 7
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  syntax:
    content: >-
      [GeneratedCode("NSwag", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]

      public interface IContentClient
    content.vb: >-
      <GeneratedCode("NSwag", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")>

      Public Interface IContentClient
  attributes:
  - type: System.CodeDom.Compiler.GeneratedCodeAttribute
    ctor: System.CodeDom.Compiler.GeneratedCodeAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: NSwag
    - type: System.String
      value: 13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))
- uid: Picturepark.SDK.V1.Contract.IContentClient.GetAsync(System.String,System.Collections.Generic.IEnumerable{Picturepark.SDK.V1.Contract.ContentResolveBehavior},System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.GetAsync(System.String,System.Collections.Generic.IEnumerable{Picturepark.SDK.V1.Contract.ContentResolveBehavior},System.Threading.CancellationToken)
  id: GetAsync(System.String,System.Collections.Generic.IEnumerable{Picturepark.SDK.V1.Contract.ContentResolveBehavior},System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: GetAsync(string, IEnumerable<ContentResolveBehavior>, CancellationToken)
  nameWithType: IContentClient.GetAsync(string, IEnumerable<ContentResolveBehavior>, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.GetAsync(string, System.Collections.Generic.IEnumerable<Picturepark.SDK.V1.Contract.ContentResolveBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: GetAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 666
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Get content
  remarks: Gets the content detail by ID.
  example: []
  syntax:
    content: Task<ContentDetail> GetAsync(string id, IEnumerable<ContentResolveBehavior> resolveBehaviors = null, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.String
      description: The content ID.
    - id: resolveBehaviors
      type: System.Collections.Generic.IEnumerable{Picturepark.SDK.V1.Contract.ContentResolveBehavior}
      description: List of enums that control which parts of the content are resolved and returned.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.ContentDetail}
      description: Content detail
    content.vb: Function GetAsync(id As String, resolveBehaviors As IEnumerable(Of ContentResolveBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of ContentDetail)
  overload: Picturepark.SDK.V1.Contract.IContentClient.GetAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.ContentNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.ContentNotFoundException
    description: Content not found
  nameWithType.vb: IContentClient.GetAsync(String, IEnumerable(Of ContentResolveBehavior), CancellationToken)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.GetAsync(String, System.Collections.Generic.IEnumerable(Of Picturepark.SDK.V1.Contract.ContentResolveBehavior), System.Threading.CancellationToken)
  name.vb: GetAsync(String, IEnumerable(Of ContentResolveBehavior), CancellationToken)
- uid: Picturepark.SDK.V1.Contract.IContentClient.DeleteAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.TimeSpan},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.DeleteAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.TimeSpan},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: DeleteAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.TimeSpan},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: DeleteAsync(string, bool?, TimeSpan?, bool?, CancellationToken)
  nameWithType: IContentClient.DeleteAsync(string, bool?, TimeSpan?, bool?, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.DeleteAsync(string, bool?, System.TimeSpan?, bool?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: DeleteAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 690
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Delete content
  remarks: Deletes a single content. The lifecycle is changed to Inactive. After a customer instance specified time (default 30 days), the content and all files will be hard deleted.
  example: []
  syntax:
    content: Task DeleteAsync(string id, bool? forceReferenceRemoval = null, TimeSpan? timeout = null, bool? waitSearchDocCreation = null, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.String
      description: The ID of the content to delete.
    - id: forceReferenceRemoval
      type: System.Nullable{System.Boolean}
      description: A value indicating whether references to the content should be removed.
    - id: timeout
      type: System.Nullable{System.TimeSpan}
      description: >-
        Maximum time to wait for the operation to complete. If timeout is exceeded, the operation is not aborted but continues anyhow.
            <br />            Only the waiting is aborted, and the calls returned.
    - id: waitSearchDocCreation
      type: System.Nullable{System.Boolean}
      description: >-
        Wait for the creation of the search document and the rendered display values.
            <br />            By default the endpoint waits for the search document creation. Passing false, the endpoint will return when the main entity has been created and the creation of the search document has been enqueued but not yet performed.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task
      description: Ok
    content.vb: Function DeleteAsync(id As String, forceReferenceRemoval As Boolean? = Nothing, timeout As TimeSpan? = Nothing, waitSearchDocCreation As Boolean? = Nothing, cancellationToken As CancellationToken = Nothing) As Task
  overload: Picturepark.SDK.V1.Contract.IContentClient.DeleteAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.ReferencesUpdateException
    commentId: T:Picturepark.SDK.V1.Contract.ReferencesUpdateException
    description: Validation prevents deletion of item
  nameWithType.vb: IContentClient.DeleteAsync(String, Boolean?, TimeSpan?, Boolean?, CancellationToken)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.DeleteAsync(String, Boolean?, System.TimeSpan?, Boolean?, System.Threading.CancellationToken)
  name.vb: DeleteAsync(String, Boolean?, TimeSpan?, Boolean?, CancellationToken)
- uid: Picturepark.SDK.V1.Contract.IContentClient.DownloadAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.DownloadAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)
  id: DownloadAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: DownloadAsync(string, string, int?, int?, string, CancellationToken)
  nameWithType: IContentClient.DownloadAsync(string, string, int?, int?, string, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.DownloadAsync(string, string, int?, int?, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: DownloadAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 712
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Download content
  remarks: >-
    Download a single content in a specific output format. To resize images on download specify target width &amp; height. To download only a portion of the file, specify the range parameter.

    <br />To use conversion presets on download, e.g. to crop or rotate, please see [EditOutput](#operation/Content_EditOutput).
  example: []
  syntax:
    content: Task<FileResponse> DownloadAsync(string contentId, string outputFormatId, int? width = null, int? height = null, string range = null, CancellationToken cancellationToken = default)
    parameters:
    - id: contentId
      type: System.String
      description: The content ID.
    - id: outputFormatId
      type: System.String
      description: The output format ID.
    - id: width
      type: System.Nullable{System.Int32}
      description: Optional width in pixels to resize image.
    - id: height
      type: System.Nullable{System.Int32}
      description: Optional height in pixels to resize image.
    - id: range
      type: System.String
      description: 'The range of bytes to download (http range header): bytes={from}-{to} (e.g. bytes=0-100000).'
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.FileResponse}
    content.vb: Function DownloadAsync(contentId As String, outputFormatId As String, width As Integer? = Nothing, height As Integer? = Nothing, range As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of FileResponse)
  overload: Picturepark.SDK.V1.Contract.IContentClient.DownloadAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
  nameWithType.vb: IContentClient.DownloadAsync(String, String, Integer?, Integer?, String, CancellationToken)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.DownloadAsync(String, String, Integer?, Integer?, String, System.Threading.CancellationToken)
  name.vb: DownloadAsync(String, String, Integer?, Integer?, String, CancellationToken)
- uid: Picturepark.SDK.V1.Contract.IContentClient.EditOutputAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.EditOutputAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  id: EditOutputAsync(System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: EditOutputAsync(string, string, string, CancellationToken)
  nameWithType: IContentClient.EditOutputAsync(string, string, string, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.EditOutputAsync(string, string, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: EditOutputAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 731
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Edit output
  remarks: Edits a single content in a specific output format.
  example: []
  syntax:
    content: Task<FileResponse> EditOutputAsync(string contentId, string outputFormatId, string conversionPreset, CancellationToken cancellationToken = default)
    parameters:
    - id: contentId
      type: System.String
      description: The content ID.
    - id: outputFormatId
      type: System.String
      description: The output format ID.
    - id: conversionPreset
      type: System.String
      description: The conversion preset.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.FileResponse}
    content.vb: Function EditOutputAsync(contentId As String, outputFormatId As String, conversionPreset As String, cancellationToken As CancellationToken = Nothing) As Task(Of FileResponse)
  overload: Picturepark.SDK.V1.Contract.IContentClient.EditOutputAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
  nameWithType.vb: IContentClient.EditOutputAsync(String, String, String, CancellationToken)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.EditOutputAsync(String, String, String, System.Threading.CancellationToken)
  name.vb: EditOutputAsync(String, String, String, CancellationToken)
- uid: Picturepark.SDK.V1.Contract.IContentClient.DownloadThumbnailAsync(System.String,Picturepark.SDK.V1.Contract.ThumbnailSize,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.DownloadThumbnailAsync(System.String,Picturepark.SDK.V1.Contract.ThumbnailSize,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)
  id: DownloadThumbnailAsync(System.String,Picturepark.SDK.V1.Contract.ThumbnailSize,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: DownloadThumbnailAsync(string, ThumbnailSize, int?, int?, CancellationToken)
  nameWithType: IContentClient.DownloadThumbnailAsync(string, ThumbnailSize, int?, int?, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.DownloadThumbnailAsync(string, Picturepark.SDK.V1.Contract.ThumbnailSize, int?, int?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: DownloadThumbnailAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 751
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Download thumbnail
  remarks: Provides a lightweight endpoint to download content thumbnails.
  example: []
  syntax:
    content: Task<FileResponse> DownloadThumbnailAsync(string id, ThumbnailSize size, int? width = null, int? height = null, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.String
      description: The content ID.
    - id: size
      type: Picturepark.SDK.V1.Contract.ThumbnailSize
      description: Thumbnail size. Either small, medium or large.
    - id: width
      type: System.Nullable{System.Int32}
      description: Optional width in pixels to resize image.
    - id: height
      type: System.Nullable{System.Int32}
      description: Optional height in pixels to resize image.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.FileResponse}
    content.vb: Function DownloadThumbnailAsync(id As String, size As ThumbnailSize, width As Integer? = Nothing, height As Integer? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of FileResponse)
  overload: Picturepark.SDK.V1.Contract.IContentClient.DownloadThumbnailAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
  nameWithType.vb: IContentClient.DownloadThumbnailAsync(String, ThumbnailSize, Integer?, Integer?, CancellationToken)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.DownloadThumbnailAsync(String, Picturepark.SDK.V1.Contract.ThumbnailSize, Integer?, Integer?, System.Threading.CancellationToken)
  name.vb: DownloadThumbnailAsync(String, ThumbnailSize, Integer?, Integer?, CancellationToken)
- uid: Picturepark.SDK.V1.Contract.IContentClient.CreateAsync(Picturepark.SDK.V1.Contract.ContentCreateRequest,System.Collections.Generic.IEnumerable{Picturepark.SDK.V1.Contract.ContentResolveBehavior},System.Nullable{System.Boolean},System.Nullable{System.TimeSpan},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.CreateAsync(Picturepark.SDK.V1.Contract.ContentCreateRequest,System.Collections.Generic.IEnumerable{Picturepark.SDK.V1.Contract.ContentResolveBehavior},System.Nullable{System.Boolean},System.Nullable{System.TimeSpan},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: CreateAsync(Picturepark.SDK.V1.Contract.ContentCreateRequest,System.Collections.Generic.IEnumerable{Picturepark.SDK.V1.Contract.ContentResolveBehavior},System.Nullable{System.Boolean},System.Nullable{System.TimeSpan},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: CreateAsync(ContentCreateRequest, IEnumerable<ContentResolveBehavior>, bool?, TimeSpan?, bool?, CancellationToken)
  nameWithType: IContentClient.CreateAsync(ContentCreateRequest, IEnumerable<ContentResolveBehavior>, bool?, TimeSpan?, bool?, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.CreateAsync(Picturepark.SDK.V1.Contract.ContentCreateRequest, System.Collections.Generic.IEnumerable<Picturepark.SDK.V1.Contract.ContentResolveBehavior>, bool?, System.TimeSpan?, bool?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: CreateAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 776
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Create content
  remarks: Create a single file-less content item. To import files, see [Transfer](#tag/Transfer).
  example: []
  syntax:
    content: Task<ContentDetail> CreateAsync(ContentCreateRequest request, IEnumerable<ContentResolveBehavior> resolveBehaviors = null, bool? allowMissingDependencies = null, TimeSpan? timeout = null, bool? waitSearchDocCreation = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Picturepark.SDK.V1.Contract.ContentCreateRequest
      description: Content create request.
    - id: resolveBehaviors
      type: System.Collections.Generic.IEnumerable{Picturepark.SDK.V1.Contract.ContentResolveBehavior}
      description: List of enums that control which parts of the content are resolved and returned.
    - id: allowMissingDependencies
      type: System.Nullable{System.Boolean}
      description: Allows creating contents that refer to list items or contents that don't exist in the system.
    - id: timeout
      type: System.Nullable{System.TimeSpan}
      description: >-
        Maximum time to wait for the operation to complete. If timeout is exceeded, the operation is not aborted but continues anyhow.
            <br />            Only the waiting is aborted, and the calls returned.
    - id: waitSearchDocCreation
      type: System.Nullable{System.Boolean}
      description: >-
        Wait for the creation of the search document and the rendered display values.
            <br />            By default the endpoint waits for the search document creation. Passing false, the endpoint will return when the main entity has been created and the creation of the search document has been enqueued but not yet performed.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.ContentDetail}
      description: The content details
    content.vb: Function CreateAsync(request As ContentCreateRequest, resolveBehaviors As IEnumerable(Of ContentResolveBehavior) = Nothing, allowMissingDependencies As Boolean? = Nothing, timeout As TimeSpan? = Nothing, waitSearchDocCreation As Boolean? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of ContentDetail)
  overload: Picturepark.SDK.V1.Contract.IContentClient.CreateAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.BusinessProcessLifeCycleNotHitException
    commentId: T:Picturepark.SDK.V1.Contract.BusinessProcessLifeCycleNotHitException
    description: The specified wait timeout exceeded
  nameWithType.vb: IContentClient.CreateAsync(ContentCreateRequest, IEnumerable(Of ContentResolveBehavior), Boolean?, TimeSpan?, Boolean?, CancellationToken)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.CreateAsync(Picturepark.SDK.V1.Contract.ContentCreateRequest, System.Collections.Generic.IEnumerable(Of Picturepark.SDK.V1.Contract.ContentResolveBehavior), Boolean?, System.TimeSpan?, Boolean?, System.Threading.CancellationToken)
  name.vb: CreateAsync(ContentCreateRequest, IEnumerable(Of ContentResolveBehavior), Boolean?, TimeSpan?, Boolean?, CancellationToken)
- uid: Picturepark.SDK.V1.Contract.IContentClient.GetManyAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Picturepark.SDK.V1.Contract.ContentResolveBehavior},System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.GetManyAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Picturepark.SDK.V1.Contract.ContentResolveBehavior},System.Threading.CancellationToken)
  id: GetManyAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Picturepark.SDK.V1.Contract.ContentResolveBehavior},System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: GetManyAsync(IEnumerable<string>, IEnumerable<ContentResolveBehavior>, CancellationToken)
  nameWithType: IContentClient.GetManyAsync(IEnumerable<string>, IEnumerable<ContentResolveBehavior>, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.GetManyAsync(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<Picturepark.SDK.V1.Contract.ContentResolveBehavior>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: GetManyAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 798
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Get multiple contents
  remarks: >-
    Gets multiple content details by IDs.

    <br />Can fetch 100 contents at most.
  example: []
  syntax:
    content: Task<ICollection<ContentDetail>> GetManyAsync(IEnumerable<string> ids, IEnumerable<ContentResolveBehavior> resolveBehaviors = null, CancellationToken cancellationToken = default)
    parameters:
    - id: ids
      type: System.Collections.Generic.IEnumerable{System.String}
      description: List of content IDs
    - id: resolveBehaviors
      type: System.Collections.Generic.IEnumerable{Picturepark.SDK.V1.Contract.ContentResolveBehavior}
      description: List of enums that control which parts of the content are resolved and returned.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.ContentDetail}}
      description: List of Content detail
    content.vb: Function GetManyAsync(ids As IEnumerable(Of String), resolveBehaviors As IEnumerable(Of ContentResolveBehavior) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of ICollection(Of ContentDetail))
  overload: Picturepark.SDK.V1.Contract.IContentClient.GetManyAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.RequestSizeLimitExceededException
    commentId: T:Picturepark.SDK.V1.Contract.RequestSizeLimitExceededException
    description: List of IDs exceeded maximum size
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.ContentNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.ContentNotFoundException
    description: One or more contents not found
  nameWithType.vb: IContentClient.GetManyAsync(IEnumerable(Of String), IEnumerable(Of ContentResolveBehavior), CancellationToken)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.GetManyAsync(System.Collections.Generic.IEnumerable(Of String), System.Collections.Generic.IEnumerable(Of Picturepark.SDK.V1.Contract.ContentResolveBehavior), System.Threading.CancellationToken)
  name.vb: GetManyAsync(IEnumerable(Of String), IEnumerable(Of ContentResolveBehavior), CancellationToken)
- uid: Picturepark.SDK.V1.Contract.IContentClient.UpdateMetadataAsync(System.String,Picturepark.SDK.V1.Contract.ContentMetadataUpdateRequest,System.Collections.Generic.IEnumerable{Picturepark.SDK.V1.Contract.ContentResolveBehavior},System.Nullable{System.Boolean},System.Nullable{System.TimeSpan},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.UpdateMetadataAsync(System.String,Picturepark.SDK.V1.Contract.ContentMetadataUpdateRequest,System.Collections.Generic.IEnumerable{Picturepark.SDK.V1.Contract.ContentResolveBehavior},System.Nullable{System.Boolean},System.Nullable{System.TimeSpan},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: UpdateMetadataAsync(System.String,Picturepark.SDK.V1.Contract.ContentMetadataUpdateRequest,System.Collections.Generic.IEnumerable{Picturepark.SDK.V1.Contract.ContentResolveBehavior},System.Nullable{System.Boolean},System.Nullable{System.TimeSpan},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: UpdateMetadataAsync(string, ContentMetadataUpdateRequest, IEnumerable<ContentResolveBehavior>, bool?, TimeSpan?, bool?, CancellationToken)
  nameWithType: IContentClient.UpdateMetadataAsync(string, ContentMetadataUpdateRequest, IEnumerable<ContentResolveBehavior>, bool?, TimeSpan?, bool?, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.UpdateMetadataAsync(string, Picturepark.SDK.V1.Contract.ContentMetadataUpdateRequest, System.Collections.Generic.IEnumerable<Picturepark.SDK.V1.Contract.ContentResolveBehavior>, bool?, System.TimeSpan?, bool?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: UpdateMetadataAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 827
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Update content metadata
  remarks: >-
    Updates metadata layers of a specified content. For file-less contents, the content itself can be updated as well.

    <br />The update is flexible enough to allow the update of only the fields that are specified in the request (leaving untouched the other existing ones) or to allow

    <br />the entire replacement of all the values of a schema or even of all the schemas.

    <br />See [ShouldUpdateMetadata](https://github.com/Picturepark/Picturepark.SDK.DotNet/blob/master/src/Picturepark.SDK.V1.Tests/Clients/ContentTests.cs) tests.
  example: []
  syntax:
    content: Task<ContentDetail> UpdateMetadataAsync(string id, ContentMetadataUpdateRequest request, IEnumerable<ContentResolveBehavior> resolveBehaviors = null, bool? allowMissingDependencies = null, TimeSpan? timeout = null, bool? waitSearchDocCreation = null, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.String
      description: The content ID.
    - id: request
      type: Picturepark.SDK.V1.Contract.ContentMetadataUpdateRequest
      description: Content metadata update request.
    - id: resolveBehaviors
      type: System.Collections.Generic.IEnumerable{Picturepark.SDK.V1.Contract.ContentResolveBehavior}
      description: List of enums that control which parts of the content are resolved and returned.
    - id: allowMissingDependencies
      type: System.Nullable{System.Boolean}
      description: Allows storing references to list items or contents that don't exist in the system.
    - id: timeout
      type: System.Nullable{System.TimeSpan}
      description: >-
        Maximum time to wait for the operation to complete. If timeout is exceeded, the operation is not aborted but continues anyhow.
            <br />            Only the waiting is aborted, and the calls returned.
    - id: waitSearchDocCreation
      type: System.Nullable{System.Boolean}
      description: >-
        Wait for the creation of the search document and the rendered display values.
            <br />            By default the endpoint waits for the search document creation. Passing false, the endpoint will return when the main entity has been created and the creation of the search document has been enqueued but not yet performed.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.ContentDetail}
      description: Content detail
    content.vb: Function UpdateMetadataAsync(id As String, request As ContentMetadataUpdateRequest, resolveBehaviors As IEnumerable(Of ContentResolveBehavior) = Nothing, allowMissingDependencies As Boolean? = Nothing, timeout As TimeSpan? = Nothing, waitSearchDocCreation As Boolean? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of ContentDetail)
  overload: Picturepark.SDK.V1.Contract.IContentClient.UpdateMetadataAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.BusinessProcessLifeCycleNotHitException
    commentId: T:Picturepark.SDK.V1.Contract.BusinessProcessLifeCycleNotHitException
    description: The specified wait timeout exceeded
  nameWithType.vb: IContentClient.UpdateMetadataAsync(String, ContentMetadataUpdateRequest, IEnumerable(Of ContentResolveBehavior), Boolean?, TimeSpan?, Boolean?, CancellationToken)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.UpdateMetadataAsync(String, Picturepark.SDK.V1.Contract.ContentMetadataUpdateRequest, System.Collections.Generic.IEnumerable(Of Picturepark.SDK.V1.Contract.ContentResolveBehavior), Boolean?, System.TimeSpan?, Boolean?, System.Threading.CancellationToken)
  name.vb: UpdateMetadataAsync(String, ContentMetadataUpdateRequest, IEnumerable(Of ContentResolveBehavior), Boolean?, TimeSpan?, Boolean?, CancellationToken)
- uid: Picturepark.SDK.V1.Contract.IContentClient.UpdatePermissionsAsync(System.String,Picturepark.SDK.V1.Contract.ContentPermissionsUpdateRequest,System.Collections.Generic.IEnumerable{Picturepark.SDK.V1.Contract.ContentResolveBehavior},System.Nullable{System.TimeSpan},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.UpdatePermissionsAsync(System.String,Picturepark.SDK.V1.Contract.ContentPermissionsUpdateRequest,System.Collections.Generic.IEnumerable{Picturepark.SDK.V1.Contract.ContentResolveBehavior},System.Nullable{System.TimeSpan},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: UpdatePermissionsAsync(System.String,Picturepark.SDK.V1.Contract.ContentPermissionsUpdateRequest,System.Collections.Generic.IEnumerable{Picturepark.SDK.V1.Contract.ContentResolveBehavior},System.Nullable{System.TimeSpan},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: UpdatePermissionsAsync(string, ContentPermissionsUpdateRequest, IEnumerable<ContentResolveBehavior>, TimeSpan?, bool?, CancellationToken)
  nameWithType: IContentClient.UpdatePermissionsAsync(string, ContentPermissionsUpdateRequest, IEnumerable<ContentResolveBehavior>, TimeSpan?, bool?, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.UpdatePermissionsAsync(string, Picturepark.SDK.V1.Contract.ContentPermissionsUpdateRequest, System.Collections.Generic.IEnumerable<Picturepark.SDK.V1.Contract.ContentResolveBehavior>, System.TimeSpan?, bool?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: UpdatePermissionsAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 852
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Update content permissions
  remarks: Updates the content permission sets of a single content. To get a list of available content permission sets, see [Permissions](operation/Permission_SearchContentPermissions)
  example: []
  syntax:
    content: Task<ContentDetail> UpdatePermissionsAsync(string id, ContentPermissionsUpdateRequest request, IEnumerable<ContentResolveBehavior> resolveBehaviors = null, TimeSpan? timeout = null, bool? waitSearchDocCreation = null, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.String
      description: The content ID.
    - id: request
      type: Picturepark.SDK.V1.Contract.ContentPermissionsUpdateRequest
      description: Content permissions update request.
    - id: resolveBehaviors
      type: System.Collections.Generic.IEnumerable{Picturepark.SDK.V1.Contract.ContentResolveBehavior}
      description: List of enums that control which parts of the content are resolved and returned.
    - id: timeout
      type: System.Nullable{System.TimeSpan}
      description: >-
        Maximum time to wait for the operation to complete. If timeout is exceeded, the operation is not aborted but continues anyhow.
            <br />            Only the waiting is aborted, and the calls returned.
    - id: waitSearchDocCreation
      type: System.Nullable{System.Boolean}
      description: >-
        Wait for the creation of the search document and the rendered display values.
            <br />            By default the endpoint waits for the search document creation. Passing false, the endpoint will return when the main entity has been created and the creation of the search document has been enqueued but not yet performed.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.ContentDetail}
      description: Content detail
    content.vb: Function UpdatePermissionsAsync(id As String, request As ContentPermissionsUpdateRequest, resolveBehaviors As IEnumerable(Of ContentResolveBehavior) = Nothing, timeout As TimeSpan? = Nothing, waitSearchDocCreation As Boolean? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of ContentDetail)
  overload: Picturepark.SDK.V1.Contract.IContentClient.UpdatePermissionsAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.BusinessProcessLifeCycleNotHitException
    commentId: T:Picturepark.SDK.V1.Contract.BusinessProcessLifeCycleNotHitException
    description: The specified wait timeout exceeded
  nameWithType.vb: IContentClient.UpdatePermissionsAsync(String, ContentPermissionsUpdateRequest, IEnumerable(Of ContentResolveBehavior), TimeSpan?, Boolean?, CancellationToken)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.UpdatePermissionsAsync(String, Picturepark.SDK.V1.Contract.ContentPermissionsUpdateRequest, System.Collections.Generic.IEnumerable(Of Picturepark.SDK.V1.Contract.ContentResolveBehavior), System.TimeSpan?, Boolean?, System.Threading.CancellationToken)
  name.vb: UpdatePermissionsAsync(String, ContentPermissionsUpdateRequest, IEnumerable(Of ContentResolveBehavior), TimeSpan?, Boolean?, CancellationToken)
- uid: Picturepark.SDK.V1.Contract.IContentClient.RestoreAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.TimeSpan},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.RestoreAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.TimeSpan},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: RestoreAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.TimeSpan},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: RestoreAsync(string, bool?, TimeSpan?, bool?, CancellationToken)
  nameWithType: IContentClient.RestoreAsync(string, bool?, TimeSpan?, bool?, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.RestoreAsync(string, bool?, System.TimeSpan?, bool?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: RestoreAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 875
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Restore content
  remarks: Restores a previously deleted content.
  example: []
  syntax:
    content: Task RestoreAsync(string id, bool? allowMissingDependencies = null, TimeSpan? timeout = null, bool? waitSearchDocCreation = null, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.String
      description: The content ID.
    - id: allowMissingDependencies
      type: System.Nullable{System.Boolean}
      description: Allows restoring contents that refer to list items or contents that don't exist in the system.
    - id: timeout
      type: System.Nullable{System.TimeSpan}
      description: >-
        Maximum time to wait for the operation to complete. If timeout is exceeded, the operation is not aborted but continues anyhow.
            <br />            Only the waiting is aborted, and the calls returned.
    - id: waitSearchDocCreation
      type: System.Nullable{System.Boolean}
      description: >-
        Wait for the creation of the search document and the rendered display values.
            <br />            By default the endpoint waits for the search document creation. Passing false, the endpoint will return when the main entity has been created and the creation of the search document has been enqueued but not yet performed.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task
      description: Ok
    content.vb: Function RestoreAsync(id As String, allowMissingDependencies As Boolean? = Nothing, timeout As TimeSpan? = Nothing, waitSearchDocCreation As Boolean? = Nothing, cancellationToken As CancellationToken = Nothing) As Task
  overload: Picturepark.SDK.V1.Contract.IContentClient.RestoreAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
  nameWithType.vb: IContentClient.RestoreAsync(String, Boolean?, TimeSpan?, Boolean?, CancellationToken)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.RestoreAsync(String, Boolean?, System.TimeSpan?, Boolean?, System.Threading.CancellationToken)
  name.vb: RestoreAsync(String, Boolean?, TimeSpan?, Boolean?, CancellationToken)
- uid: Picturepark.SDK.V1.Contract.IContentClient.TransferOwnershipAsync(System.String,Picturepark.SDK.V1.Contract.ContentOwnershipTransferRequest,System.Nullable{System.TimeSpan},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.TransferOwnershipAsync(System.String,Picturepark.SDK.V1.Contract.ContentOwnershipTransferRequest,System.Nullable{System.TimeSpan},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: TransferOwnershipAsync(System.String,Picturepark.SDK.V1.Contract.ContentOwnershipTransferRequest,System.Nullable{System.TimeSpan},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: TransferOwnershipAsync(string, ContentOwnershipTransferRequest, TimeSpan?, bool?, CancellationToken)
  nameWithType: IContentClient.TransferOwnershipAsync(string, ContentOwnershipTransferRequest, TimeSpan?, bool?, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.TransferOwnershipAsync(string, Picturepark.SDK.V1.Contract.ContentOwnershipTransferRequest, System.TimeSpan?, bool?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: TransferOwnershipAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 898
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Transfer content ownership
  remarks: Transfers ownership of a content to another user. The target user must have the ManageContent UserRight.
  example: []
  syntax:
    content: Task TransferOwnershipAsync(string id, ContentOwnershipTransferRequest request, TimeSpan? timeout = null, bool? waitSearchDocCreation = null, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.String
      description: The content ID.
    - id: request
      type: Picturepark.SDK.V1.Contract.ContentOwnershipTransferRequest
      description: Content ownership transfer request.
    - id: timeout
      type: System.Nullable{System.TimeSpan}
      description: >-
        Maximum time to wait for the operation to complete. If timeout is exceeded, the operation is not aborted but continues anyhow.
            <br />            Only the waiting is aborted, and the calls returned.
    - id: waitSearchDocCreation
      type: System.Nullable{System.Boolean}
      description: >-
        Wait for the creation of the search document and the rendered display values.
            <br />            By default the endpoint waits for the search document creation. Passing false, the endpoint will return when the main entity has been created and the creation of the search document has been enqueued but not yet performed.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task
      description: Ok
    content.vb: Function TransferOwnershipAsync(id As String, request As ContentOwnershipTransferRequest, timeout As TimeSpan? = Nothing, waitSearchDocCreation As Boolean? = Nothing, cancellationToken As CancellationToken = Nothing) As Task
  overload: Picturepark.SDK.V1.Contract.IContentClient.TransferOwnershipAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
  nameWithType.vb: IContentClient.TransferOwnershipAsync(String, ContentOwnershipTransferRequest, TimeSpan?, Boolean?, CancellationToken)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.TransferOwnershipAsync(String, Picturepark.SDK.V1.Contract.ContentOwnershipTransferRequest, System.TimeSpan?, Boolean?, System.Threading.CancellationToken)
  name.vb: TransferOwnershipAsync(String, ContentOwnershipTransferRequest, TimeSpan?, Boolean?, CancellationToken)
- uid: Picturepark.SDK.V1.Contract.IContentClient.CheckContentSchemaChangeAsync(Picturepark.SDK.V1.Contract.CheckContentSchemaIdChangeRequest,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.CheckContentSchemaChangeAsync(Picturepark.SDK.V1.Contract.CheckContentSchemaIdChangeRequest,System.Threading.CancellationToken)
  id: CheckContentSchemaChangeAsync(Picturepark.SDK.V1.Contract.CheckContentSchemaIdChangeRequest,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: CheckContentSchemaChangeAsync(CheckContentSchemaIdChangeRequest, CancellationToken)
  nameWithType: IContentClient.CheckContentSchemaChangeAsync(CheckContentSchemaIdChangeRequest, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.CheckContentSchemaChangeAsync(Picturepark.SDK.V1.Contract.CheckContentSchemaIdChangeRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: CheckContentSchemaChangeAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 913
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Check if given changes of ContentSchemaId are possible without incurring data loss (due to assigned Layers and LayerSchemaIds)
  example: []
  syntax:
    content: Task<CheckContentSchemaIdChangeResult> CheckContentSchemaChangeAsync(CheckContentSchemaIdChangeRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Picturepark.SDK.V1.Contract.CheckContentSchemaIdChangeRequest
      description: Changes to check
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.CheckContentSchemaIdChangeResult}
      description: Result indicating if data loss would occur for given requests
    content.vb: Function CheckContentSchemaChangeAsync(request As CheckContentSchemaIdChangeRequest, cancellationToken As CancellationToken = Nothing) As Task(Of CheckContentSchemaIdChangeResult)
  overload: Picturepark.SDK.V1.Contract.IContentClient.CheckContentSchemaChangeAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
- uid: Picturepark.SDK.V1.Contract.IContentClient.CheckUpdateFileAsync(System.String,Picturepark.SDK.V1.Contract.ContentFileUpdateCheckRequest,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.CheckUpdateFileAsync(System.String,Picturepark.SDK.V1.Contract.ContentFileUpdateCheckRequest,System.Threading.CancellationToken)
  id: CheckUpdateFileAsync(System.String,Picturepark.SDK.V1.Contract.ContentFileUpdateCheckRequest,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: CheckUpdateFileAsync(string, ContentFileUpdateCheckRequest, CancellationToken)
  nameWithType: IContentClient.CheckUpdateFileAsync(string, ContentFileUpdateCheckRequest, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.CheckUpdateFileAsync(string, Picturepark.SDK.V1.Contract.ContentFileUpdateCheckRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: CheckUpdateFileAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 929
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Check if a file update is possible without incurring data loss
  example: []
  syntax:
    content: Task<CheckContentSchemaIdChangeResult> CheckUpdateFileAsync(string id, ContentFileUpdateCheckRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.String
      description: The ID of the content to replace.
    - id: request
      type: Picturepark.SDK.V1.Contract.ContentFileUpdateCheckRequest
      description: Content file update request
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.CheckContentSchemaIdChangeResult}
      description: Information about data loss, if any
    content.vb: Function CheckUpdateFileAsync(id As String, request As ContentFileUpdateCheckRequest, cancellationToken As CancellationToken = Nothing) As Task(Of CheckContentSchemaIdChangeResult)
  overload: Picturepark.SDK.V1.Contract.IContentClient.CheckUpdateFileAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
  nameWithType.vb: IContentClient.CheckUpdateFileAsync(String, ContentFileUpdateCheckRequest, CancellationToken)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.CheckUpdateFileAsync(String, Picturepark.SDK.V1.Contract.ContentFileUpdateCheckRequest, System.Threading.CancellationToken)
  name.vb: CheckUpdateFileAsync(String, ContentFileUpdateCheckRequest, CancellationToken)
- uid: Picturepark.SDK.V1.Contract.IContentClient.UpdateFileAsync(System.String,Picturepark.SDK.V1.Contract.ContentFileUpdateRequest,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.UpdateFileAsync(System.String,Picturepark.SDK.V1.Contract.ContentFileUpdateRequest,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: UpdateFileAsync(System.String,Picturepark.SDK.V1.Contract.ContentFileUpdateRequest,System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: UpdateFileAsync(string, ContentFileUpdateRequest, bool?, CancellationToken)
  nameWithType: IContentClient.UpdateFileAsync(string, ContentFileUpdateRequest, bool?, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.UpdateFileAsync(string, Picturepark.SDK.V1.Contract.ContentFileUpdateRequest, bool?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: UpdateFileAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 950
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Update content file
  remarks: >-
    Updates binary file of existing content. The file must already be uploaded before calling this endpoint. See [Transfer](#tag/Transfer).

    <br />The operation is executed asynchronous and is not awaited. Call [WaitForCompletion](#operation/BusinessProcess_WaitForCompletion) to wait for the process to finish.
  example: []
  syntax:
    content: Task<BusinessProcess> UpdateFileAsync(string id, ContentFileUpdateRequest request, bool? waitSearchDocCreation = null, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.String
      description: The ID of the content to replace.
    - id: request
      type: Picturepark.SDK.V1.Contract.ContentFileUpdateRequest
      description: Content file update request
    - id: waitSearchDocCreation
      type: System.Nullable{System.Boolean}
      description: Wait for the creation of the search document and the rendered display values.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.BusinessProcess}
      description: Business process
    content.vb: Function UpdateFileAsync(id As String, request As ContentFileUpdateRequest, waitSearchDocCreation As Boolean? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of BusinessProcess)
  overload: Picturepark.SDK.V1.Contract.IContentClient.UpdateFileAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
  nameWithType.vb: IContentClient.UpdateFileAsync(String, ContentFileUpdateRequest, Boolean?, CancellationToken)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.UpdateFileAsync(String, Picturepark.SDK.V1.Contract.ContentFileUpdateRequest, Boolean?, System.Threading.CancellationToken)
  name.vb: UpdateFileAsync(String, ContentFileUpdateRequest, Boolean?, CancellationToken)
- uid: Picturepark.SDK.V1.Contract.IContentClient.GetReferencesAsync(System.String,Picturepark.SDK.V1.Contract.ContentReferencesRequest,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.GetReferencesAsync(System.String,Picturepark.SDK.V1.Contract.ContentReferencesRequest,System.Threading.CancellationToken)
  id: GetReferencesAsync(System.String,Picturepark.SDK.V1.Contract.ContentReferencesRequest,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: GetReferencesAsync(string, ContentReferencesRequest, CancellationToken)
  nameWithType: IContentClient.GetReferencesAsync(string, ContentReferencesRequest, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.GetReferencesAsync(string, Picturepark.SDK.V1.Contract.ContentReferencesRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: GetReferencesAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 969
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Get content references
  remarks: Gets the references (list items, contents, shares) to a single content.
  example: []
  syntax:
    content: Task<ContentReferencesResult> GetReferencesAsync(string id, ContentReferencesRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.String
      description: The content ID whose references to retrieve.
    - id: request
      type: Picturepark.SDK.V1.Contract.ContentReferencesRequest
      description: Content references request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.ContentReferencesResult}
      description: ContentReferencesResult
    content.vb: Function GetReferencesAsync(id As String, request As ContentReferencesRequest, cancellationToken As CancellationToken = Nothing) As Task(Of ContentReferencesResult)
  overload: Picturepark.SDK.V1.Contract.IContentClient.GetReferencesAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
  nameWithType.vb: IContentClient.GetReferencesAsync(String, ContentReferencesRequest, CancellationToken)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.GetReferencesAsync(String, Picturepark.SDK.V1.Contract.ContentReferencesRequest, System.Threading.CancellationToken)
  name.vb: GetReferencesAsync(String, ContentReferencesRequest, CancellationToken)
- uid: Picturepark.SDK.V1.Contract.IContentClient.GetOutputsAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.GetOutputsAsync(System.String,System.Threading.CancellationToken)
  id: GetOutputsAsync(System.String,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: GetOutputsAsync(string, CancellationToken)
  nameWithType: IContentClient.GetOutputsAsync(string, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.GetOutputsAsync(string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: GetOutputsAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 987
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Get outputs
  remarks: Retrieves all outputs available for content, also dynamic rendered outputs are returned, if requested.
  example: []
  syntax:
    content: Task<ICollection<OutputResolveResult>> GetOutputsAsync(string id, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.String
      description: ID of content.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.OutputResolveResult}}
      description: Array of Result of output resolution.
    content.vb: Function GetOutputsAsync(id As String, cancellationToken As CancellationToken = Nothing) As Task(Of ICollection(Of OutputResolveResult))
  overload: Picturepark.SDK.V1.Contract.IContentClient.GetOutputsAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
  nameWithType.vb: IContentClient.GetOutputsAsync(String, CancellationToken)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.GetOutputsAsync(String, System.Threading.CancellationToken)
  name.vb: GetOutputsAsync(String, CancellationToken)
- uid: Picturepark.SDK.V1.Contract.IContentClient.CreateDownloadLinkAsync(Picturepark.SDK.V1.Contract.ContentDownloadLinkCreateRequest,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.CreateDownloadLinkAsync(Picturepark.SDK.V1.Contract.ContentDownloadLinkCreateRequest,System.Threading.CancellationToken)
  id: CreateDownloadLinkAsync(Picturepark.SDK.V1.Contract.ContentDownloadLinkCreateRequest,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: CreateDownloadLinkAsync(ContentDownloadLinkCreateRequest, CancellationToken)
  nameWithType: IContentClient.CreateDownloadLinkAsync(ContentDownloadLinkCreateRequest, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.CreateDownloadLinkAsync(Picturepark.SDK.V1.Contract.ContentDownloadLinkCreateRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: CreateDownloadLinkAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 1005
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Create download link
  remarks: Creates a download link for one or more contents. The operation is executed asynchronously and is not awaited. Call [WaitForCompletion](#operation/BusinessProcess_WaitForCompletion) to wait for the process to finish.
  example: []
  syntax:
    content: Task<BusinessProcess> CreateDownloadLinkAsync(ContentDownloadLinkCreateRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Picturepark.SDK.V1.Contract.ContentDownloadLinkCreateRequest
      description: Content download link request
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.BusinessProcess}
      description: Download link
    content.vb: Function CreateDownloadLinkAsync(request As ContentDownloadLinkCreateRequest, cancellationToken As CancellationToken = Nothing) As Task(Of BusinessProcess)
  overload: Picturepark.SDK.V1.Contract.IContentClient.CreateDownloadLinkAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
- uid: Picturepark.SDK.V1.Contract.IContentClient.GetDownloadLinkAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.GetDownloadLinkAsync(System.String,System.Threading.CancellationToken)
  id: GetDownloadLinkAsync(System.String,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: GetDownloadLinkAsync(string, CancellationToken)
  nameWithType: IContentClient.GetDownloadLinkAsync(string, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.GetDownloadLinkAsync(string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: GetDownloadLinkAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 1020
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Resolve download token to Url
  example: []
  syntax:
    content: Task<DownloadLink> GetDownloadLinkAsync(string token, CancellationToken cancellationToken = default)
    parameters:
    - id: token
      type: System.String
      description: Token
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.DownloadLink}
      description: Download link information
    content.vb: Function GetDownloadLinkAsync(token As String, cancellationToken As CancellationToken = Nothing) As Task(Of DownloadLink)
  overload: Picturepark.SDK.V1.Contract.IContentClient.GetDownloadLinkAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
  nameWithType.vb: IContentClient.GetDownloadLinkAsync(String, CancellationToken)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.GetDownloadLinkAsync(String, System.Threading.CancellationToken)
  name.vb: GetDownloadLinkAsync(String, CancellationToken)
- uid: Picturepark.SDK.V1.Contract.IContentClient.DeleteManyAsync(Picturepark.SDK.V1.Contract.ContentDeleteManyRequest,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.DeleteManyAsync(Picturepark.SDK.V1.Contract.ContentDeleteManyRequest,System.Threading.CancellationToken)
  id: DeleteManyAsync(Picturepark.SDK.V1.Contract.ContentDeleteManyRequest,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: DeleteManyAsync(ContentDeleteManyRequest, CancellationToken)
  nameWithType: IContentClient.DeleteManyAsync(ContentDeleteManyRequest, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.DeleteManyAsync(Picturepark.SDK.V1.Contract.ContentDeleteManyRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: DeleteManyAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 1039
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Delete multiple contents
  remarks: >-
    Deletes multiple contents. The lifecycle is changed to Inactive. After a customer instance specified time (default 30 days), the content and all files will be hard deleted.

    <br />The operation is executed asynchronous and is not awaited. Call [WaitForCompletion](#operation/BusinessProcess_WaitForCompletion) to wait for the process to finish.
  example: []
  syntax:
    content: Task<BusinessProcess> DeleteManyAsync(ContentDeleteManyRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Picturepark.SDK.V1.Contract.ContentDeleteManyRequest
      description: Delete many request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.BusinessProcess}
      description: Business process
    content.vb: Function DeleteManyAsync(request As ContentDeleteManyRequest, cancellationToken As CancellationToken = Nothing) As Task(Of BusinessProcess)
  overload: Picturepark.SDK.V1.Contract.IContentClient.DeleteManyAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
- uid: Picturepark.SDK.V1.Contract.IContentClient.DeleteManyByFilterAsync(Picturepark.SDK.V1.Contract.ContentDeleteManyFilterRequest,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.DeleteManyByFilterAsync(Picturepark.SDK.V1.Contract.ContentDeleteManyFilterRequest,System.Threading.CancellationToken)
  id: DeleteManyByFilterAsync(Picturepark.SDK.V1.Contract.ContentDeleteManyFilterRequest,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: DeleteManyByFilterAsync(ContentDeleteManyFilterRequest, CancellationToken)
  nameWithType: IContentClient.DeleteManyByFilterAsync(ContentDeleteManyFilterRequest, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.DeleteManyByFilterAsync(Picturepark.SDK.V1.Contract.ContentDeleteManyFilterRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: DeleteManyByFilterAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 1059
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Delete multiple contents - by filter
  remarks: >-
    Deletes multiple contents. A filter must be provided to limit the deletion to specific contents.

    <br />The lifecycle is changed to Inactive. After a customer instance specified time (default 30 days), the content and all files will be hard deleted.

    <br />The operation is executed asynchronously and is not awaited. Call [WaitForCompletion](#operation/BusinessProcess_WaitForCompletion) to wait for the process to finish.
  example: []
  syntax:
    content: Task<BusinessProcess> DeleteManyByFilterAsync(ContentDeleteManyFilterRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Picturepark.SDK.V1.Contract.ContentDeleteManyFilterRequest
      description: Delete many by filter request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.BusinessProcess}
      description: Business process
    content.vb: Function DeleteManyByFilterAsync(request As ContentDeleteManyFilterRequest, cancellationToken As CancellationToken = Nothing) As Task(Of BusinessProcess)
  overload: Picturepark.SDK.V1.Contract.IContentClient.DeleteManyByFilterAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
- uid: Picturepark.SDK.V1.Contract.IContentClient.RestoreManyAsync(Picturepark.SDK.V1.Contract.ContentRestoreManyRequest,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.RestoreManyAsync(Picturepark.SDK.V1.Contract.ContentRestoreManyRequest,System.Threading.CancellationToken)
  id: RestoreManyAsync(Picturepark.SDK.V1.Contract.ContentRestoreManyRequest,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: RestoreManyAsync(ContentRestoreManyRequest, CancellationToken)
  nameWithType: IContentClient.RestoreManyAsync(ContentRestoreManyRequest, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.RestoreManyAsync(Picturepark.SDK.V1.Contract.ContentRestoreManyRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: RestoreManyAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 1078
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Restore multiple contents
  remarks: >-
    Restores previously deleted contents.

    <br />The operation is executed asynchronous and is not awaited. Call [WaitForCompletion](#operation/BusinessProcess_WaitForCompletion) to wait for the process to finish.
  example: []
  syntax:
    content: Task<BusinessProcess> RestoreManyAsync(ContentRestoreManyRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Picturepark.SDK.V1.Contract.ContentRestoreManyRequest
      description: Content restore many request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.BusinessProcess}
      description: Business process
    content.vb: Function RestoreManyAsync(request As ContentRestoreManyRequest, cancellationToken As CancellationToken = Nothing) As Task(Of BusinessProcess)
  overload: Picturepark.SDK.V1.Contract.IContentClient.RestoreManyAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
- uid: Picturepark.SDK.V1.Contract.IContentClient.GetReferencesManyAsync(Picturepark.SDK.V1.Contract.ContentManyReferencesRequest,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.GetReferencesManyAsync(Picturepark.SDK.V1.Contract.ContentManyReferencesRequest,System.Threading.CancellationToken)
  id: GetReferencesManyAsync(Picturepark.SDK.V1.Contract.ContentManyReferencesRequest,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: GetReferencesManyAsync(ContentManyReferencesRequest, CancellationToken)
  nameWithType: IContentClient.GetReferencesManyAsync(ContentManyReferencesRequest, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.GetReferencesManyAsync(Picturepark.SDK.V1.Contract.ContentManyReferencesRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: GetReferencesManyAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 1096
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Get many content references
  remarks: Gets references (list items, contents, shares) to content documents defined by IDs.
  example: []
  syntax:
    content: Task<ContentReferencesResult> GetReferencesManyAsync(ContentManyReferencesRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Picturepark.SDK.V1.Contract.ContentManyReferencesRequest
      description: Content many references request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.ContentReferencesResult}
      description: Content references result
    content.vb: Function GetReferencesManyAsync(request As ContentManyReferencesRequest, cancellationToken As CancellationToken = Nothing) As Task(Of ContentReferencesResult)
  overload: Picturepark.SDK.V1.Contract.IContentClient.GetReferencesManyAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
- uid: Picturepark.SDK.V1.Contract.IContentClient.GetOutputsManyAsync(Picturepark.SDK.V1.Contract.OutputResolveManyRequest,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.GetOutputsManyAsync(Picturepark.SDK.V1.Contract.OutputResolveManyRequest,System.Threading.CancellationToken)
  id: GetOutputsManyAsync(Picturepark.SDK.V1.Contract.OutputResolveManyRequest,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: GetOutputsManyAsync(OutputResolveManyRequest, CancellationToken)
  nameWithType: IContentClient.GetOutputsManyAsync(OutputResolveManyRequest, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.GetOutputsManyAsync(Picturepark.SDK.V1.Contract.OutputResolveManyRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: GetOutputsManyAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 1115
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Get outputs
  remarks: >-
    Retrieves all outputs available for contents, also dynamic rendered outputs are returned, if requested.

    <br />A maximum of 1000 content ids can be specified.
  example: []
  syntax:
    content: Task<ICollection<OutputResolveResult>> GetOutputsManyAsync(OutputResolveManyRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Picturepark.SDK.V1.Contract.OutputResolveManyRequest
      description: Output resolve many request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.OutputResolveResult}}
      description: Array of Result of output resolution.
    content.vb: Function GetOutputsManyAsync(request As OutputResolveManyRequest, cancellationToken As CancellationToken = Nothing) As Task(Of ICollection(Of OutputResolveResult))
  overload: Picturepark.SDK.V1.Contract.IContentClient.GetOutputsManyAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
- uid: Picturepark.SDK.V1.Contract.IContentClient.RepairContentsByFilterAsync(Picturepark.SDK.V1.Contract.ContentRepairByFilterRequest,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.RepairContentsByFilterAsync(Picturepark.SDK.V1.Contract.ContentRepairByFilterRequest,System.Threading.CancellationToken)
  id: RepairContentsByFilterAsync(Picturepark.SDK.V1.Contract.ContentRepairByFilterRequest,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: RepairContentsByFilterAsync(ContentRepairByFilterRequest, CancellationToken)
  nameWithType: IContentClient.RepairContentsByFilterAsync(ContentRepairByFilterRequest, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.RepairContentsByFilterAsync(Picturepark.SDK.V1.Contract.ContentRepairByFilterRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: RepairContentsByFilterAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 1134
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Repair contents by filter
  remarks: >-
    A repair operation re-extracts Metadata from the originally uploaded file, applies it and triggers follow-up actions where needed (e.g. Rendering, XmpWriteback)

    <br />The operation is executed asynchronous and is not awaited. Call [WaitForCompletion](#operation/BusinessProcess_WaitForCompletion) to wait for the process to finish.
  example: []
  syntax:
    content: Task<BusinessProcess> RepairContentsByFilterAsync(ContentRepairByFilterRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Picturepark.SDK.V1.Contract.ContentRepairByFilterRequest
      description: Content repair request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.BusinessProcess}
      description: Business process
    content.vb: Function RepairContentsByFilterAsync(request As ContentRepairByFilterRequest, cancellationToken As CancellationToken = Nothing) As Task(Of BusinessProcess)
  overload: Picturepark.SDK.V1.Contract.IContentClient.RepairContentsByFilterAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
- uid: Picturepark.SDK.V1.Contract.IContentClient.RepairContentsBatchAsync(Picturepark.SDK.V1.Contract.ContentRepairBatchRequest,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.RepairContentsBatchAsync(Picturepark.SDK.V1.Contract.ContentRepairBatchRequest,System.Threading.CancellationToken)
  id: RepairContentsBatchAsync(Picturepark.SDK.V1.Contract.ContentRepairBatchRequest,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: RepairContentsBatchAsync(ContentRepairBatchRequest, CancellationToken)
  nameWithType: IContentClient.RepairContentsBatchAsync(ContentRepairBatchRequest, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.RepairContentsBatchAsync(Picturepark.SDK.V1.Contract.ContentRepairBatchRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: RepairContentsBatchAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 1153
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Repair contents
  remarks: >-
    A repair operation re-extracts Metadata from the originally uploaded file, applies it and triggers follow-up actions where needed (e.g. Rendering, XmpWriteback)

    <br />The operation is executed asynchronous and is not awaited. Call [WaitForCompletion](#operation/BusinessProcess_WaitForCompletion) to wait for the process to finish.
  example: []
  syntax:
    content: Task<BusinessProcess> RepairContentsBatchAsync(ContentRepairBatchRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Picturepark.SDK.V1.Contract.ContentRepairBatchRequest
      description: Content repair request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.BusinessProcess}
      description: Business process
    content.vb: Function RepairContentsBatchAsync(request As ContentRepairBatchRequest, cancellationToken As CancellationToken = Nothing) As Task(Of BusinessProcess)
  overload: Picturepark.SDK.V1.Contract.IContentClient.RepairContentsBatchAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
- uid: Picturepark.SDK.V1.Contract.IContentClient.TransferOwnershipByFilterAsync(Picturepark.SDK.V1.Contract.ContentOwnershipBatchTransferFilterRequest,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.TransferOwnershipByFilterAsync(Picturepark.SDK.V1.Contract.ContentOwnershipBatchTransferFilterRequest,System.Threading.CancellationToken)
  id: TransferOwnershipByFilterAsync(Picturepark.SDK.V1.Contract.ContentOwnershipBatchTransferFilterRequest,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: TransferOwnershipByFilterAsync(ContentOwnershipBatchTransferFilterRequest, CancellationToken)
  nameWithType: IContentClient.TransferOwnershipByFilterAsync(ContentOwnershipBatchTransferFilterRequest, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.TransferOwnershipByFilterAsync(Picturepark.SDK.V1.Contract.ContentOwnershipBatchTransferFilterRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: TransferOwnershipByFilterAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 1172
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Transfer multiple contents ownerships - by filter
  remarks: >-
    Transfers ownerships of multiple contents to specified users. The target users must have the ManageContent UserRight.

    <br />The operation is executed asynchronous and is not awaited. Call [WaitForCompletion](#operation/BusinessProcess_WaitForCompletion) to wait for the process to finish.
  example: []
  syntax:
    content: Task<BusinessProcess> TransferOwnershipByFilterAsync(ContentOwnershipBatchTransferFilterRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Picturepark.SDK.V1.Contract.ContentOwnershipBatchTransferFilterRequest
      description: Content ownership transfer many request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.BusinessProcess}
      description: Business process
    content.vb: Function TransferOwnershipByFilterAsync(request As ContentOwnershipBatchTransferFilterRequest, cancellationToken As CancellationToken = Nothing) As Task(Of BusinessProcess)
  overload: Picturepark.SDK.V1.Contract.IContentClient.TransferOwnershipByFilterAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
- uid: Picturepark.SDK.V1.Contract.IContentClient.UpdatePermissionsByFilterAsync(Picturepark.SDK.V1.Contract.ContentPermissionsBatchUpdateFilterRequest,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.UpdatePermissionsByFilterAsync(Picturepark.SDK.V1.Contract.ContentPermissionsBatchUpdateFilterRequest,System.Threading.CancellationToken)
  id: UpdatePermissionsByFilterAsync(Picturepark.SDK.V1.Contract.ContentPermissionsBatchUpdateFilterRequest,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: UpdatePermissionsByFilterAsync(ContentPermissionsBatchUpdateFilterRequest, CancellationToken)
  nameWithType: IContentClient.UpdatePermissionsByFilterAsync(ContentPermissionsBatchUpdateFilterRequest, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.UpdatePermissionsByFilterAsync(Picturepark.SDK.V1.Contract.ContentPermissionsBatchUpdateFilterRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: UpdatePermissionsByFilterAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 1191
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Update multiple contents permissions - by filter
  remarks: >-
    Updates the content permission sets of multiple contents. To get a list of available content permission sets, see [Permissions](#operation/Permission_SearchContentPermissions)

    <br />The operation is executed asynchronous and is not awaited. Call [WaitForCompletion](#operation/BusinessProcess_WaitForCompletion) to wait for the process to finish.
  example: []
  syntax:
    content: Task<BusinessProcess> UpdatePermissionsByFilterAsync(ContentPermissionsBatchUpdateFilterRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Picturepark.SDK.V1.Contract.ContentPermissionsBatchUpdateFilterRequest
      description: Content permissions update many request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.BusinessProcess}
      description: Business process
    content.vb: Function UpdatePermissionsByFilterAsync(request As ContentPermissionsBatchUpdateFilterRequest, cancellationToken As CancellationToken = Nothing) As Task(Of BusinessProcess)
  overload: Picturepark.SDK.V1.Contract.IContentClient.UpdatePermissionsByFilterAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
- uid: Picturepark.SDK.V1.Contract.IContentClient.SearchAsync(Picturepark.SDK.V1.Contract.ContentSearchRequest,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.SearchAsync(Picturepark.SDK.V1.Contract.ContentSearchRequest,System.Threading.CancellationToken)
  id: SearchAsync(Picturepark.SDK.V1.Contract.ContentSearchRequest,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: SearchAsync(ContentSearchRequest, CancellationToken)
  nameWithType: IContentClient.SearchAsync(ContentSearchRequest, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.SearchAsync(Picturepark.SDK.V1.Contract.ContentSearchRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: SearchAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 1209
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Search contents
  remarks: Searches contents as specified in the search request.
  example: []
  syntax:
    content: Task<ContentSearchResult> SearchAsync(ContentSearchRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Picturepark.SDK.V1.Contract.ContentSearchRequest
      description: Content search request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.ContentSearchResult}
      description: Result for content search operation
    content.vb: Function SearchAsync(request As ContentSearchRequest, cancellationToken As CancellationToken = Nothing) As Task(Of ContentSearchResult)
  overload: Picturepark.SDK.V1.Contract.IContentClient.SearchAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
- uid: Picturepark.SDK.V1.Contract.IContentClient.AggregateOnChannelAsync(Picturepark.SDK.V1.Contract.ContentAggregationOnChannelRequest,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.AggregateOnChannelAsync(Picturepark.SDK.V1.Contract.ContentAggregationOnChannelRequest,System.Threading.CancellationToken)
  id: AggregateOnChannelAsync(Picturepark.SDK.V1.Contract.ContentAggregationOnChannelRequest,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: AggregateOnChannelAsync(ContentAggregationOnChannelRequest, CancellationToken)
  nameWithType: IContentClient.AggregateOnChannelAsync(ContentAggregationOnChannelRequest, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.AggregateOnChannelAsync(Picturepark.SDK.V1.Contract.ContentAggregationOnChannelRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: AggregateOnChannelAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 1227
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Aggregate contents on channel
  remarks: Aggregates content by content fields values as specified in the aggregators saved on a channel.
  example: []
  syntax:
    content: Task<ObjectAggregationResult> AggregateOnChannelAsync(ContentAggregationOnChannelRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Picturepark.SDK.V1.Contract.ContentAggregationOnChannelRequest
      description: Content aggregation on channel request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.ObjectAggregationResult}
      description: Object aggregation result
    content.vb: Function AggregateOnChannelAsync(request As ContentAggregationOnChannelRequest, cancellationToken As CancellationToken = Nothing) As Task(Of ObjectAggregationResult)
  overload: Picturepark.SDK.V1.Contract.IContentClient.AggregateOnChannelAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
- uid: Picturepark.SDK.V1.Contract.IContentClient.AggregateAsync(Picturepark.SDK.V1.Contract.ContentAggregationRequest,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.AggregateAsync(Picturepark.SDK.V1.Contract.ContentAggregationRequest,System.Threading.CancellationToken)
  id: AggregateAsync(Picturepark.SDK.V1.Contract.ContentAggregationRequest,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: AggregateAsync(ContentAggregationRequest, CancellationToken)
  nameWithType: IContentClient.AggregateAsync(ContentAggregationRequest, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.AggregateAsync(Picturepark.SDK.V1.Contract.ContentAggregationRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: AggregateAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 1245
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Aggregate contents
  remarks: Aggregates content by content fields values as specified in the aggregation request.
  example: []
  syntax:
    content: Task<ObjectAggregationResult> AggregateAsync(ContentAggregationRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Picturepark.SDK.V1.Contract.ContentAggregationRequest
      description: Content aggregation request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.ObjectAggregationResult}
      description: Object aggregation result
    content.vb: Function AggregateAsync(request As ContentAggregationRequest, cancellationToken As CancellationToken = Nothing) As Task(Of ObjectAggregationResult)
  overload: Picturepark.SDK.V1.Contract.IContentClient.AggregateAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
- uid: Picturepark.SDK.V1.Contract.IContentClient.GetVersionsAsync(System.String,Picturepark.SDK.V1.Contract.HistoricVersionSearchRequest,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.GetVersionsAsync(System.String,Picturepark.SDK.V1.Contract.HistoricVersionSearchRequest,System.Threading.CancellationToken)
  id: GetVersionsAsync(System.String,Picturepark.SDK.V1.Contract.HistoricVersionSearchRequest,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: GetVersionsAsync(string, HistoricVersionSearchRequest, CancellationToken)
  nameWithType: IContentClient.GetVersionsAsync(string, HistoricVersionSearchRequest, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.GetVersionsAsync(string, Picturepark.SDK.V1.Contract.HistoricVersionSearchRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: GetVersionsAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 1261
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Get historic versions
  example: []
  syntax:
    content: Task<HistoricVersionSearchResult> GetVersionsAsync(string id, HistoricVersionSearchRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.String
      description: Content ID.
    - id: request
      type: Picturepark.SDK.V1.Contract.HistoricVersionSearchRequest
      description: Request allowing for paging
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.HistoricVersionSearchResult}
      description: Historic versions
    content.vb: Function GetVersionsAsync(id As String, request As HistoricVersionSearchRequest, cancellationToken As CancellationToken = Nothing) As Task(Of HistoricVersionSearchResult)
  overload: Picturepark.SDK.V1.Contract.IContentClient.GetVersionsAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
  nameWithType.vb: IContentClient.GetVersionsAsync(String, HistoricVersionSearchRequest, CancellationToken)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.GetVersionsAsync(String, Picturepark.SDK.V1.Contract.HistoricVersionSearchRequest, System.Threading.CancellationToken)
  name.vb: GetVersionsAsync(String, HistoricVersionSearchRequest, CancellationToken)
- uid: Picturepark.SDK.V1.Contract.IContentClient.CreateVersionDownloadLinkAsync(System.String,System.Int32,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.CreateVersionDownloadLinkAsync(System.String,System.Int32,System.Threading.CancellationToken)
  id: CreateVersionDownloadLinkAsync(System.String,System.Int32,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: CreateVersionDownloadLinkAsync(string, int, CancellationToken)
  nameWithType: IContentClient.CreateVersionDownloadLinkAsync(string, int, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.CreateVersionDownloadLinkAsync(string, int, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: CreateVersionDownloadLinkAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 1277
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Get historic version download link
  example: []
  syntax:
    content: Task<string> CreateVersionDownloadLinkAsync(string id, int versionId, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.String
      description: Content ID.
    - id: versionId
      type: System.Int32
      description: Version ID.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Download token to be used with download/{token} endpoint
    content.vb: Function CreateVersionDownloadLinkAsync(id As String, versionId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: Picturepark.SDK.V1.Contract.IContentClient.CreateVersionDownloadLinkAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
  nameWithType.vb: IContentClient.CreateVersionDownloadLinkAsync(String, Integer, CancellationToken)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.CreateVersionDownloadLinkAsync(String, Integer, System.Threading.CancellationToken)
  name.vb: CreateVersionDownloadLinkAsync(String, Integer, CancellationToken)
- uid: Picturepark.SDK.V1.Contract.IContentClient.DeleteVersionAsync(System.String,System.Int32,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.DeleteVersionAsync(System.String,System.Int32,System.Threading.CancellationToken)
  id: DeleteVersionAsync(System.String,System.Int32,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: DeleteVersionAsync(string, int, CancellationToken)
  nameWithType: IContentClient.DeleteVersionAsync(string, int, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.DeleteVersionAsync(string, int, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: DeleteVersionAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 1293
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Delete historic version
  example: []
  syntax:
    content: Task DeleteVersionAsync(string id, int versionId, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.String
      description: Content ID.
    - id: versionId
      type: System.Int32
      description: Version ID.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task
      description: OK
    content.vb: Function DeleteVersionAsync(id As String, versionId As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: Picturepark.SDK.V1.Contract.IContentClient.DeleteVersionAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
  nameWithType.vb: IContentClient.DeleteVersionAsync(String, Integer, CancellationToken)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.DeleteVersionAsync(String, Integer, System.Threading.CancellationToken)
  name.vb: DeleteVersionAsync(String, Integer, CancellationToken)
- uid: Picturepark.SDK.V1.Contract.IContentClient.CreateCommentAsync(System.String,Picturepark.SDK.V1.Contract.CommentCreateRequest,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.CreateCommentAsync(System.String,Picturepark.SDK.V1.Contract.CommentCreateRequest,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
  id: CreateCommentAsync(System.String,Picturepark.SDK.V1.Contract.CommentCreateRequest,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: CreateCommentAsync(string, CommentCreateRequest, TimeSpan?, CancellationToken)
  nameWithType: IContentClient.CreateCommentAsync(string, CommentCreateRequest, TimeSpan?, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.CreateCommentAsync(string, Picturepark.SDK.V1.Contract.CommentCreateRequest, System.TimeSpan?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: CreateCommentAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 1310
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Create comment
  example: []
  syntax:
    content: Task<Comment> CreateCommentAsync(string id, CommentCreateRequest request, TimeSpan? timeout = null, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.String
      description: Content ID.
    - id: request
      type: Picturepark.SDK.V1.Contract.CommentCreateRequest
      description: Comment creation request.
    - id: timeout
      type: System.Nullable{System.TimeSpan}
      description: Operation timeout.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.Comment}
      description: Created comment
    content.vb: Function CreateCommentAsync(id As String, request As CommentCreateRequest, timeout As TimeSpan? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Comment)
  overload: Picturepark.SDK.V1.Contract.IContentClient.CreateCommentAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
  nameWithType.vb: IContentClient.CreateCommentAsync(String, CommentCreateRequest, TimeSpan?, CancellationToken)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.CreateCommentAsync(String, Picturepark.SDK.V1.Contract.CommentCreateRequest, System.TimeSpan?, System.Threading.CancellationToken)
  name.vb: CreateCommentAsync(String, CommentCreateRequest, TimeSpan?, CancellationToken)
- uid: Picturepark.SDK.V1.Contract.IContentClient.SearchCommentsAsync(System.String,Picturepark.SDK.V1.Contract.CommentSearchRequest,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.SearchCommentsAsync(System.String,Picturepark.SDK.V1.Contract.CommentSearchRequest,System.Threading.CancellationToken)
  id: SearchCommentsAsync(System.String,Picturepark.SDK.V1.Contract.CommentSearchRequest,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: SearchCommentsAsync(string, CommentSearchRequest, CancellationToken)
  nameWithType: IContentClient.SearchCommentsAsync(string, CommentSearchRequest, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.SearchCommentsAsync(string, Picturepark.SDK.V1.Contract.CommentSearchRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: SearchCommentsAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 1326
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Search comments
  example: []
  syntax:
    content: Task<CommentSearchResult> SearchCommentsAsync(string id, CommentSearchRequest request, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.String
      description: Content ID.
    - id: request
      type: Picturepark.SDK.V1.Contract.CommentSearchRequest
      description: Search request.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.CommentSearchResult}
      description: List of found comments
    content.vb: Function SearchCommentsAsync(id As String, request As CommentSearchRequest, cancellationToken As CancellationToken = Nothing) As Task(Of CommentSearchResult)
  overload: Picturepark.SDK.V1.Contract.IContentClient.SearchCommentsAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
  nameWithType.vb: IContentClient.SearchCommentsAsync(String, CommentSearchRequest, CancellationToken)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.SearchCommentsAsync(String, Picturepark.SDK.V1.Contract.CommentSearchRequest, System.Threading.CancellationToken)
  name.vb: SearchCommentsAsync(String, CommentSearchRequest, CancellationToken)
- uid: Picturepark.SDK.V1.Contract.IContentClient.SetDisplayContentAsync(System.String,Picturepark.SDK.V1.Contract.SetDisplayContentRequest,System.Collections.Generic.IEnumerable{Picturepark.SDK.V1.Contract.ContentResolveBehavior},System.Nullable{System.TimeSpan},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.SetDisplayContentAsync(System.String,Picturepark.SDK.V1.Contract.SetDisplayContentRequest,System.Collections.Generic.IEnumerable{Picturepark.SDK.V1.Contract.ContentResolveBehavior},System.Nullable{System.TimeSpan},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  id: SetDisplayContentAsync(System.String,Picturepark.SDK.V1.Contract.SetDisplayContentRequest,System.Collections.Generic.IEnumerable{Picturepark.SDK.V1.Contract.ContentResolveBehavior},System.Nullable{System.TimeSpan},System.Nullable{System.Boolean},System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: SetDisplayContentAsync(string, SetDisplayContentRequest, IEnumerable<ContentResolveBehavior>, TimeSpan?, bool?, CancellationToken)
  nameWithType: IContentClient.SetDisplayContentAsync(string, SetDisplayContentRequest, IEnumerable<ContentResolveBehavior>, TimeSpan?, bool?, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.SetDisplayContentAsync(string, Picturepark.SDK.V1.Contract.SetDisplayContentRequest, System.Collections.Generic.IEnumerable<Picturepark.SDK.V1.Contract.ContentResolveBehavior>, System.TimeSpan?, bool?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: SetDisplayContentAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 1345
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Sets/unsets a DisplayContent for a content with an id given in the request
  example: []
  syntax:
    content: Task<ContentDetail> SetDisplayContentAsync(string id, SetDisplayContentRequest setDisplayContentRequest, IEnumerable<ContentResolveBehavior> resolveBehaviors = null, TimeSpan? timeout = null, bool? waitForContinuation = null, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.String
      description: Id of the content
    - id: setDisplayContentRequest
      type: Picturepark.SDK.V1.Contract.SetDisplayContentRequest
      description: Request with DisplayContentId
    - id: resolveBehaviors
      type: System.Collections.Generic.IEnumerable{Picturepark.SDK.V1.Contract.ContentResolveBehavior}
      description: List of enums that control which parts of the content are resolved and returned.
    - id: timeout
      type: System.Nullable{System.TimeSpan}
      description: Timeout for the operation
    - id: waitForContinuation
      type: System.Nullable{System.Boolean}
      description: Wait for the creation of the search doc update.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.ContentDetail}
      description: Result of the operation
    content.vb: Function SetDisplayContentAsync(id As String, setDisplayContentRequest As SetDisplayContentRequest, resolveBehaviors As IEnumerable(Of ContentResolveBehavior) = Nothing, timeout As TimeSpan? = Nothing, waitForContinuation As Boolean? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of ContentDetail)
  overload: Picturepark.SDK.V1.Contract.IContentClient.SetDisplayContentAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
  nameWithType.vb: IContentClient.SetDisplayContentAsync(String, SetDisplayContentRequest, IEnumerable(Of ContentResolveBehavior), TimeSpan?, Boolean?, CancellationToken)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.SetDisplayContentAsync(String, Picturepark.SDK.V1.Contract.SetDisplayContentRequest, System.Collections.Generic.IEnumerable(Of Picturepark.SDK.V1.Contract.ContentResolveBehavior), System.TimeSpan?, Boolean?, System.Threading.CancellationToken)
  name.vb: SetDisplayContentAsync(String, SetDisplayContentRequest, IEnumerable(Of ContentResolveBehavior), TimeSpan?, Boolean?, CancellationToken)
- uid: Picturepark.SDK.V1.Contract.IContentClient.SetManyDisplayContentsAsync(Picturepark.SDK.V1.Contract.SetDisplayContentsManyRequest,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.SetManyDisplayContentsAsync(Picturepark.SDK.V1.Contract.SetDisplayContentsManyRequest,System.Threading.CancellationToken)
  id: SetManyDisplayContentsAsync(Picturepark.SDK.V1.Contract.SetDisplayContentsManyRequest,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: SetManyDisplayContentsAsync(SetDisplayContentsManyRequest, CancellationToken)
  nameWithType: IContentClient.SetManyDisplayContentsAsync(SetDisplayContentsManyRequest, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.SetManyDisplayContentsAsync(Picturepark.SDK.V1.Contract.SetDisplayContentsManyRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: SetManyDisplayContentsAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 1360
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Process many requests to set/unset display contents for given contents
  example: []
  syntax:
    content: Task<BusinessProcess> SetManyDisplayContentsAsync(SetDisplayContentsManyRequest setDisplayContentsManyRequest, CancellationToken cancellationToken = default)
    parameters:
    - id: setDisplayContentsManyRequest
      type: Picturepark.SDK.V1.Contract.SetDisplayContentsManyRequest
      description: Set many display contents request
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.BusinessProcess}
      description: Business process
    content.vb: Function SetManyDisplayContentsAsync(setDisplayContentsManyRequest As SetDisplayContentsManyRequest, cancellationToken As CancellationToken = Nothing) As Task(Of BusinessProcess)
  overload: Picturepark.SDK.V1.Contract.IContentClient.SetManyDisplayContentsAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  - type: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
    description: Forbidden
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
    description: Too many requests
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
- uid: Picturepark.SDK.V1.Contract.IContentClient.DownloadFilesAsync(Picturepark.SDK.V1.Contract.ContentSearchResult,System.String,System.Boolean,System.Int32,System.String,System.String,System.Boolean,System.Action{Picturepark.SDK.V1.Contract.ContentDetail},System.Action{System.Exception},System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.DownloadFilesAsync(Picturepark.SDK.V1.Contract.ContentSearchResult,System.String,System.Boolean,System.Int32,System.String,System.String,System.Boolean,System.Action{Picturepark.SDK.V1.Contract.ContentDetail},System.Action{System.Exception},System.Threading.CancellationToken)
  id: DownloadFilesAsync(Picturepark.SDK.V1.Contract.ContentSearchResult,System.String,System.Boolean,System.Int32,System.String,System.String,System.Boolean,System.Action{Picturepark.SDK.V1.Contract.ContentDetail},System.Action{System.Exception},System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: DownloadFilesAsync(ContentSearchResult, string, bool, int, string, string, bool, Action<ContentDetail>, Action<Exception>, CancellationToken)
  nameWithType: IContentClient.DownloadFilesAsync(ContentSearchResult, string, bool, int, string, string, bool, Action<ContentDetail>, Action<Exception>, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.DownloadFilesAsync(Picturepark.SDK.V1.Contract.ContentSearchResult, string, bool, int, string, string, bool, System.Action<Picturepark.SDK.V1.Contract.ContentDetail>, System.Action<System.Exception>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Partials/IContentClient.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: DownloadFilesAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Partials/IContentClient.cs
    startLine: 21
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Downloads multiple files
  example: []
  syntax:
    content: Task DownloadFilesAsync(ContentSearchResult contents, string exportDirectory, bool overwriteIfExists, int concurrentDownloads = 4, string outputFormat = "Original", string outputExtension = "", bool contentIdAsFilename = false, Action<ContentDetail> successDelegate = null, Action<Exception> errorDelegate = null, CancellationToken cancellationToken = default)
    parameters:
    - id: contents
      type: Picturepark.SDK.V1.Contract.ContentSearchResult
      description: The files to download.
    - id: exportDirectory
      type: System.String
      description: The directory to store the downloaded files.
    - id: overwriteIfExists
      type: System.Boolean
      description: Specifies whether to overwrite files.
    - id: concurrentDownloads
      type: System.Int32
      description: Specifies the number of concurrent downloads.
    - id: outputFormat
      type: System.String
      description: The output format name (e.g. 'Original').
    - id: outputExtension
      type: System.String
      description: The expected output file extension.
    - id: contentIdAsFilename
      type: System.Boolean
      description: Specifies whether to use the content id as filename. If false, the original filename is used and a counter added if needed.
    - id: successDelegate
      type: System.Action{Picturepark.SDK.V1.Contract.ContentDetail}
      description: The success delegate/callback.
    - id: errorDelegate
      type: System.Action{System.Exception}
      description: The error delegate/callback.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task
      description: The task.
    content.vb: Function DownloadFilesAsync(contents As ContentSearchResult, exportDirectory As String, overwriteIfExists As Boolean, concurrentDownloads As Integer = 4, outputFormat As String = "Original", outputExtension As String = "", contentIdAsFilename As Boolean = False, successDelegate As Action(Of ContentDetail) = Nothing, errorDelegate As Action(Of Exception) = Nothing, cancellationToken As CancellationToken = Nothing) As Task
  overload: Picturepark.SDK.V1.Contract.IContentClient.DownloadFilesAsync*
  nameWithType.vb: IContentClient.DownloadFilesAsync(ContentSearchResult, String, Boolean, Integer, String, String, Boolean, Action(Of ContentDetail), Action(Of Exception), CancellationToken)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.DownloadFilesAsync(Picturepark.SDK.V1.Contract.ContentSearchResult, String, Boolean, Integer, String, String, Boolean, System.Action(Of Picturepark.SDK.V1.Contract.ContentDetail), System.Action(Of System.Exception), System.Threading.CancellationToken)
  name.vb: DownloadFilesAsync(ContentSearchResult, String, Boolean, Integer, String, String, Boolean, Action(Of ContentDetail), Action(Of Exception), CancellationToken)
- uid: Picturepark.SDK.V1.Contract.IContentClient.CreateManyAsync(Picturepark.SDK.V1.Contract.ContentCreateManyRequest,System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.CreateManyAsync(Picturepark.SDK.V1.Contract.ContentCreateManyRequest,System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)
  id: CreateManyAsync(Picturepark.SDK.V1.Contract.ContentCreateManyRequest,System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: CreateManyAsync(ContentCreateManyRequest, TimeSpan?, bool, CancellationToken)
  nameWithType: IContentClient.CreateManyAsync(ContentCreateManyRequest, TimeSpan?, bool, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.CreateManyAsync(Picturepark.SDK.V1.Contract.ContentCreateManyRequest, System.TimeSpan?, bool, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Partials/IContentClient.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: CreateManyAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Partials/IContentClient.cs
    startLine: 45
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Create - many
  example: []
  syntax:
    content: Task<ContentBatchOperationWithRequestIdResult> CreateManyAsync(ContentCreateManyRequest contentCreateManyRequest, TimeSpan? timeout = null, bool waitSearchDocCreation = true, CancellationToken cancellationToken = default)
    parameters:
    - id: contentCreateManyRequest
      type: Picturepark.SDK.V1.Contract.ContentCreateManyRequest
      description: The content create many request.
    - id: timeout
      type: System.Nullable{System.TimeSpan}
      description: Timeout for waiting on the business process.
    - id: waitSearchDocCreation
      type: System.Boolean
      description: >-
        Wait for the creation of the search document and the rendered display values.
            By default the method waits for the search documents creation. Passing false, the method will return when the main entities have been created and the creation of the search documents has been enqueued but not yet performed.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.Results.ContentBatchOperationWithRequestIdResult}
      description: The <xref href="Picturepark.SDK.V1.Contract.Results.ContentBatchOperationResult" data-throw-if-not-resolved="false"></xref>.
    content.vb: Function CreateManyAsync(contentCreateManyRequest As ContentCreateManyRequest, timeout As TimeSpan? = Nothing, waitSearchDocCreation As Boolean = True, cancellationToken As CancellationToken = Nothing) As Task(Of ContentBatchOperationWithRequestIdResult)
  overload: Picturepark.SDK.V1.Contract.IContentClient.CreateManyAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  nameWithType.vb: IContentClient.CreateManyAsync(ContentCreateManyRequest, TimeSpan?, Boolean, CancellationToken)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.CreateManyAsync(Picturepark.SDK.V1.Contract.ContentCreateManyRequest, System.TimeSpan?, Boolean, System.Threading.CancellationToken)
  name.vb: CreateManyAsync(ContentCreateManyRequest, TimeSpan?, Boolean, CancellationToken)
- uid: Picturepark.SDK.V1.Contract.IContentClient.UpdateMetadataManyAsync(Picturepark.SDK.V1.Contract.ContentMetadataUpdateManyRequest,System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.UpdateMetadataManyAsync(Picturepark.SDK.V1.Contract.ContentMetadataUpdateManyRequest,System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)
  id: UpdateMetadataManyAsync(Picturepark.SDK.V1.Contract.ContentMetadataUpdateManyRequest,System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: UpdateMetadataManyAsync(ContentMetadataUpdateManyRequest, TimeSpan?, bool, CancellationToken)
  nameWithType: IContentClient.UpdateMetadataManyAsync(ContentMetadataUpdateManyRequest, TimeSpan?, bool, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.UpdateMetadataManyAsync(Picturepark.SDK.V1.Contract.ContentMetadataUpdateManyRequest, System.TimeSpan?, bool, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Partials/IContentClient.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: UpdateMetadataManyAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Partials/IContentClient.cs
    startLine: 60
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Update metadata - many
  example: []
  syntax:
    content: Task<ContentBatchOperationResult> UpdateMetadataManyAsync(ContentMetadataUpdateManyRequest updateRequest, TimeSpan? timeout = null, bool waitSearchDocCreation = true, CancellationToken cancellationToken = default)
    parameters:
    - id: updateRequest
      type: Picturepark.SDK.V1.Contract.ContentMetadataUpdateManyRequest
      description: The metadata update requests.
    - id: timeout
      type: System.Nullable{System.TimeSpan}
      description: Timeout for waiting on the business process.
    - id: waitSearchDocCreation
      type: System.Boolean
      description: >-
        Wait for the creation of the search document and the rendered display values.
            By default the method waits for the search documents creation. Passing false, the method will return when the main entities have been updated and the creation of the search documents has been enqueued but not yet performed.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.Results.ContentBatchOperationResult}
      description: The <xref href="Picturepark.SDK.V1.Contract.Results.ContentBatchOperationResult" data-throw-if-not-resolved="false"></xref>.
    content.vb: Function UpdateMetadataManyAsync(updateRequest As ContentMetadataUpdateManyRequest, timeout As TimeSpan? = Nothing, waitSearchDocCreation As Boolean = True, cancellationToken As CancellationToken = Nothing) As Task(Of ContentBatchOperationResult)
  overload: Picturepark.SDK.V1.Contract.IContentClient.UpdateMetadataManyAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.ContentNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.ContentNotFoundException
    description: Not all provided contents could be found
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  nameWithType.vb: IContentClient.UpdateMetadataManyAsync(ContentMetadataUpdateManyRequest, TimeSpan?, Boolean, CancellationToken)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.UpdateMetadataManyAsync(Picturepark.SDK.V1.Contract.ContentMetadataUpdateManyRequest, System.TimeSpan?, Boolean, System.Threading.CancellationToken)
  name.vb: UpdateMetadataManyAsync(ContentMetadataUpdateManyRequest, TimeSpan?, Boolean, CancellationToken)
- uid: Picturepark.SDK.V1.Contract.IContentClient.UpdatePermissionsManyAsync(Picturepark.SDK.V1.Contract.ContentPermissionsUpdateManyRequest,System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.UpdatePermissionsManyAsync(Picturepark.SDK.V1.Contract.ContentPermissionsUpdateManyRequest,System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)
  id: UpdatePermissionsManyAsync(Picturepark.SDK.V1.Contract.ContentPermissionsUpdateManyRequest,System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: UpdatePermissionsManyAsync(ContentPermissionsUpdateManyRequest, TimeSpan?, bool, CancellationToken)
  nameWithType: IContentClient.UpdatePermissionsManyAsync(ContentPermissionsUpdateManyRequest, TimeSpan?, bool, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.UpdatePermissionsManyAsync(Picturepark.SDK.V1.Contract.ContentPermissionsUpdateManyRequest, System.TimeSpan?, bool, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Partials/IContentClient.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: UpdatePermissionsManyAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Partials/IContentClient.cs
    startLine: 74
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Update permissions - many
  example: []
  syntax:
    content: Task<ContentBatchOperationResult> UpdatePermissionsManyAsync(ContentPermissionsUpdateManyRequest updateManyRequest, TimeSpan? timeout = null, bool waitSearchDocCreation = true, CancellationToken cancellationToken = default)
    parameters:
    - id: updateManyRequest
      type: Picturepark.SDK.V1.Contract.ContentPermissionsUpdateManyRequest
      description: The permissions update many request.
    - id: timeout
      type: System.Nullable{System.TimeSpan}
      description: Timeout for waiting on the business process.
    - id: waitSearchDocCreation
      type: System.Boolean
      description: >-
        Wait for the creation of the search document and the rendered display values.
            By default the method waits for the search documents creation. Passing false, the method will return when the main entities have been created and the creation of the search documents has been enqueued but not yet performed.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.Results.ContentBatchOperationResult}
      description: The <xref href="Picturepark.SDK.V1.Contract.Results.ContentBatchOperationResult" data-throw-if-not-resolved="false"></xref>.
    content.vb: Function UpdatePermissionsManyAsync(updateManyRequest As ContentPermissionsUpdateManyRequest, timeout As TimeSpan? = Nothing, waitSearchDocCreation As Boolean = True, cancellationToken As CancellationToken = Nothing) As Task(Of ContentBatchOperationResult)
  overload: Picturepark.SDK.V1.Contract.IContentClient.UpdatePermissionsManyAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  nameWithType.vb: IContentClient.UpdatePermissionsManyAsync(ContentPermissionsUpdateManyRequest, TimeSpan?, Boolean, CancellationToken)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.UpdatePermissionsManyAsync(Picturepark.SDK.V1.Contract.ContentPermissionsUpdateManyRequest, System.TimeSpan?, Boolean, System.Threading.CancellationToken)
  name.vb: UpdatePermissionsManyAsync(ContentPermissionsUpdateManyRequest, TimeSpan?, Boolean, CancellationToken)
- uid: Picturepark.SDK.V1.Contract.IContentClient.TransferOwnershipManyAsync(Picturepark.SDK.V1.Contract.ContentOwnershipTransferManyRequest,System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.TransferOwnershipManyAsync(Picturepark.SDK.V1.Contract.ContentOwnershipTransferManyRequest,System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)
  id: TransferOwnershipManyAsync(Picturepark.SDK.V1.Contract.ContentOwnershipTransferManyRequest,System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: TransferOwnershipManyAsync(ContentOwnershipTransferManyRequest, TimeSpan?, bool, CancellationToken)
  nameWithType: IContentClient.TransferOwnershipManyAsync(ContentOwnershipTransferManyRequest, TimeSpan?, bool, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.TransferOwnershipManyAsync(Picturepark.SDK.V1.Contract.ContentOwnershipTransferManyRequest, System.TimeSpan?, bool, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Partials/IContentClient.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: TransferOwnershipManyAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Partials/IContentClient.cs
    startLine: 88
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Transfer ownership - many
  example: []
  syntax:
    content: Task<ContentBatchOperationResult> TransferOwnershipManyAsync(ContentOwnershipTransferManyRequest contentOwnershipTransferManyRequest, TimeSpan? timeout = null, bool waitSearchDocCreation = true, CancellationToken cancellationToken = default)
    parameters:
    - id: contentOwnershipTransferManyRequest
      type: Picturepark.SDK.V1.Contract.ContentOwnershipTransferManyRequest
      description: The content ownership transfer many request.
    - id: timeout
      type: System.Nullable{System.TimeSpan}
      description: Timeout for waiting on the business process.
    - id: waitSearchDocCreation
      type: System.Boolean
      description: >-
        Wait for the creation of the search document and the rendered display values.
            By default the method waits for the search documents creation. Passing false, the method will return when the main entities have been updated and the creation of the search documents has been enqueued but not yet performed.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.Results.ContentBatchOperationResult}
      description: The <xref href="Picturepark.SDK.V1.Contract.Results.ContentBatchOperationResult" data-throw-if-not-resolved="false"></xref>.
    content.vb: Function TransferOwnershipManyAsync(contentOwnershipTransferManyRequest As ContentOwnershipTransferManyRequest, timeout As TimeSpan? = Nothing, waitSearchDocCreation As Boolean = True, cancellationToken As CancellationToken = Nothing) As Task(Of ContentBatchOperationResult)
  overload: Picturepark.SDK.V1.Contract.IContentClient.TransferOwnershipManyAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  nameWithType.vb: IContentClient.TransferOwnershipManyAsync(ContentOwnershipTransferManyRequest, TimeSpan?, Boolean, CancellationToken)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.TransferOwnershipManyAsync(Picturepark.SDK.V1.Contract.ContentOwnershipTransferManyRequest, System.TimeSpan?, Boolean, System.Threading.CancellationToken)
  name.vb: TransferOwnershipManyAsync(ContentOwnershipTransferManyRequest, TimeSpan?, Boolean, CancellationToken)
- uid: Picturepark.SDK.V1.Contract.IContentClient.BatchUpdateFieldsByIdsAsync(Picturepark.SDK.V1.Contract.ContentFieldsBatchUpdateRequest,System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.BatchUpdateFieldsByIdsAsync(Picturepark.SDK.V1.Contract.ContentFieldsBatchUpdateRequest,System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)
  id: BatchUpdateFieldsByIdsAsync(Picturepark.SDK.V1.Contract.ContentFieldsBatchUpdateRequest,System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: BatchUpdateFieldsByIdsAsync(ContentFieldsBatchUpdateRequest, TimeSpan?, bool, CancellationToken)
  nameWithType: IContentClient.BatchUpdateFieldsByIdsAsync(ContentFieldsBatchUpdateRequest, TimeSpan?, bool, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.BatchUpdateFieldsByIdsAsync(Picturepark.SDK.V1.Contract.ContentFieldsBatchUpdateRequest, System.TimeSpan?, bool, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Partials/IContentClient.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: BatchUpdateFieldsByIdsAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Partials/IContentClient.cs
    startLine: 102
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Batch update fields - by ids
  example: []
  syntax:
    content: Task<ContentBatchOperationResult> BatchUpdateFieldsByIdsAsync(ContentFieldsBatchUpdateRequest updateRequest, TimeSpan? timeout = null, bool waitSearchDocCreation = true, CancellationToken cancellationToken = default)
    parameters:
    - id: updateRequest
      type: Picturepark.SDK.V1.Contract.ContentFieldsBatchUpdateRequest
      description: The metadata update request.
    - id: timeout
      type: System.Nullable{System.TimeSpan}
      description: Timeout for waiting on the business process.
    - id: waitSearchDocCreation
      type: System.Boolean
      description: >-
        Wait for the creation of the search document and the rendered display values.
            By default the method waits for the search documents creation. Passing false, the method will return when the main entities have been updated and the creation of the search documents has been enqueued but not yet performed.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.Results.ContentBatchOperationResult}
      description: The <xref href="Picturepark.SDK.V1.Contract.Results.ContentBatchOperationResult" data-throw-if-not-resolved="false"></xref>.
    content.vb: Function BatchUpdateFieldsByIdsAsync(updateRequest As ContentFieldsBatchUpdateRequest, timeout As TimeSpan? = Nothing, waitSearchDocCreation As Boolean = True, cancellationToken As CancellationToken = Nothing) As Task(Of ContentBatchOperationResult)
  overload: Picturepark.SDK.V1.Contract.IContentClient.BatchUpdateFieldsByIdsAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  nameWithType.vb: IContentClient.BatchUpdateFieldsByIdsAsync(ContentFieldsBatchUpdateRequest, TimeSpan?, Boolean, CancellationToken)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.BatchUpdateFieldsByIdsAsync(Picturepark.SDK.V1.Contract.ContentFieldsBatchUpdateRequest, System.TimeSpan?, Boolean, System.Threading.CancellationToken)
  name.vb: BatchUpdateFieldsByIdsAsync(ContentFieldsBatchUpdateRequest, TimeSpan?, Boolean, CancellationToken)
- uid: Picturepark.SDK.V1.Contract.IContentClient.BatchUpdateFieldsByFilterAsync(Picturepark.SDK.V1.Contract.ContentFieldsBatchUpdateFilterRequest,System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.BatchUpdateFieldsByFilterAsync(Picturepark.SDK.V1.Contract.ContentFieldsBatchUpdateFilterRequest,System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)
  id: BatchUpdateFieldsByFilterAsync(Picturepark.SDK.V1.Contract.ContentFieldsBatchUpdateFilterRequest,System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: BatchUpdateFieldsByFilterAsync(ContentFieldsBatchUpdateFilterRequest, TimeSpan?, bool, CancellationToken)
  nameWithType: IContentClient.BatchUpdateFieldsByFilterAsync(ContentFieldsBatchUpdateFilterRequest, TimeSpan?, bool, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.BatchUpdateFieldsByFilterAsync(Picturepark.SDK.V1.Contract.ContentFieldsBatchUpdateFilterRequest, System.TimeSpan?, bool, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Partials/IContentClient.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: BatchUpdateFieldsByFilterAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Partials/IContentClient.cs
    startLine: 116
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Batch update fields - by filter
  example: []
  syntax:
    content: Task<ContentBatchOperationResult> BatchUpdateFieldsByFilterAsync(ContentFieldsBatchUpdateFilterRequest updateRequest, TimeSpan? timeout = null, bool waitSearchDocCreation = true, CancellationToken cancellationToken = default)
    parameters:
    - id: updateRequest
      type: Picturepark.SDK.V1.Contract.ContentFieldsBatchUpdateFilterRequest
      description: The metadata update request.
    - id: timeout
      type: System.Nullable{System.TimeSpan}
      description: Timeout for waiting on the business process.
    - id: waitSearchDocCreation
      type: System.Boolean
      description: >-
        Wait for the creation of the search document and the rendered display values.
            By default the method waits for the search documents creation. Passing false, the method will return when the main entities have been updated and the creation of the search documents has been enqueued but not yet performed.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A cancellation token that can be used by other objects or threads to receive notice of cancellation.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.Results.ContentBatchOperationResult}
      description: The <xref href="Picturepark.SDK.V1.Contract.Results.ContentBatchOperationResult" data-throw-if-not-resolved="false"></xref>.
    content.vb: Function BatchUpdateFieldsByFilterAsync(updateRequest As ContentFieldsBatchUpdateFilterRequest, timeout As TimeSpan? = Nothing, waitSearchDocCreation As Boolean = True, cancellationToken As CancellationToken = Nothing) As Task(Of ContentBatchOperationResult)
  overload: Picturepark.SDK.V1.Contract.IContentClient.BatchUpdateFieldsByFilterAsync*
  exceptions:
  - type: Picturepark.SDK.V1.Contract.ApiException
    commentId: T:Picturepark.SDK.V1.Contract.ApiException
    description: A server side error occurred.
  - type: Picturepark.SDK.V1.Contract.PictureparkException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
    description: Internal server error
  - type: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
    description: Entity not found
  - type: Picturepark.SDK.V1.Contract.PictureparkConflictException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
    description: Version conflict
  - type: Picturepark.SDK.V1.Contract.PictureparkValidationException
    commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
    description: Validation exception
  nameWithType.vb: IContentClient.BatchUpdateFieldsByFilterAsync(ContentFieldsBatchUpdateFilterRequest, TimeSpan?, Boolean, CancellationToken)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.BatchUpdateFieldsByFilterAsync(Picturepark.SDK.V1.Contract.ContentFieldsBatchUpdateFilterRequest, System.TimeSpan?, Boolean, System.Threading.CancellationToken)
  name.vb: BatchUpdateFieldsByFilterAsync(ContentFieldsBatchUpdateFilterRequest, TimeSpan?, Boolean, CancellationToken)
- uid: Picturepark.SDK.V1.Contract.IContentClient.WaitForBusinessProcessAndReturnResult(System.String,System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.WaitForBusinessProcessAndReturnResult(System.String,System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)
  id: WaitForBusinessProcessAndReturnResult(System.String,System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: WaitForBusinessProcessAndReturnResult(string, TimeSpan?, bool, CancellationToken)
  nameWithType: IContentClient.WaitForBusinessProcessAndReturnResult(string, TimeSpan?, bool, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.WaitForBusinessProcessAndReturnResult(string, System.TimeSpan?, bool, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Partials/IContentClient.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: WaitForBusinessProcessAndReturnResult
    path: ../../src/Picturepark.SDK.V1.Contract/Partials/IContentClient.cs
    startLine: 126
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Waits for a business process and returns a <xref href="Picturepark.SDK.V1.Contract.Results.ContentBatchOperationResult" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: Task<ContentBatchOperationResult> WaitForBusinessProcessAndReturnResult(string businessProcessId, TimeSpan? timeout = null, bool waitSearchDocCreation = true, CancellationToken cancellationToken = default)
    parameters:
    - id: businessProcessId
      type: System.String
      description: The business process id.
    - id: timeout
      type: System.Nullable{System.TimeSpan}
      description: The timeout to wait on the business process.
    - id: waitSearchDocCreation
      type: System.Boolean
      description: Wait for the creation of the search documents and the rendered display values
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.Results.ContentBatchOperationResult}
      description: The <xref href="Picturepark.SDK.V1.Contract.Results.ContentBatchOperationResult" data-throw-if-not-resolved="false"></xref>.
    content.vb: Function WaitForBusinessProcessAndReturnResult(businessProcessId As String, timeout As TimeSpan? = Nothing, waitSearchDocCreation As Boolean = True, cancellationToken As CancellationToken = Nothing) As Task(Of ContentBatchOperationResult)
  overload: Picturepark.SDK.V1.Contract.IContentClient.WaitForBusinessProcessAndReturnResult*
  nameWithType.vb: IContentClient.WaitForBusinessProcessAndReturnResult(String, TimeSpan?, Boolean, CancellationToken)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.WaitForBusinessProcessAndReturnResult(String, System.TimeSpan?, Boolean, System.Threading.CancellationToken)
  name.vb: WaitForBusinessProcessAndReturnResult(String, TimeSpan?, Boolean, CancellationToken)
- uid: Picturepark.SDK.V1.Contract.IContentClient.WaitForBusinessProcessAndReturnResultWithRequestId(System.String,System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.WaitForBusinessProcessAndReturnResultWithRequestId(System.String,System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)
  id: WaitForBusinessProcessAndReturnResultWithRequestId(System.String,System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: WaitForBusinessProcessAndReturnResultWithRequestId(string, TimeSpan?, bool, CancellationToken)
  nameWithType: IContentClient.WaitForBusinessProcessAndReturnResultWithRequestId(string, TimeSpan?, bool, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.WaitForBusinessProcessAndReturnResultWithRequestId(string, System.TimeSpan?, bool, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Partials/IContentClient.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: WaitForBusinessProcessAndReturnResultWithRequestId
    path: ../../src/Picturepark.SDK.V1.Contract/Partials/IContentClient.cs
    startLine: 136
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Waits for a business process and returns a <xref href="Picturepark.SDK.V1.Contract.Results.ContentBatchOperationWithRequestIdResult" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: Task<ContentBatchOperationWithRequestIdResult> WaitForBusinessProcessAndReturnResultWithRequestId(string businessProcessId, TimeSpan? timeout = null, bool waitSearchDocCreation = true, CancellationToken cancellationToken = default)
    parameters:
    - id: businessProcessId
      type: System.String
      description: The business process id.
    - id: timeout
      type: System.Nullable{System.TimeSpan}
      description: The timeout to wait on the business process.
    - id: waitSearchDocCreation
      type: System.Boolean
      description: Wait for the creation of the search documents and the rendered display values
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.Results.ContentBatchOperationWithRequestIdResult}
      description: The <xref href="Picturepark.SDK.V1.Contract.Results.ContentBatchOperationWithRequestIdResult" data-throw-if-not-resolved="false"></xref>.
    content.vb: Function WaitForBusinessProcessAndReturnResultWithRequestId(businessProcessId As String, timeout As TimeSpan? = Nothing, waitSearchDocCreation As Boolean = True, cancellationToken As CancellationToken = Nothing) As Task(Of ContentBatchOperationWithRequestIdResult)
  overload: Picturepark.SDK.V1.Contract.IContentClient.WaitForBusinessProcessAndReturnResultWithRequestId*
  nameWithType.vb: IContentClient.WaitForBusinessProcessAndReturnResultWithRequestId(String, TimeSpan?, Boolean, CancellationToken)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.WaitForBusinessProcessAndReturnResultWithRequestId(String, System.TimeSpan?, Boolean, System.Threading.CancellationToken)
  name.vb: WaitForBusinessProcessAndReturnResultWithRequestId(String, TimeSpan?, Boolean, CancellationToken)
- uid: Picturepark.SDK.V1.Contract.IContentClient.CreateAndAwaitDownloadLinkAsync(Picturepark.SDK.V1.Contract.ContentDownloadLinkCreateRequest,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.CreateAndAwaitDownloadLinkAsync(Picturepark.SDK.V1.Contract.ContentDownloadLinkCreateRequest,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
  id: CreateAndAwaitDownloadLinkAsync(Picturepark.SDK.V1.Contract.ContentDownloadLinkCreateRequest,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: CreateAndAwaitDownloadLinkAsync(ContentDownloadLinkCreateRequest, TimeSpan?, CancellationToken)
  nameWithType: IContentClient.CreateAndAwaitDownloadLinkAsync(ContentDownloadLinkCreateRequest, TimeSpan?, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.CreateAndAwaitDownloadLinkAsync(Picturepark.SDK.V1.Contract.ContentDownloadLinkCreateRequest, System.TimeSpan?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Partials/IContentClient.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: CreateAndAwaitDownloadLinkAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Partials/IContentClient.cs
    startLine: 145
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Creates a download link and awaits potential dynamic output format rendering
  example: []
  syntax:
    content: Task<DownloadLink> CreateAndAwaitDownloadLinkAsync(ContentDownloadLinkCreateRequest request, TimeSpan? timeout = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: Picturepark.SDK.V1.Contract.ContentDownloadLinkCreateRequest
      description: Content download link request
    - id: timeout
      type: System.Nullable{System.TimeSpan}
      description: Timeout for operation
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.DownloadLink}
      description: Download link
    content.vb: Function CreateAndAwaitDownloadLinkAsync(request As ContentDownloadLinkCreateRequest, timeout As TimeSpan? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of DownloadLink)
  overload: Picturepark.SDK.V1.Contract.IContentClient.CreateAndAwaitDownloadLinkAsync*
- uid: Picturepark.SDK.V1.Contract.IContentClient.GetVersionDownloadLinkAsync(System.String,System.Int32,System.Threading.CancellationToken)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.GetVersionDownloadLinkAsync(System.String,System.Int32,System.Threading.CancellationToken)
  id: GetVersionDownloadLinkAsync(System.String,System.Int32,System.Threading.CancellationToken)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: GetVersionDownloadLinkAsync(string, int, CancellationToken)
  nameWithType: IContentClient.GetVersionDownloadLinkAsync(string, int, CancellationToken)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.GetVersionDownloadLinkAsync(string, int, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Partials/IContentClient.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: GetVersionDownloadLinkAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Partials/IContentClient.cs
    startLine: 154
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Creates a download link for a specific content historic version
  example: []
  syntax:
    content: Task<DownloadLink> GetVersionDownloadLinkAsync(string contentId, int version, CancellationToken cancellationToken = default)
    parameters:
    - id: contentId
      type: System.String
      description: Content ID
    - id: version
      type: System.Int32
      description: Version number
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token.
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.DownloadLink}
      description: Download link
    content.vb: Function GetVersionDownloadLinkAsync(contentId As String, version As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of DownloadLink)
  overload: Picturepark.SDK.V1.Contract.IContentClient.GetVersionDownloadLinkAsync*
  nameWithType.vb: IContentClient.GetVersionDownloadLinkAsync(String, Integer, CancellationToken)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.GetVersionDownloadLinkAsync(String, Integer, System.Threading.CancellationToken)
  name.vb: GetVersionDownloadLinkAsync(String, Integer, CancellationToken)
- uid: Picturepark.SDK.V1.Contract.IContentClient.GetCommentAsync(System.String)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.GetCommentAsync(System.String)
  id: GetCommentAsync(System.String)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: GetCommentAsync(string)
  nameWithType: IContentClient.GetCommentAsync(string)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.GetCommentAsync(string)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Partials/IContentClient.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: GetCommentAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Partials/IContentClient.cs
    startLine: 161
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Get a comment
  example: []
  syntax:
    content: Task<Comment> GetCommentAsync(string id)
    parameters:
    - id: id
      type: System.String
      description: Comment ID
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.Comment}
      description: Comment
    content.vb: Function GetCommentAsync(id As String) As Task(Of Comment)
  overload: Picturepark.SDK.V1.Contract.IContentClient.GetCommentAsync*
  nameWithType.vb: IContentClient.GetCommentAsync(String)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.GetCommentAsync(String)
  name.vb: GetCommentAsync(String)
- uid: Picturepark.SDK.V1.Contract.IContentClient.UpdateCommentAsync(System.String,Picturepark.SDK.V1.Contract.CommentEditable)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.UpdateCommentAsync(System.String,Picturepark.SDK.V1.Contract.CommentEditable)
  id: UpdateCommentAsync(System.String,Picturepark.SDK.V1.Contract.CommentEditable)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: UpdateCommentAsync(string, CommentEditable)
  nameWithType: IContentClient.UpdateCommentAsync(string, CommentEditable)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.UpdateCommentAsync(string, Picturepark.SDK.V1.Contract.CommentEditable)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Partials/IContentClient.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: UpdateCommentAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Partials/IContentClient.cs
    startLine: 169
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Update a comment
  example: []
  syntax:
    content: Task<Comment> UpdateCommentAsync(string id, CommentEditable request)
    parameters:
    - id: id
      type: System.String
      description: Comment ID
    - id: request
      type: Picturepark.SDK.V1.Contract.CommentEditable
      description: What should be updated
    return:
      type: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.Comment}
      description: Updated comment
    content.vb: Function UpdateCommentAsync(id As String, request As CommentEditable) As Task(Of Comment)
  overload: Picturepark.SDK.V1.Contract.IContentClient.UpdateCommentAsync*
  nameWithType.vb: IContentClient.UpdateCommentAsync(String, CommentEditable)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.UpdateCommentAsync(String, Picturepark.SDK.V1.Contract.CommentEditable)
  name.vb: UpdateCommentAsync(String, CommentEditable)
- uid: Picturepark.SDK.V1.Contract.IContentClient.DeleteCommentAsync(System.String)
  commentId: M:Picturepark.SDK.V1.Contract.IContentClient.DeleteCommentAsync(System.String)
  id: DeleteCommentAsync(System.String)
  parent: Picturepark.SDK.V1.Contract.IContentClient
  langs:
  - csharp
  - vb
  name: DeleteCommentAsync(string)
  nameWithType: IContentClient.DeleteCommentAsync(string)
  fullName: Picturepark.SDK.V1.Contract.IContentClient.DeleteCommentAsync(string)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Partials/IContentClient.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: DeleteCommentAsync
    path: ../../src/Picturepark.SDK.V1.Contract/Partials/IContentClient.cs
    startLine: 176
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Delete a comment
  example: []
  syntax:
    content: Task DeleteCommentAsync(string id)
    parameters:
    - id: id
      type: System.String
      description: Comment ID
    return:
      type: System.Threading.Tasks.Task
      description: OK
    content.vb: Function DeleteCommentAsync(id As String) As Task
  overload: Picturepark.SDK.V1.Contract.IContentClient.DeleteCommentAsync*
  nameWithType.vb: IContentClient.DeleteCommentAsync(String)
  fullName.vb: Picturepark.SDK.V1.Contract.IContentClient.DeleteCommentAsync(String)
  name.vb: DeleteCommentAsync(String)
references:
- uid: Picturepark.SDK.V1.Contract
  commentId: N:Picturepark.SDK.V1.Contract
  href: Picturepark.html
  name: Picturepark.SDK.V1.Contract
  nameWithType: Picturepark.SDK.V1.Contract
  fullName: Picturepark.SDK.V1.Contract
  spec.csharp:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.Contract
    name: Contract
    href: Picturepark.SDK.V1.Contract.html
  spec.vb:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.Contract
    name: Contract
    href: Picturepark.SDK.V1.Contract.html
- uid: Picturepark.SDK.V1.Contract.ApiException
  commentId: T:Picturepark.SDK.V1.Contract.ApiException
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ApiException.html
  name: ApiException
  nameWithType: ApiException
  fullName: Picturepark.SDK.V1.Contract.ApiException
- uid: Picturepark.SDK.V1.Contract.PictureparkValidationException
  commentId: T:Picturepark.SDK.V1.Contract.PictureparkValidationException
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.PictureparkValidationException.html
  name: PictureparkValidationException
  nameWithType: PictureparkValidationException
  fullName: Picturepark.SDK.V1.Contract.PictureparkValidationException
- uid: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
  commentId: T:Picturepark.SDK.V1.Contract.PictureparkForbiddenException
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.PictureparkForbiddenException.html
  name: PictureparkForbiddenException
  nameWithType: PictureparkForbiddenException
  fullName: Picturepark.SDK.V1.Contract.PictureparkForbiddenException
- uid: Picturepark.SDK.V1.Contract.PictureparkConflictException
  commentId: T:Picturepark.SDK.V1.Contract.PictureparkConflictException
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.PictureparkConflictException.html
  name: PictureparkConflictException
  nameWithType: PictureparkConflictException
  fullName: Picturepark.SDK.V1.Contract.PictureparkConflictException
- uid: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
  commentId: T:Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException.html
  name: PictureparkTooManyRequestsException
  nameWithType: PictureparkTooManyRequestsException
  fullName: Picturepark.SDK.V1.Contract.PictureparkTooManyRequestsException
- uid: Picturepark.SDK.V1.Contract.PictureparkException
  commentId: T:Picturepark.SDK.V1.Contract.PictureparkException
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.PictureparkException.html
  name: PictureparkException
  nameWithType: PictureparkException
  fullName: Picturepark.SDK.V1.Contract.PictureparkException
- uid: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
  commentId: T:Picturepark.SDK.V1.Contract.PictureparkNotFoundException
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.PictureparkNotFoundException.html
  name: PictureparkNotFoundException
  nameWithType: PictureparkNotFoundException
  fullName: Picturepark.SDK.V1.Contract.PictureparkNotFoundException
- uid: Picturepark.SDK.V1.Contract.ContentNotFoundException
  commentId: T:Picturepark.SDK.V1.Contract.ContentNotFoundException
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ContentNotFoundException.html
  name: ContentNotFoundException
  nameWithType: ContentNotFoundException
  fullName: Picturepark.SDK.V1.Contract.ContentNotFoundException
- uid: Picturepark.SDK.V1.Contract.IContentClient.GetAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.GetAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_GetAsync_System_String_System_Collections_Generic_IEnumerable_Picturepark_SDK_V1_Contract_ContentResolveBehavior__System_Threading_CancellationToken_
  name: GetAsync
  nameWithType: IContentClient.GetAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.GetAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Collections.Generic.IEnumerable{Picturepark.SDK.V1.Contract.ContentResolveBehavior}
  commentId: T:System.Collections.Generic.IEnumerable{Picturepark.SDK.V1.Contract.ContentResolveBehavior}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ContentResolveBehavior>
  nameWithType: IEnumerable<ContentResolveBehavior>
  fullName: System.Collections.Generic.IEnumerable<Picturepark.SDK.V1.Contract.ContentResolveBehavior>
  nameWithType.vb: IEnumerable(Of ContentResolveBehavior)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Picturepark.SDK.V1.Contract.ContentResolveBehavior)
  name.vb: IEnumerable(Of ContentResolveBehavior)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Picturepark.SDK.V1.Contract.ContentResolveBehavior
    name: ContentResolveBehavior
    href: Picturepark.SDK.V1.Contract.ContentResolveBehavior.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.ContentResolveBehavior
    name: ContentResolveBehavior
    href: Picturepark.SDK.V1.Contract.ContentResolveBehavior.html
  - name: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.ContentDetail}
  commentId: T:System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.ContentDetail}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ContentDetail>
  nameWithType: Task<ContentDetail>
  fullName: System.Threading.Tasks.Task<Picturepark.SDK.V1.Contract.ContentDetail>
  nameWithType.vb: Task(Of ContentDetail)
  fullName.vb: System.Threading.Tasks.Task(Of Picturepark.SDK.V1.Contract.ContentDetail)
  name.vb: Task(Of ContentDetail)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Picturepark.SDK.V1.Contract.ContentDetail
    name: ContentDetail
    href: Picturepark.SDK.V1.Contract.ContentDetail.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.ContentDetail
    name: ContentDetail
    href: Picturepark.SDK.V1.Contract.ContentDetail.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Picturepark.SDK.V1.Contract.ReferencesUpdateException
  commentId: T:Picturepark.SDK.V1.Contract.ReferencesUpdateException
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ReferencesUpdateException.html
  name: ReferencesUpdateException
  nameWithType: ReferencesUpdateException
  fullName: Picturepark.SDK.V1.Contract.ReferencesUpdateException
- uid: Picturepark.SDK.V1.Contract.IContentClient.DeleteAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.DeleteAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_DeleteAsync_System_String_System_Nullable_System_Boolean__System_Nullable_System_TimeSpan__System_Nullable_System_Boolean__System_Threading_CancellationToken_
  name: DeleteAsync
  nameWithType: IContentClient.DeleteAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.DeleteAsync
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool?
  nameWithType: bool?
  fullName: bool?
  nameWithType.vb: Boolean?
  fullName.vb: Boolean?
  name.vb: Boolean?
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan?
  nameWithType: TimeSpan?
  fullName: System.TimeSpan?
  spec.csharp:
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '?'
  spec.vb:
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '?'
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Picturepark.SDK.V1.Contract.IContentClient.DownloadAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.DownloadAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_DownloadAsync_System_String_System_String_System_Nullable_System_Int32__System_Nullable_System_Int32__System_String_System_Threading_CancellationToken_
  name: DownloadAsync
  nameWithType: IContentClient.DownloadAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.DownloadAsync
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.FileResponse}
  commentId: T:System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.FileResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<FileResponse>
  nameWithType: Task<FileResponse>
  fullName: System.Threading.Tasks.Task<Picturepark.SDK.V1.Contract.FileResponse>
  nameWithType.vb: Task(Of FileResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Picturepark.SDK.V1.Contract.FileResponse)
  name.vb: Task(Of FileResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Picturepark.SDK.V1.Contract.FileResponse
    name: FileResponse
    href: Picturepark.SDK.V1.Contract.FileResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.FileResponse
    name: FileResponse
    href: Picturepark.SDK.V1.Contract.FileResponse.html
  - name: )
- uid: Picturepark.SDK.V1.Contract.IContentClient.EditOutputAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.EditOutputAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_EditOutputAsync_System_String_System_String_System_String_System_Threading_CancellationToken_
  name: EditOutputAsync
  nameWithType: IContentClient.EditOutputAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.EditOutputAsync
- uid: Picturepark.SDK.V1.Contract.IContentClient.DownloadThumbnailAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.DownloadThumbnailAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_DownloadThumbnailAsync_System_String_Picturepark_SDK_V1_Contract_ThumbnailSize_System_Nullable_System_Int32__System_Nullable_System_Int32__System_Threading_CancellationToken_
  name: DownloadThumbnailAsync
  nameWithType: IContentClient.DownloadThumbnailAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.DownloadThumbnailAsync
- uid: Picturepark.SDK.V1.Contract.ThumbnailSize
  commentId: T:Picturepark.SDK.V1.Contract.ThumbnailSize
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ThumbnailSize.html
  name: ThumbnailSize
  nameWithType: ThumbnailSize
  fullName: Picturepark.SDK.V1.Contract.ThumbnailSize
- uid: Picturepark.SDK.V1.Contract.BusinessProcessLifeCycleNotHitException
  commentId: T:Picturepark.SDK.V1.Contract.BusinessProcessLifeCycleNotHitException
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.BusinessProcessLifeCycleNotHitException.html
  name: BusinessProcessLifeCycleNotHitException
  nameWithType: BusinessProcessLifeCycleNotHitException
  fullName: Picturepark.SDK.V1.Contract.BusinessProcessLifeCycleNotHitException
- uid: Picturepark.SDK.V1.Contract.IContentClient.CreateAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.CreateAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_CreateAsync_Picturepark_SDK_V1_Contract_ContentCreateRequest_System_Collections_Generic_IEnumerable_Picturepark_SDK_V1_Contract_ContentResolveBehavior__System_Nullable_System_Boolean__System_Nullable_System_TimeSpan__System_Nullable_System_Boolean__System_Threading_CancellationToken_
  name: CreateAsync
  nameWithType: IContentClient.CreateAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.CreateAsync
- uid: Picturepark.SDK.V1.Contract.ContentCreateRequest
  commentId: T:Picturepark.SDK.V1.Contract.ContentCreateRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ContentCreateRequest.html
  name: ContentCreateRequest
  nameWithType: ContentCreateRequest
  fullName: Picturepark.SDK.V1.Contract.ContentCreateRequest
- uid: Picturepark.SDK.V1.Contract.RequestSizeLimitExceededException
  commentId: T:Picturepark.SDK.V1.Contract.RequestSizeLimitExceededException
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.RequestSizeLimitExceededException.html
  name: RequestSizeLimitExceededException
  nameWithType: RequestSizeLimitExceededException
  fullName: Picturepark.SDK.V1.Contract.RequestSizeLimitExceededException
- uid: Picturepark.SDK.V1.Contract.IContentClient.GetManyAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.GetManyAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_GetManyAsync_System_Collections_Generic_IEnumerable_System_String__System_Collections_Generic_IEnumerable_Picturepark_SDK_V1_Contract_ContentResolveBehavior__System_Threading_CancellationToken_
  name: GetManyAsync
  nameWithType: IContentClient.GetManyAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.GetManyAsync
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.ContentDetail}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.ContentDetail}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ICollection<ContentDetail>>
  nameWithType: Task<ICollection<ContentDetail>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.ICollection<Picturepark.SDK.V1.Contract.ContentDetail>>
  nameWithType.vb: Task(Of ICollection(Of ContentDetail))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.ICollection(Of Picturepark.SDK.V1.Contract.ContentDetail))
  name.vb: Task(Of ICollection(Of ContentDetail))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Picturepark.SDK.V1.Contract.ContentDetail
    name: ContentDetail
    href: Picturepark.SDK.V1.Contract.ContentDetail.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.ContentDetail
    name: ContentDetail
    href: Picturepark.SDK.V1.Contract.ContentDetail.html
  - name: )
  - name: )
- uid: Picturepark.SDK.V1.Contract.IContentClient.UpdateMetadataAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.UpdateMetadataAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_UpdateMetadataAsync_System_String_Picturepark_SDK_V1_Contract_ContentMetadataUpdateRequest_System_Collections_Generic_IEnumerable_Picturepark_SDK_V1_Contract_ContentResolveBehavior__System_Nullable_System_Boolean__System_Nullable_System_TimeSpan__System_Nullable_System_Boolean__System_Threading_CancellationToken_
  name: UpdateMetadataAsync
  nameWithType: IContentClient.UpdateMetadataAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.UpdateMetadataAsync
- uid: Picturepark.SDK.V1.Contract.ContentMetadataUpdateRequest
  commentId: T:Picturepark.SDK.V1.Contract.ContentMetadataUpdateRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ContentMetadataUpdateRequest.html
  name: ContentMetadataUpdateRequest
  nameWithType: ContentMetadataUpdateRequest
  fullName: Picturepark.SDK.V1.Contract.ContentMetadataUpdateRequest
- uid: Picturepark.SDK.V1.Contract.IContentClient.UpdatePermissionsAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.UpdatePermissionsAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_UpdatePermissionsAsync_System_String_Picturepark_SDK_V1_Contract_ContentPermissionsUpdateRequest_System_Collections_Generic_IEnumerable_Picturepark_SDK_V1_Contract_ContentResolveBehavior__System_Nullable_System_TimeSpan__System_Nullable_System_Boolean__System_Threading_CancellationToken_
  name: UpdatePermissionsAsync
  nameWithType: IContentClient.UpdatePermissionsAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.UpdatePermissionsAsync
- uid: Picturepark.SDK.V1.Contract.ContentPermissionsUpdateRequest
  commentId: T:Picturepark.SDK.V1.Contract.ContentPermissionsUpdateRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ContentPermissionsUpdateRequest.html
  name: ContentPermissionsUpdateRequest
  nameWithType: ContentPermissionsUpdateRequest
  fullName: Picturepark.SDK.V1.Contract.ContentPermissionsUpdateRequest
- uid: Picturepark.SDK.V1.Contract.IContentClient.RestoreAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.RestoreAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_RestoreAsync_System_String_System_Nullable_System_Boolean__System_Nullable_System_TimeSpan__System_Nullable_System_Boolean__System_Threading_CancellationToken_
  name: RestoreAsync
  nameWithType: IContentClient.RestoreAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.RestoreAsync
- uid: Picturepark.SDK.V1.Contract.IContentClient.TransferOwnershipAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.TransferOwnershipAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_TransferOwnershipAsync_System_String_Picturepark_SDK_V1_Contract_ContentOwnershipTransferRequest_System_Nullable_System_TimeSpan__System_Nullable_System_Boolean__System_Threading_CancellationToken_
  name: TransferOwnershipAsync
  nameWithType: IContentClient.TransferOwnershipAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.TransferOwnershipAsync
- uid: Picturepark.SDK.V1.Contract.ContentOwnershipTransferRequest
  commentId: T:Picturepark.SDK.V1.Contract.ContentOwnershipTransferRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ContentOwnershipTransferRequest.html
  name: ContentOwnershipTransferRequest
  nameWithType: ContentOwnershipTransferRequest
  fullName: Picturepark.SDK.V1.Contract.ContentOwnershipTransferRequest
- uid: Picturepark.SDK.V1.Contract.IContentClient.CheckContentSchemaChangeAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.CheckContentSchemaChangeAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_CheckContentSchemaChangeAsync_Picturepark_SDK_V1_Contract_CheckContentSchemaIdChangeRequest_System_Threading_CancellationToken_
  name: CheckContentSchemaChangeAsync
  nameWithType: IContentClient.CheckContentSchemaChangeAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.CheckContentSchemaChangeAsync
- uid: Picturepark.SDK.V1.Contract.CheckContentSchemaIdChangeRequest
  commentId: T:Picturepark.SDK.V1.Contract.CheckContentSchemaIdChangeRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.CheckContentSchemaIdChangeRequest.html
  name: CheckContentSchemaIdChangeRequest
  nameWithType: CheckContentSchemaIdChangeRequest
  fullName: Picturepark.SDK.V1.Contract.CheckContentSchemaIdChangeRequest
- uid: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.CheckContentSchemaIdChangeResult}
  commentId: T:System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.CheckContentSchemaIdChangeResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<CheckContentSchemaIdChangeResult>
  nameWithType: Task<CheckContentSchemaIdChangeResult>
  fullName: System.Threading.Tasks.Task<Picturepark.SDK.V1.Contract.CheckContentSchemaIdChangeResult>
  nameWithType.vb: Task(Of CheckContentSchemaIdChangeResult)
  fullName.vb: System.Threading.Tasks.Task(Of Picturepark.SDK.V1.Contract.CheckContentSchemaIdChangeResult)
  name.vb: Task(Of CheckContentSchemaIdChangeResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Picturepark.SDK.V1.Contract.CheckContentSchemaIdChangeResult
    name: CheckContentSchemaIdChangeResult
    href: Picturepark.SDK.V1.Contract.CheckContentSchemaIdChangeResult.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.CheckContentSchemaIdChangeResult
    name: CheckContentSchemaIdChangeResult
    href: Picturepark.SDK.V1.Contract.CheckContentSchemaIdChangeResult.html
  - name: )
- uid: Picturepark.SDK.V1.Contract.IContentClient.CheckUpdateFileAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.CheckUpdateFileAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_CheckUpdateFileAsync_System_String_Picturepark_SDK_V1_Contract_ContentFileUpdateCheckRequest_System_Threading_CancellationToken_
  name: CheckUpdateFileAsync
  nameWithType: IContentClient.CheckUpdateFileAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.CheckUpdateFileAsync
- uid: Picturepark.SDK.V1.Contract.ContentFileUpdateCheckRequest
  commentId: T:Picturepark.SDK.V1.Contract.ContentFileUpdateCheckRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ContentFileUpdateCheckRequest.html
  name: ContentFileUpdateCheckRequest
  nameWithType: ContentFileUpdateCheckRequest
  fullName: Picturepark.SDK.V1.Contract.ContentFileUpdateCheckRequest
- uid: Picturepark.SDK.V1.Contract.IContentClient.UpdateFileAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.UpdateFileAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_UpdateFileAsync_System_String_Picturepark_SDK_V1_Contract_ContentFileUpdateRequest_System_Nullable_System_Boolean__System_Threading_CancellationToken_
  name: UpdateFileAsync
  nameWithType: IContentClient.UpdateFileAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.UpdateFileAsync
- uid: Picturepark.SDK.V1.Contract.ContentFileUpdateRequest
  commentId: T:Picturepark.SDK.V1.Contract.ContentFileUpdateRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ContentFileUpdateRequest.html
  name: ContentFileUpdateRequest
  nameWithType: ContentFileUpdateRequest
  fullName: Picturepark.SDK.V1.Contract.ContentFileUpdateRequest
- uid: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.BusinessProcess}
  commentId: T:System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.BusinessProcess}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<BusinessProcess>
  nameWithType: Task<BusinessProcess>
  fullName: System.Threading.Tasks.Task<Picturepark.SDK.V1.Contract.BusinessProcess>
  nameWithType.vb: Task(Of BusinessProcess)
  fullName.vb: System.Threading.Tasks.Task(Of Picturepark.SDK.V1.Contract.BusinessProcess)
  name.vb: Task(Of BusinessProcess)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Picturepark.SDK.V1.Contract.BusinessProcess
    name: BusinessProcess
    href: Picturepark.SDK.V1.Contract.BusinessProcess.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.BusinessProcess
    name: BusinessProcess
    href: Picturepark.SDK.V1.Contract.BusinessProcess.html
  - name: )
- uid: Picturepark.SDK.V1.Contract.IContentClient.GetReferencesAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.GetReferencesAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_GetReferencesAsync_System_String_Picturepark_SDK_V1_Contract_ContentReferencesRequest_System_Threading_CancellationToken_
  name: GetReferencesAsync
  nameWithType: IContentClient.GetReferencesAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.GetReferencesAsync
- uid: Picturepark.SDK.V1.Contract.ContentReferencesRequest
  commentId: T:Picturepark.SDK.V1.Contract.ContentReferencesRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ContentReferencesRequest.html
  name: ContentReferencesRequest
  nameWithType: ContentReferencesRequest
  fullName: Picturepark.SDK.V1.Contract.ContentReferencesRequest
- uid: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.ContentReferencesResult}
  commentId: T:System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.ContentReferencesResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ContentReferencesResult>
  nameWithType: Task<ContentReferencesResult>
  fullName: System.Threading.Tasks.Task<Picturepark.SDK.V1.Contract.ContentReferencesResult>
  nameWithType.vb: Task(Of ContentReferencesResult)
  fullName.vb: System.Threading.Tasks.Task(Of Picturepark.SDK.V1.Contract.ContentReferencesResult)
  name.vb: Task(Of ContentReferencesResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Picturepark.SDK.V1.Contract.ContentReferencesResult
    name: ContentReferencesResult
    href: Picturepark.SDK.V1.Contract.ContentReferencesResult.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.ContentReferencesResult
    name: ContentReferencesResult
    href: Picturepark.SDK.V1.Contract.ContentReferencesResult.html
  - name: )
- uid: Picturepark.SDK.V1.Contract.IContentClient.GetOutputsAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.GetOutputsAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_GetOutputsAsync_System_String_System_Threading_CancellationToken_
  name: GetOutputsAsync
  nameWithType: IContentClient.GetOutputsAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.GetOutputsAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.OutputResolveResult}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.OutputResolveResult}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ICollection<OutputResolveResult>>
  nameWithType: Task<ICollection<OutputResolveResult>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.ICollection<Picturepark.SDK.V1.Contract.OutputResolveResult>>
  nameWithType.vb: Task(Of ICollection(Of OutputResolveResult))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.ICollection(Of Picturepark.SDK.V1.Contract.OutputResolveResult))
  name.vb: Task(Of ICollection(Of OutputResolveResult))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Picturepark.SDK.V1.Contract.OutputResolveResult
    name: OutputResolveResult
    href: Picturepark.SDK.V1.Contract.OutputResolveResult.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.OutputResolveResult
    name: OutputResolveResult
    href: Picturepark.SDK.V1.Contract.OutputResolveResult.html
  - name: )
  - name: )
- uid: Picturepark.SDK.V1.Contract.IContentClient.CreateDownloadLinkAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.CreateDownloadLinkAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_CreateDownloadLinkAsync_Picturepark_SDK_V1_Contract_ContentDownloadLinkCreateRequest_System_Threading_CancellationToken_
  name: CreateDownloadLinkAsync
  nameWithType: IContentClient.CreateDownloadLinkAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.CreateDownloadLinkAsync
- uid: Picturepark.SDK.V1.Contract.ContentDownloadLinkCreateRequest
  commentId: T:Picturepark.SDK.V1.Contract.ContentDownloadLinkCreateRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ContentDownloadLinkCreateRequest.html
  name: ContentDownloadLinkCreateRequest
  nameWithType: ContentDownloadLinkCreateRequest
  fullName: Picturepark.SDK.V1.Contract.ContentDownloadLinkCreateRequest
- uid: Picturepark.SDK.V1.Contract.IContentClient.GetDownloadLinkAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.GetDownloadLinkAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_GetDownloadLinkAsync_System_String_System_Threading_CancellationToken_
  name: GetDownloadLinkAsync
  nameWithType: IContentClient.GetDownloadLinkAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.GetDownloadLinkAsync
- uid: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.DownloadLink}
  commentId: T:System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.DownloadLink}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<DownloadLink>
  nameWithType: Task<DownloadLink>
  fullName: System.Threading.Tasks.Task<Picturepark.SDK.V1.Contract.DownloadLink>
  nameWithType.vb: Task(Of DownloadLink)
  fullName.vb: System.Threading.Tasks.Task(Of Picturepark.SDK.V1.Contract.DownloadLink)
  name.vb: Task(Of DownloadLink)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Picturepark.SDK.V1.Contract.DownloadLink
    name: DownloadLink
    href: Picturepark.SDK.V1.Contract.DownloadLink.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.DownloadLink
    name: DownloadLink
    href: Picturepark.SDK.V1.Contract.DownloadLink.html
  - name: )
- uid: Picturepark.SDK.V1.Contract.IContentClient.DeleteManyAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.DeleteManyAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_DeleteManyAsync_Picturepark_SDK_V1_Contract_ContentDeleteManyRequest_System_Threading_CancellationToken_
  name: DeleteManyAsync
  nameWithType: IContentClient.DeleteManyAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.DeleteManyAsync
- uid: Picturepark.SDK.V1.Contract.ContentDeleteManyRequest
  commentId: T:Picturepark.SDK.V1.Contract.ContentDeleteManyRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ContentDeleteManyRequest.html
  name: ContentDeleteManyRequest
  nameWithType: ContentDeleteManyRequest
  fullName: Picturepark.SDK.V1.Contract.ContentDeleteManyRequest
- uid: Picturepark.SDK.V1.Contract.IContentClient.DeleteManyByFilterAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.DeleteManyByFilterAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_DeleteManyByFilterAsync_Picturepark_SDK_V1_Contract_ContentDeleteManyFilterRequest_System_Threading_CancellationToken_
  name: DeleteManyByFilterAsync
  nameWithType: IContentClient.DeleteManyByFilterAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.DeleteManyByFilterAsync
- uid: Picturepark.SDK.V1.Contract.ContentDeleteManyFilterRequest
  commentId: T:Picturepark.SDK.V1.Contract.ContentDeleteManyFilterRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ContentDeleteManyFilterRequest.html
  name: ContentDeleteManyFilterRequest
  nameWithType: ContentDeleteManyFilterRequest
  fullName: Picturepark.SDK.V1.Contract.ContentDeleteManyFilterRequest
- uid: Picturepark.SDK.V1.Contract.IContentClient.RestoreManyAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.RestoreManyAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_RestoreManyAsync_Picturepark_SDK_V1_Contract_ContentRestoreManyRequest_System_Threading_CancellationToken_
  name: RestoreManyAsync
  nameWithType: IContentClient.RestoreManyAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.RestoreManyAsync
- uid: Picturepark.SDK.V1.Contract.ContentRestoreManyRequest
  commentId: T:Picturepark.SDK.V1.Contract.ContentRestoreManyRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ContentRestoreManyRequest.html
  name: ContentRestoreManyRequest
  nameWithType: ContentRestoreManyRequest
  fullName: Picturepark.SDK.V1.Contract.ContentRestoreManyRequest
- uid: Picturepark.SDK.V1.Contract.IContentClient.GetReferencesManyAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.GetReferencesManyAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_GetReferencesManyAsync_Picturepark_SDK_V1_Contract_ContentManyReferencesRequest_System_Threading_CancellationToken_
  name: GetReferencesManyAsync
  nameWithType: IContentClient.GetReferencesManyAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.GetReferencesManyAsync
- uid: Picturepark.SDK.V1.Contract.ContentManyReferencesRequest
  commentId: T:Picturepark.SDK.V1.Contract.ContentManyReferencesRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ContentManyReferencesRequest.html
  name: ContentManyReferencesRequest
  nameWithType: ContentManyReferencesRequest
  fullName: Picturepark.SDK.V1.Contract.ContentManyReferencesRequest
- uid: Picturepark.SDK.V1.Contract.IContentClient.GetOutputsManyAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.GetOutputsManyAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_GetOutputsManyAsync_Picturepark_SDK_V1_Contract_OutputResolveManyRequest_System_Threading_CancellationToken_
  name: GetOutputsManyAsync
  nameWithType: IContentClient.GetOutputsManyAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.GetOutputsManyAsync
- uid: Picturepark.SDK.V1.Contract.OutputResolveManyRequest
  commentId: T:Picturepark.SDK.V1.Contract.OutputResolveManyRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.OutputResolveManyRequest.html
  name: OutputResolveManyRequest
  nameWithType: OutputResolveManyRequest
  fullName: Picturepark.SDK.V1.Contract.OutputResolveManyRequest
- uid: Picturepark.SDK.V1.Contract.IContentClient.RepairContentsByFilterAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.RepairContentsByFilterAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_RepairContentsByFilterAsync_Picturepark_SDK_V1_Contract_ContentRepairByFilterRequest_System_Threading_CancellationToken_
  name: RepairContentsByFilterAsync
  nameWithType: IContentClient.RepairContentsByFilterAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.RepairContentsByFilterAsync
- uid: Picturepark.SDK.V1.Contract.ContentRepairByFilterRequest
  commentId: T:Picturepark.SDK.V1.Contract.ContentRepairByFilterRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ContentRepairByFilterRequest.html
  name: ContentRepairByFilterRequest
  nameWithType: ContentRepairByFilterRequest
  fullName: Picturepark.SDK.V1.Contract.ContentRepairByFilterRequest
- uid: Picturepark.SDK.V1.Contract.IContentClient.RepairContentsBatchAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.RepairContentsBatchAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_RepairContentsBatchAsync_Picturepark_SDK_V1_Contract_ContentRepairBatchRequest_System_Threading_CancellationToken_
  name: RepairContentsBatchAsync
  nameWithType: IContentClient.RepairContentsBatchAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.RepairContentsBatchAsync
- uid: Picturepark.SDK.V1.Contract.ContentRepairBatchRequest
  commentId: T:Picturepark.SDK.V1.Contract.ContentRepairBatchRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ContentRepairBatchRequest.html
  name: ContentRepairBatchRequest
  nameWithType: ContentRepairBatchRequest
  fullName: Picturepark.SDK.V1.Contract.ContentRepairBatchRequest
- uid: Picturepark.SDK.V1.Contract.IContentClient.TransferOwnershipByFilterAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.TransferOwnershipByFilterAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_TransferOwnershipByFilterAsync_Picturepark_SDK_V1_Contract_ContentOwnershipBatchTransferFilterRequest_System_Threading_CancellationToken_
  name: TransferOwnershipByFilterAsync
  nameWithType: IContentClient.TransferOwnershipByFilterAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.TransferOwnershipByFilterAsync
- uid: Picturepark.SDK.V1.Contract.ContentOwnershipBatchTransferFilterRequest
  commentId: T:Picturepark.SDK.V1.Contract.ContentOwnershipBatchTransferFilterRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ContentOwnershipBatchTransferFilterRequest.html
  name: ContentOwnershipBatchTransferFilterRequest
  nameWithType: ContentOwnershipBatchTransferFilterRequest
  fullName: Picturepark.SDK.V1.Contract.ContentOwnershipBatchTransferFilterRequest
- uid: Picturepark.SDK.V1.Contract.IContentClient.UpdatePermissionsByFilterAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.UpdatePermissionsByFilterAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_UpdatePermissionsByFilterAsync_Picturepark_SDK_V1_Contract_ContentPermissionsBatchUpdateFilterRequest_System_Threading_CancellationToken_
  name: UpdatePermissionsByFilterAsync
  nameWithType: IContentClient.UpdatePermissionsByFilterAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.UpdatePermissionsByFilterAsync
- uid: Picturepark.SDK.V1.Contract.ContentPermissionsBatchUpdateFilterRequest
  commentId: T:Picturepark.SDK.V1.Contract.ContentPermissionsBatchUpdateFilterRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ContentPermissionsBatchUpdateFilterRequest.html
  name: ContentPermissionsBatchUpdateFilterRequest
  nameWithType: ContentPermissionsBatchUpdateFilterRequest
  fullName: Picturepark.SDK.V1.Contract.ContentPermissionsBatchUpdateFilterRequest
- uid: Picturepark.SDK.V1.Contract.IContentClient.SearchAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.SearchAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_SearchAsync_Picturepark_SDK_V1_Contract_ContentSearchRequest_System_Threading_CancellationToken_
  name: SearchAsync
  nameWithType: IContentClient.SearchAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.SearchAsync
- uid: Picturepark.SDK.V1.Contract.ContentSearchRequest
  commentId: T:Picturepark.SDK.V1.Contract.ContentSearchRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ContentSearchRequest.html
  name: ContentSearchRequest
  nameWithType: ContentSearchRequest
  fullName: Picturepark.SDK.V1.Contract.ContentSearchRequest
- uid: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.ContentSearchResult}
  commentId: T:System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.ContentSearchResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ContentSearchResult>
  nameWithType: Task<ContentSearchResult>
  fullName: System.Threading.Tasks.Task<Picturepark.SDK.V1.Contract.ContentSearchResult>
  nameWithType.vb: Task(Of ContentSearchResult)
  fullName.vb: System.Threading.Tasks.Task(Of Picturepark.SDK.V1.Contract.ContentSearchResult)
  name.vb: Task(Of ContentSearchResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Picturepark.SDK.V1.Contract.ContentSearchResult
    name: ContentSearchResult
    href: Picturepark.SDK.V1.Contract.ContentSearchResult.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.ContentSearchResult
    name: ContentSearchResult
    href: Picturepark.SDK.V1.Contract.ContentSearchResult.html
  - name: )
- uid: Picturepark.SDK.V1.Contract.IContentClient.AggregateOnChannelAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.AggregateOnChannelAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_AggregateOnChannelAsync_Picturepark_SDK_V1_Contract_ContentAggregationOnChannelRequest_System_Threading_CancellationToken_
  name: AggregateOnChannelAsync
  nameWithType: IContentClient.AggregateOnChannelAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.AggregateOnChannelAsync
- uid: Picturepark.SDK.V1.Contract.ContentAggregationOnChannelRequest
  commentId: T:Picturepark.SDK.V1.Contract.ContentAggregationOnChannelRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ContentAggregationOnChannelRequest.html
  name: ContentAggregationOnChannelRequest
  nameWithType: ContentAggregationOnChannelRequest
  fullName: Picturepark.SDK.V1.Contract.ContentAggregationOnChannelRequest
- uid: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.ObjectAggregationResult}
  commentId: T:System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.ObjectAggregationResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ObjectAggregationResult>
  nameWithType: Task<ObjectAggregationResult>
  fullName: System.Threading.Tasks.Task<Picturepark.SDK.V1.Contract.ObjectAggregationResult>
  nameWithType.vb: Task(Of ObjectAggregationResult)
  fullName.vb: System.Threading.Tasks.Task(Of Picturepark.SDK.V1.Contract.ObjectAggregationResult)
  name.vb: Task(Of ObjectAggregationResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Picturepark.SDK.V1.Contract.ObjectAggregationResult
    name: ObjectAggregationResult
    href: Picturepark.SDK.V1.Contract.ObjectAggregationResult.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.ObjectAggregationResult
    name: ObjectAggregationResult
    href: Picturepark.SDK.V1.Contract.ObjectAggregationResult.html
  - name: )
- uid: Picturepark.SDK.V1.Contract.IContentClient.AggregateAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.AggregateAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_AggregateAsync_Picturepark_SDK_V1_Contract_ContentAggregationRequest_System_Threading_CancellationToken_
  name: AggregateAsync
  nameWithType: IContentClient.AggregateAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.AggregateAsync
- uid: Picturepark.SDK.V1.Contract.ContentAggregationRequest
  commentId: T:Picturepark.SDK.V1.Contract.ContentAggregationRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ContentAggregationRequest.html
  name: ContentAggregationRequest
  nameWithType: ContentAggregationRequest
  fullName: Picturepark.SDK.V1.Contract.ContentAggregationRequest
- uid: Picturepark.SDK.V1.Contract.IContentClient.GetVersionsAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.GetVersionsAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_GetVersionsAsync_System_String_Picturepark_SDK_V1_Contract_HistoricVersionSearchRequest_System_Threading_CancellationToken_
  name: GetVersionsAsync
  nameWithType: IContentClient.GetVersionsAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.GetVersionsAsync
- uid: Picturepark.SDK.V1.Contract.HistoricVersionSearchRequest
  commentId: T:Picturepark.SDK.V1.Contract.HistoricVersionSearchRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.HistoricVersionSearchRequest.html
  name: HistoricVersionSearchRequest
  nameWithType: HistoricVersionSearchRequest
  fullName: Picturepark.SDK.V1.Contract.HistoricVersionSearchRequest
- uid: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.HistoricVersionSearchResult}
  commentId: T:System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.HistoricVersionSearchResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<HistoricVersionSearchResult>
  nameWithType: Task<HistoricVersionSearchResult>
  fullName: System.Threading.Tasks.Task<Picturepark.SDK.V1.Contract.HistoricVersionSearchResult>
  nameWithType.vb: Task(Of HistoricVersionSearchResult)
  fullName.vb: System.Threading.Tasks.Task(Of Picturepark.SDK.V1.Contract.HistoricVersionSearchResult)
  name.vb: Task(Of HistoricVersionSearchResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Picturepark.SDK.V1.Contract.HistoricVersionSearchResult
    name: HistoricVersionSearchResult
    href: Picturepark.SDK.V1.Contract.HistoricVersionSearchResult.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.HistoricVersionSearchResult
    name: HistoricVersionSearchResult
    href: Picturepark.SDK.V1.Contract.HistoricVersionSearchResult.html
  - name: )
- uid: Picturepark.SDK.V1.Contract.IContentClient.CreateVersionDownloadLinkAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.CreateVersionDownloadLinkAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_CreateVersionDownloadLinkAsync_System_String_System_Int32_System_Threading_CancellationToken_
  name: CreateVersionDownloadLinkAsync
  nameWithType: IContentClient.CreateVersionDownloadLinkAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.CreateVersionDownloadLinkAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Picturepark.SDK.V1.Contract.IContentClient.DeleteVersionAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.DeleteVersionAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_DeleteVersionAsync_System_String_System_Int32_System_Threading_CancellationToken_
  name: DeleteVersionAsync
  nameWithType: IContentClient.DeleteVersionAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.DeleteVersionAsync
- uid: Picturepark.SDK.V1.Contract.IContentClient.CreateCommentAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.CreateCommentAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_CreateCommentAsync_System_String_Picturepark_SDK_V1_Contract_CommentCreateRequest_System_Nullable_System_TimeSpan__System_Threading_CancellationToken_
  name: CreateCommentAsync
  nameWithType: IContentClient.CreateCommentAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.CreateCommentAsync
- uid: Picturepark.SDK.V1.Contract.CommentCreateRequest
  commentId: T:Picturepark.SDK.V1.Contract.CommentCreateRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.CommentCreateRequest.html
  name: CommentCreateRequest
  nameWithType: CommentCreateRequest
  fullName: Picturepark.SDK.V1.Contract.CommentCreateRequest
- uid: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.Comment}
  commentId: T:System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.Comment}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Comment>
  nameWithType: Task<Comment>
  fullName: System.Threading.Tasks.Task<Picturepark.SDK.V1.Contract.Comment>
  nameWithType.vb: Task(Of Comment)
  fullName.vb: System.Threading.Tasks.Task(Of Picturepark.SDK.V1.Contract.Comment)
  name.vb: Task(Of Comment)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Picturepark.SDK.V1.Contract.Comment
    name: Comment
    href: Picturepark.SDK.V1.Contract.Comment.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.Comment
    name: Comment
    href: Picturepark.SDK.V1.Contract.Comment.html
  - name: )
- uid: Picturepark.SDK.V1.Contract.IContentClient.SearchCommentsAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.SearchCommentsAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_SearchCommentsAsync_System_String_Picturepark_SDK_V1_Contract_CommentSearchRequest_System_Threading_CancellationToken_
  name: SearchCommentsAsync
  nameWithType: IContentClient.SearchCommentsAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.SearchCommentsAsync
- uid: Picturepark.SDK.V1.Contract.CommentSearchRequest
  commentId: T:Picturepark.SDK.V1.Contract.CommentSearchRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.CommentSearchRequest.html
  name: CommentSearchRequest
  nameWithType: CommentSearchRequest
  fullName: Picturepark.SDK.V1.Contract.CommentSearchRequest
- uid: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.CommentSearchResult}
  commentId: T:System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.CommentSearchResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<CommentSearchResult>
  nameWithType: Task<CommentSearchResult>
  fullName: System.Threading.Tasks.Task<Picturepark.SDK.V1.Contract.CommentSearchResult>
  nameWithType.vb: Task(Of CommentSearchResult)
  fullName.vb: System.Threading.Tasks.Task(Of Picturepark.SDK.V1.Contract.CommentSearchResult)
  name.vb: Task(Of CommentSearchResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Picturepark.SDK.V1.Contract.CommentSearchResult
    name: CommentSearchResult
    href: Picturepark.SDK.V1.Contract.CommentSearchResult.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.CommentSearchResult
    name: CommentSearchResult
    href: Picturepark.SDK.V1.Contract.CommentSearchResult.html
  - name: )
- uid: Picturepark.SDK.V1.Contract.IContentClient.SetDisplayContentAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.SetDisplayContentAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_SetDisplayContentAsync_System_String_Picturepark_SDK_V1_Contract_SetDisplayContentRequest_System_Collections_Generic_IEnumerable_Picturepark_SDK_V1_Contract_ContentResolveBehavior__System_Nullable_System_TimeSpan__System_Nullable_System_Boolean__System_Threading_CancellationToken_
  name: SetDisplayContentAsync
  nameWithType: IContentClient.SetDisplayContentAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.SetDisplayContentAsync
- uid: Picturepark.SDK.V1.Contract.SetDisplayContentRequest
  commentId: T:Picturepark.SDK.V1.Contract.SetDisplayContentRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.SetDisplayContentRequest.html
  name: SetDisplayContentRequest
  nameWithType: SetDisplayContentRequest
  fullName: Picturepark.SDK.V1.Contract.SetDisplayContentRequest
- uid: Picturepark.SDK.V1.Contract.IContentClient.SetManyDisplayContentsAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.SetManyDisplayContentsAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_SetManyDisplayContentsAsync_Picturepark_SDK_V1_Contract_SetDisplayContentsManyRequest_System_Threading_CancellationToken_
  name: SetManyDisplayContentsAsync
  nameWithType: IContentClient.SetManyDisplayContentsAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.SetManyDisplayContentsAsync
- uid: Picturepark.SDK.V1.Contract.SetDisplayContentsManyRequest
  commentId: T:Picturepark.SDK.V1.Contract.SetDisplayContentsManyRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.SetDisplayContentsManyRequest.html
  name: SetDisplayContentsManyRequest
  nameWithType: SetDisplayContentsManyRequest
  fullName: Picturepark.SDK.V1.Contract.SetDisplayContentsManyRequest
- uid: Picturepark.SDK.V1.Contract.IContentClient.DownloadFilesAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.DownloadFilesAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_DownloadFilesAsync_Picturepark_SDK_V1_Contract_ContentSearchResult_System_String_System_Boolean_System_Int32_System_String_System_String_System_Boolean_System_Action_Picturepark_SDK_V1_Contract_ContentDetail__System_Action_System_Exception__System_Threading_CancellationToken_
  name: DownloadFilesAsync
  nameWithType: IContentClient.DownloadFilesAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.DownloadFilesAsync
- uid: Picturepark.SDK.V1.Contract.ContentSearchResult
  commentId: T:Picturepark.SDK.V1.Contract.ContentSearchResult
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ContentSearchResult.html
  name: ContentSearchResult
  nameWithType: ContentSearchResult
  fullName: Picturepark.SDK.V1.Contract.ContentSearchResult
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Action{Picturepark.SDK.V1.Contract.ContentDetail}
  commentId: T:System.Action{Picturepark.SDK.V1.Contract.ContentDetail}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<ContentDetail>
  nameWithType: Action<ContentDetail>
  fullName: System.Action<Picturepark.SDK.V1.Contract.ContentDetail>
  nameWithType.vb: Action(Of ContentDetail)
  fullName.vb: System.Action(Of Picturepark.SDK.V1.Contract.ContentDetail)
  name.vb: Action(Of ContentDetail)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Picturepark.SDK.V1.Contract.ContentDetail
    name: ContentDetail
    href: Picturepark.SDK.V1.Contract.ContentDetail.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.ContentDetail
    name: ContentDetail
    href: Picturepark.SDK.V1.Contract.ContentDetail.html
  - name: )
- uid: System.Action{System.Exception}
  commentId: T:System.Action{System.Exception}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<Exception>
  nameWithType: Action<Exception>
  fullName: System.Action<System.Exception>
  nameWithType.vb: Action(Of Exception)
  fullName.vb: System.Action(Of System.Exception)
  name.vb: Action(Of Exception)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Picturepark.SDK.V1.Contract.Results.ContentBatchOperationResult
  commentId: T:Picturepark.SDK.V1.Contract.Results.ContentBatchOperationResult
  parent: Picturepark.SDK.V1.Contract.Results
  href: Picturepark.SDK.V1.Contract.Results.ContentBatchOperationResult.html
  name: ContentBatchOperationResult
  nameWithType: ContentBatchOperationResult
  fullName: Picturepark.SDK.V1.Contract.Results.ContentBatchOperationResult
- uid: Picturepark.SDK.V1.Contract.IContentClient.CreateManyAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.CreateManyAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_CreateManyAsync_Picturepark_SDK_V1_Contract_ContentCreateManyRequest_System_Nullable_System_TimeSpan__System_Boolean_System_Threading_CancellationToken_
  name: CreateManyAsync
  nameWithType: IContentClient.CreateManyAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.CreateManyAsync
- uid: Picturepark.SDK.V1.Contract.ContentCreateManyRequest
  commentId: T:Picturepark.SDK.V1.Contract.ContentCreateManyRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ContentCreateManyRequest.html
  name: ContentCreateManyRequest
  nameWithType: ContentCreateManyRequest
  fullName: Picturepark.SDK.V1.Contract.ContentCreateManyRequest
- uid: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.Results.ContentBatchOperationWithRequestIdResult}
  commentId: T:System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.Results.ContentBatchOperationWithRequestIdResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ContentBatchOperationWithRequestIdResult>
  nameWithType: Task<ContentBatchOperationWithRequestIdResult>
  fullName: System.Threading.Tasks.Task<Picturepark.SDK.V1.Contract.Results.ContentBatchOperationWithRequestIdResult>
  nameWithType.vb: Task(Of ContentBatchOperationWithRequestIdResult)
  fullName.vb: System.Threading.Tasks.Task(Of Picturepark.SDK.V1.Contract.Results.ContentBatchOperationWithRequestIdResult)
  name.vb: Task(Of ContentBatchOperationWithRequestIdResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Picturepark.SDK.V1.Contract.Results.ContentBatchOperationWithRequestIdResult
    name: ContentBatchOperationWithRequestIdResult
    href: Picturepark.SDK.V1.Contract.Results.ContentBatchOperationWithRequestIdResult.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.Results.ContentBatchOperationWithRequestIdResult
    name: ContentBatchOperationWithRequestIdResult
    href: Picturepark.SDK.V1.Contract.Results.ContentBatchOperationWithRequestIdResult.html
  - name: )
- uid: Picturepark.SDK.V1.Contract.Results
  commentId: N:Picturepark.SDK.V1.Contract.Results
  href: Picturepark.html
  name: Picturepark.SDK.V1.Contract.Results
  nameWithType: Picturepark.SDK.V1.Contract.Results
  fullName: Picturepark.SDK.V1.Contract.Results
  spec.csharp:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.Contract
    name: Contract
    href: Picturepark.SDK.V1.Contract.html
  - name: .
  - uid: Picturepark.SDK.V1.Contract.Results
    name: Results
    href: Picturepark.SDK.V1.Contract.Results.html
  spec.vb:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.Contract
    name: Contract
    href: Picturepark.SDK.V1.Contract.html
  - name: .
  - uid: Picturepark.SDK.V1.Contract.Results
    name: Results
    href: Picturepark.SDK.V1.Contract.Results.html
- uid: Picturepark.SDK.V1.Contract.IContentClient.UpdateMetadataManyAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.UpdateMetadataManyAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_UpdateMetadataManyAsync_Picturepark_SDK_V1_Contract_ContentMetadataUpdateManyRequest_System_Nullable_System_TimeSpan__System_Boolean_System_Threading_CancellationToken_
  name: UpdateMetadataManyAsync
  nameWithType: IContentClient.UpdateMetadataManyAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.UpdateMetadataManyAsync
- uid: Picturepark.SDK.V1.Contract.ContentMetadataUpdateManyRequest
  commentId: T:Picturepark.SDK.V1.Contract.ContentMetadataUpdateManyRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ContentMetadataUpdateManyRequest.html
  name: ContentMetadataUpdateManyRequest
  nameWithType: ContentMetadataUpdateManyRequest
  fullName: Picturepark.SDK.V1.Contract.ContentMetadataUpdateManyRequest
- uid: System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.Results.ContentBatchOperationResult}
  commentId: T:System.Threading.Tasks.Task{Picturepark.SDK.V1.Contract.Results.ContentBatchOperationResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ContentBatchOperationResult>
  nameWithType: Task<ContentBatchOperationResult>
  fullName: System.Threading.Tasks.Task<Picturepark.SDK.V1.Contract.Results.ContentBatchOperationResult>
  nameWithType.vb: Task(Of ContentBatchOperationResult)
  fullName.vb: System.Threading.Tasks.Task(Of Picturepark.SDK.V1.Contract.Results.ContentBatchOperationResult)
  name.vb: Task(Of ContentBatchOperationResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Picturepark.SDK.V1.Contract.Results.ContentBatchOperationResult
    name: ContentBatchOperationResult
    href: Picturepark.SDK.V1.Contract.Results.ContentBatchOperationResult.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.Results.ContentBatchOperationResult
    name: ContentBatchOperationResult
    href: Picturepark.SDK.V1.Contract.Results.ContentBatchOperationResult.html
  - name: )
- uid: Picturepark.SDK.V1.Contract.IContentClient.UpdatePermissionsManyAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.UpdatePermissionsManyAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_UpdatePermissionsManyAsync_Picturepark_SDK_V1_Contract_ContentPermissionsUpdateManyRequest_System_Nullable_System_TimeSpan__System_Boolean_System_Threading_CancellationToken_
  name: UpdatePermissionsManyAsync
  nameWithType: IContentClient.UpdatePermissionsManyAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.UpdatePermissionsManyAsync
- uid: Picturepark.SDK.V1.Contract.ContentPermissionsUpdateManyRequest
  commentId: T:Picturepark.SDK.V1.Contract.ContentPermissionsUpdateManyRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ContentPermissionsUpdateManyRequest.html
  name: ContentPermissionsUpdateManyRequest
  nameWithType: ContentPermissionsUpdateManyRequest
  fullName: Picturepark.SDK.V1.Contract.ContentPermissionsUpdateManyRequest
- uid: Picturepark.SDK.V1.Contract.IContentClient.TransferOwnershipManyAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.TransferOwnershipManyAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_TransferOwnershipManyAsync_Picturepark_SDK_V1_Contract_ContentOwnershipTransferManyRequest_System_Nullable_System_TimeSpan__System_Boolean_System_Threading_CancellationToken_
  name: TransferOwnershipManyAsync
  nameWithType: IContentClient.TransferOwnershipManyAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.TransferOwnershipManyAsync
- uid: Picturepark.SDK.V1.Contract.ContentOwnershipTransferManyRequest
  commentId: T:Picturepark.SDK.V1.Contract.ContentOwnershipTransferManyRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ContentOwnershipTransferManyRequest.html
  name: ContentOwnershipTransferManyRequest
  nameWithType: ContentOwnershipTransferManyRequest
  fullName: Picturepark.SDK.V1.Contract.ContentOwnershipTransferManyRequest
- uid: Picturepark.SDK.V1.Contract.IContentClient.BatchUpdateFieldsByIdsAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.BatchUpdateFieldsByIdsAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_BatchUpdateFieldsByIdsAsync_Picturepark_SDK_V1_Contract_ContentFieldsBatchUpdateRequest_System_Nullable_System_TimeSpan__System_Boolean_System_Threading_CancellationToken_
  name: BatchUpdateFieldsByIdsAsync
  nameWithType: IContentClient.BatchUpdateFieldsByIdsAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.BatchUpdateFieldsByIdsAsync
- uid: Picturepark.SDK.V1.Contract.ContentFieldsBatchUpdateRequest
  commentId: T:Picturepark.SDK.V1.Contract.ContentFieldsBatchUpdateRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ContentFieldsBatchUpdateRequest.html
  name: ContentFieldsBatchUpdateRequest
  nameWithType: ContentFieldsBatchUpdateRequest
  fullName: Picturepark.SDK.V1.Contract.ContentFieldsBatchUpdateRequest
- uid: Picturepark.SDK.V1.Contract.IContentClient.BatchUpdateFieldsByFilterAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.BatchUpdateFieldsByFilterAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_BatchUpdateFieldsByFilterAsync_Picturepark_SDK_V1_Contract_ContentFieldsBatchUpdateFilterRequest_System_Nullable_System_TimeSpan__System_Boolean_System_Threading_CancellationToken_
  name: BatchUpdateFieldsByFilterAsync
  nameWithType: IContentClient.BatchUpdateFieldsByFilterAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.BatchUpdateFieldsByFilterAsync
- uid: Picturepark.SDK.V1.Contract.ContentFieldsBatchUpdateFilterRequest
  commentId: T:Picturepark.SDK.V1.Contract.ContentFieldsBatchUpdateFilterRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ContentFieldsBatchUpdateFilterRequest.html
  name: ContentFieldsBatchUpdateFilterRequest
  nameWithType: ContentFieldsBatchUpdateFilterRequest
  fullName: Picturepark.SDK.V1.Contract.ContentFieldsBatchUpdateFilterRequest
- uid: Picturepark.SDK.V1.Contract.IContentClient.WaitForBusinessProcessAndReturnResult*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.WaitForBusinessProcessAndReturnResult
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_WaitForBusinessProcessAndReturnResult_System_String_System_Nullable_System_TimeSpan__System_Boolean_System_Threading_CancellationToken_
  name: WaitForBusinessProcessAndReturnResult
  nameWithType: IContentClient.WaitForBusinessProcessAndReturnResult
  fullName: Picturepark.SDK.V1.Contract.IContentClient.WaitForBusinessProcessAndReturnResult
- uid: Picturepark.SDK.V1.Contract.Results.ContentBatchOperationWithRequestIdResult
  commentId: T:Picturepark.SDK.V1.Contract.Results.ContentBatchOperationWithRequestIdResult
  parent: Picturepark.SDK.V1.Contract.Results
  href: Picturepark.SDK.V1.Contract.Results.ContentBatchOperationWithRequestIdResult.html
  name: ContentBatchOperationWithRequestIdResult
  nameWithType: ContentBatchOperationWithRequestIdResult
  fullName: Picturepark.SDK.V1.Contract.Results.ContentBatchOperationWithRequestIdResult
- uid: Picturepark.SDK.V1.Contract.IContentClient.WaitForBusinessProcessAndReturnResultWithRequestId*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.WaitForBusinessProcessAndReturnResultWithRequestId
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_WaitForBusinessProcessAndReturnResultWithRequestId_System_String_System_Nullable_System_TimeSpan__System_Boolean_System_Threading_CancellationToken_
  name: WaitForBusinessProcessAndReturnResultWithRequestId
  nameWithType: IContentClient.WaitForBusinessProcessAndReturnResultWithRequestId
  fullName: Picturepark.SDK.V1.Contract.IContentClient.WaitForBusinessProcessAndReturnResultWithRequestId
- uid: Picturepark.SDK.V1.Contract.IContentClient.CreateAndAwaitDownloadLinkAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.CreateAndAwaitDownloadLinkAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_CreateAndAwaitDownloadLinkAsync_Picturepark_SDK_V1_Contract_ContentDownloadLinkCreateRequest_System_Nullable_System_TimeSpan__System_Threading_CancellationToken_
  name: CreateAndAwaitDownloadLinkAsync
  nameWithType: IContentClient.CreateAndAwaitDownloadLinkAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.CreateAndAwaitDownloadLinkAsync
- uid: Picturepark.SDK.V1.Contract.IContentClient.GetVersionDownloadLinkAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.GetVersionDownloadLinkAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_GetVersionDownloadLinkAsync_System_String_System_Int32_System_Threading_CancellationToken_
  name: GetVersionDownloadLinkAsync
  nameWithType: IContentClient.GetVersionDownloadLinkAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.GetVersionDownloadLinkAsync
- uid: Picturepark.SDK.V1.Contract.IContentClient.GetCommentAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.GetCommentAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_GetCommentAsync_System_String_
  name: GetCommentAsync
  nameWithType: IContentClient.GetCommentAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.GetCommentAsync
- uid: Picturepark.SDK.V1.Contract.IContentClient.UpdateCommentAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.UpdateCommentAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_UpdateCommentAsync_System_String_Picturepark_SDK_V1_Contract_CommentEditable_
  name: UpdateCommentAsync
  nameWithType: IContentClient.UpdateCommentAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.UpdateCommentAsync
- uid: Picturepark.SDK.V1.Contract.CommentEditable
  commentId: T:Picturepark.SDK.V1.Contract.CommentEditable
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.CommentEditable.html
  name: CommentEditable
  nameWithType: CommentEditable
  fullName: Picturepark.SDK.V1.Contract.CommentEditable
- uid: Picturepark.SDK.V1.Contract.IContentClient.DeleteCommentAsync*
  commentId: Overload:Picturepark.SDK.V1.Contract.IContentClient.DeleteCommentAsync
  href: Picturepark.SDK.V1.Contract.IContentClient.html#Picturepark_SDK_V1_Contract_IContentClient_DeleteCommentAsync_System_String_
  name: DeleteCommentAsync
  nameWithType: IContentClient.DeleteCommentAsync
  fullName: Picturepark.SDK.V1.Contract.IContentClient.DeleteCommentAsync
