### YamlMime:ManagedReference
items:
- uid: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator
  commentId: T:Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator
  id: TermsAggregator
  parent: Picturepark.SDK.V1.CloudManager.Contract
  children:
  - Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Excludes
  - Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Field
  - Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.FromJson(System.String)
  - Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Includes
  - Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.SearchFields
  - Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.SearchString
  - Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Size
  - Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Sort
  - Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.ToJson
  langs:
  - csharp
  - vb
  name: TermsAggregator
  nameWithType: TermsAggregator
  fullName: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator
  type: Class
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: TermsAggregator
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 14527
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: A multi-bucket value aggregator
  example: []
  syntax:
    content: >-
      [GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]

      public class TermsAggregator : AggregatorBase
    content.vb: >-
      <GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")>

      Public Class TermsAggregator Inherits AggregatorBase
  inheritance:
  - System.Object
  - Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase
  derivedClasses:
  - Picturepark.SDK.V1.CloudManager.Contract.TermsEnumAggregator
  - Picturepark.SDK.V1.CloudManager.Contract.TermsRelationAggregator
  inheritedMembers:
  - Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase.Name
  - Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase.Names
  - Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase.Aggregators
  - Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase.Filter
  - Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase.UiBehavior
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.CodeDom.Compiler.GeneratedCodeAttribute
    ctor: System.CodeDom.Compiler.GeneratedCodeAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: NJsonSchema
    - type: System.String
      value: 13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))
- uid: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Field
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Field
  id: Field
  parent: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator
  langs:
  - csharp
  - vb
  name: Field
  nameWithType: TermsAggregator.Field
  fullName: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Field
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Field
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 14533
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: The field's ID to execute the aggregation on. Only not analyzed fields are supported.
  example: []
  syntax:
    content: >-
      [JsonProperty("field", Required = Required.Always)]

      [Required]

      public string Field { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("field", Required:=Required.Always)>

      <Required>

      Public Property Field As String
  overload: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Field*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: field
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Size
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Size
  id: Size
  parent: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: TermsAggregator.Size
  fullName: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Size
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Size
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 14540
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: It defines how many term buckets should be returned out of the overall terms list.
  example: []
  syntax:
    content: >-
      [JsonProperty("size", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public int? Size { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonProperty("size", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Size As Integer?
  overload: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Size*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: size
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Includes
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Includes
  id: Includes
  parent: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator
  langs:
  - csharp
  - vb
  name: Includes
  nameWithType: TermsAggregator.Includes
  fullName: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Includes
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Includes
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 14546
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: Includes values for which buckets will be created. Supports regular expression strings or arrays of exact values.
  example: []
  syntax:
    content: >-
      [JsonProperty("includes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public ICollection<string> Includes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonProperty("includes", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Includes As ICollection(Of String)
  overload: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Includes*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: includes
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Excludes
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Excludes
  id: Excludes
  parent: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator
  langs:
  - csharp
  - vb
  name: Excludes
  nameWithType: TermsAggregator.Excludes
  fullName: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Excludes
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Excludes
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 14552
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: Excludes values for which buckets will be created. Supports regular expression strings or arrays of exact values.
  example: []
  syntax:
    content: >-
      [JsonProperty("excludes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public ICollection<string> Excludes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonProperty("excludes", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Excludes As ICollection(Of String)
  overload: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Excludes*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: excludes
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.SearchString
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.SearchString
  id: SearchString
  parent: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator
  langs:
  - csharp
  - vb
  name: SearchString
  nameWithType: TermsAggregator.SearchString
  fullName: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.SearchString
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: SearchString
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 14558
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: Limits the possible returned aggregation values by using a query string filter. The Lucene query string syntax is supported.
  example: []
  syntax:
    content: >-
      [JsonProperty("searchString", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public string SearchString { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("searchString", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property SearchString As String
  overload: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.SearchString*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: searchString
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.SearchFields
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.SearchFields
  id: SearchFields
  parent: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator
  langs:
  - csharp
  - vb
  name: SearchFields
  nameWithType: TermsAggregator.SearchFields
  fullName: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.SearchFields
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: SearchFields
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 14564
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: Search fields to be used to search the SearchString value into. If no search field is specified, the Field value is used.
  example: []
  syntax:
    content: >-
      [JsonProperty("searchFields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public ICollection<string> SearchFields { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonProperty("searchFields", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property SearchFields As ICollection(Of String)
  overload: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.SearchFields*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: searchFields
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Sort
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Sort
  id: Sort
  parent: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator
  langs:
  - csharp
  - vb
  name: Sort
  nameWithType: TermsAggregator.Sort
  fullName: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Sort
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Sort
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 14570
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: Sort settings for the aggregation results. If no sort is specified, aggregation is sorted on the item count.
  example: []
  syntax:
    content: >-
      [JsonProperty("sort", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public SortInfo Sort { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.CloudManager.Contract.SortInfo
    content.vb: >-
      <JsonProperty("sort", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Sort As SortInfo
  overload: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Sort*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: sort
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.ToJson
  commentId: M:Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.ToJson
  id: ToJson
  parent: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator
  langs:
  - csharp
  - vb
  name: ToJson()
  nameWithType: TermsAggregator.ToJson()
  fullName: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.ToJson()
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: ToJson
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 14573
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  syntax:
    content: public string ToJson()
    return:
      type: System.String
    content.vb: Public Function ToJson() As String
  overload: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.ToJson*
- uid: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.FromJson(System.String)
  commentId: M:Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.FromJson(System.String)
  id: FromJson(System.String)
  parent: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator
  langs:
  - csharp
  - vb
  name: FromJson(string)
  nameWithType: TermsAggregator.FromJson(string)
  fullName: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.FromJson(string)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: FromJson
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 14579
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  syntax:
    content: public static TermsAggregator FromJson(string data)
    parameters:
    - id: data
      type: System.String
    return:
      type: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator
    content.vb: Public Shared Function FromJson(data As String) As TermsAggregator
  overload: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.FromJson*
  nameWithType.vb: TermsAggregator.FromJson(String)
  fullName.vb: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.FromJson(String)
  name.vb: FromJson(String)
references:
- uid: Picturepark.SDK.V1.CloudManager.Contract
  commentId: N:Picturepark.SDK.V1.CloudManager.Contract
  href: Picturepark.html
  name: Picturepark.SDK.V1.CloudManager.Contract
  nameWithType: Picturepark.SDK.V1.CloudManager.Contract
  fullName: Picturepark.SDK.V1.CloudManager.Contract
  spec.csharp:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.CloudManager
    name: CloudManager
    href: Picturepark.SDK.V1.CloudManager.html
  - name: .
  - uid: Picturepark.SDK.V1.CloudManager.Contract
    name: Contract
    href: Picturepark.SDK.V1.CloudManager.Contract.html
  spec.vb:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.CloudManager
    name: CloudManager
    href: Picturepark.SDK.V1.CloudManager.html
  - name: .
  - uid: Picturepark.SDK.V1.CloudManager.Contract
    name: Contract
    href: Picturepark.SDK.V1.CloudManager.Contract.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase
  commentId: T:Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase
  parent: Picturepark.SDK.V1.CloudManager.Contract
  href: Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase.html
  name: AggregatorBase
  nameWithType: AggregatorBase
  fullName: Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase
- uid: Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase.Name
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase.Name
  parent: Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase
  href: Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase.html#Picturepark_SDK_V1_CloudManager_Contract_AggregatorBase_Name
  name: Name
  nameWithType: AggregatorBase.Name
  fullName: Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase.Name
- uid: Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase.Names
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase.Names
  parent: Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase
  href: Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase.html#Picturepark_SDK_V1_CloudManager_Contract_AggregatorBase_Names
  name: Names
  nameWithType: AggregatorBase.Names
  fullName: Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase.Names
- uid: Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase.Aggregators
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase.Aggregators
  parent: Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase
  href: Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase.html#Picturepark_SDK_V1_CloudManager_Contract_AggregatorBase_Aggregators
  name: Aggregators
  nameWithType: AggregatorBase.Aggregators
  fullName: Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase.Aggregators
- uid: Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase.Filter
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase.Filter
  parent: Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase
  href: Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase.html#Picturepark_SDK_V1_CloudManager_Contract_AggregatorBase_Filter
  name: Filter
  nameWithType: AggregatorBase.Filter
  fullName: Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase.Filter
- uid: Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase.UiBehavior
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase.UiBehavior
  parent: Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase
  href: Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase.html#Picturepark_SDK_V1_CloudManager_Contract_AggregatorBase_UiBehavior
  name: UiBehavior
  nameWithType: AggregatorBase.UiBehavior
  fullName: Picturepark.SDK.V1.CloudManager.Contract.AggregatorBase.UiBehavior
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Field*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Field
  href: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.html#Picturepark_SDK_V1_CloudManager_Contract_TermsAggregator_Field
  name: Field
  nameWithType: TermsAggregator.Field
  fullName: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Field
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Size*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Size
  href: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.html#Picturepark_SDK_V1_CloudManager_Contract_TermsAggregator_Size
  name: Size
  nameWithType: TermsAggregator.Size
  fullName: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Size
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Includes*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Includes
  href: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.html#Picturepark_SDK_V1_CloudManager_Contract_TermsAggregator_Includes
  name: Includes
  nameWithType: TermsAggregator.Includes
  fullName: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Includes
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<string>
  nameWithType: ICollection<string>
  fullName: System.Collections.Generic.ICollection<string>
  nameWithType.vb: ICollection(Of String)
  fullName.vb: System.Collections.Generic.ICollection(Of String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Excludes*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Excludes
  href: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.html#Picturepark_SDK_V1_CloudManager_Contract_TermsAggregator_Excludes
  name: Excludes
  nameWithType: TermsAggregator.Excludes
  fullName: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Excludes
- uid: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.SearchString*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.SearchString
  href: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.html#Picturepark_SDK_V1_CloudManager_Contract_TermsAggregator_SearchString
  name: SearchString
  nameWithType: TermsAggregator.SearchString
  fullName: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.SearchString
- uid: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.SearchFields*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.SearchFields
  href: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.html#Picturepark_SDK_V1_CloudManager_Contract_TermsAggregator_SearchFields
  name: SearchFields
  nameWithType: TermsAggregator.SearchFields
  fullName: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.SearchFields
- uid: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Sort*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Sort
  href: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.html#Picturepark_SDK_V1_CloudManager_Contract_TermsAggregator_Sort
  name: Sort
  nameWithType: TermsAggregator.Sort
  fullName: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.Sort
- uid: Picturepark.SDK.V1.CloudManager.Contract.SortInfo
  commentId: T:Picturepark.SDK.V1.CloudManager.Contract.SortInfo
  parent: Picturepark.SDK.V1.CloudManager.Contract
  href: Picturepark.SDK.V1.CloudManager.Contract.SortInfo.html
  name: SortInfo
  nameWithType: SortInfo
  fullName: Picturepark.SDK.V1.CloudManager.Contract.SortInfo
- uid: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.ToJson*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.ToJson
  href: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.html#Picturepark_SDK_V1_CloudManager_Contract_TermsAggregator_ToJson
  name: ToJson
  nameWithType: TermsAggregator.ToJson
  fullName: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.ToJson
- uid: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.FromJson*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.FromJson
  href: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.html#Picturepark_SDK_V1_CloudManager_Contract_TermsAggregator_FromJson_System_String_
  name: FromJson
  nameWithType: TermsAggregator.FromJson
  fullName: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.FromJson
- uid: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator
  commentId: T:Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator
  parent: Picturepark.SDK.V1.CloudManager.Contract
  href: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator.html
  name: TermsAggregator
  nameWithType: TermsAggregator
  fullName: Picturepark.SDK.V1.CloudManager.Contract.TermsAggregator
