### YamlMime:ManagedReference
items:
- uid: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation
  commentId: T:Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation
  id: LicenseInformation
  parent: Picturepark.SDK.V1.CloudManager.Contract
  children:
  - Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.BackupOption
  - Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.ContentStatistics
  - Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.EnableTreeView
  - Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.FromJson(System.String)
  - Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.HistoricVersioningState
  - Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.ImageOptimization
  - Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.Subscription
  - Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.ToJson
  langs:
  - csharp
  - vb
  name: LicenseInformation
  nameWithType: LicenseInformation
  fullName: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation
  type: Class
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: LicenseInformation
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 15758
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  syntax:
    content: >-
      [GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]

      public class LicenseInformation
    content.vb: >-
      <GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")>

      Public Class LicenseInformation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.CodeDom.Compiler.GeneratedCodeAttribute
    ctor: System.CodeDom.Compiler.GeneratedCodeAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: NJsonSchema
    - type: System.String
      value: 13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))
- uid: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.BackupOption
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.BackupOption
  id: BackupOption
  parent: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation
  langs:
  - csharp
  - vb
  name: BackupOption
  nameWithType: LicenseInformation.BackupOption
  fullName: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.BackupOption
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: BackupOption
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 15764
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: Backup option for the customer
  example: []
  syntax:
    content: >-
      [JsonProperty("backupOption", Required = Required.Always)]

      [Required(AllowEmptyStrings = true)]

      [JsonConverter(typeof(StringEnumConverter))]

      public LicenseBackupOption BackupOption { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.CloudManager.Contract.LicenseBackupOption
    content.vb: >-
      <JsonProperty("backupOption", Required:=Required.Always)>

      <Required(AllowEmptyStrings:=True)>

      <JsonConverter(GetType(StringEnumConverter))>

      Public Property BackupOption As LicenseBackupOption
  overload: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.BackupOption*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: backupOption
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: AllowEmptyStrings
      type: System.Boolean
      value: true
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Newtonsoft.Json.Converters.StringEnumConverter
- uid: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.Subscription
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.Subscription
  id: Subscription
  parent: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation
  langs:
  - csharp
  - vb
  name: Subscription
  nameWithType: LicenseInformation.Subscription
  fullName: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.Subscription
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Subscription
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 15772
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: Subscription for the customer
  example: []
  syntax:
    content: >-
      [JsonProperty("subscription", Required = Required.Always)]

      [Required(AllowEmptyStrings = true)]

      [JsonConverter(typeof(StringEnumConverter))]

      public LicenseSubscription Subscription { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.CloudManager.Contract.LicenseSubscription
    content.vb: >-
      <JsonProperty("subscription", Required:=Required.Always)>

      <Required(AllowEmptyStrings:=True)>

      <JsonConverter(GetType(StringEnumConverter))>

      Public Property Subscription As LicenseSubscription
  overload: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.Subscription*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: subscription
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: AllowEmptyStrings
      type: System.Boolean
      value: true
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Newtonsoft.Json.Converters.StringEnumConverter
- uid: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.HistoricVersioningState
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.HistoricVersioningState
  id: HistoricVersioningState
  parent: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation
  langs:
  - csharp
  - vb
  name: HistoricVersioningState
  nameWithType: LicenseInformation.HistoricVersioningState
  fullName: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.HistoricVersioningState
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: HistoricVersioningState
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 15780
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: State of content historic versioning
  example: []
  syntax:
    content: >-
      [JsonProperty("historicVersioningState", Required = Required.Always)]

      [Required(AllowEmptyStrings = true)]

      [JsonConverter(typeof(StringEnumConverter))]

      public HistoricVersioningState HistoricVersioningState { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.CloudManager.Contract.HistoricVersioningState
    content.vb: >-
      <JsonProperty("historicVersioningState", Required:=Required.Always)>

      <Required(AllowEmptyStrings:=True)>

      <JsonConverter(GetType(StringEnumConverter))>

      Public Property HistoricVersioningState As HistoricVersioningState
  overload: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.HistoricVersioningState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: historicVersioningState
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: AllowEmptyStrings
      type: System.Boolean
      value: true
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Newtonsoft.Json.Converters.StringEnumConverter
- uid: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.ContentStatistics
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.ContentStatistics
  id: ContentStatistics
  parent: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation
  langs:
  - csharp
  - vb
  name: ContentStatistics
  nameWithType: LicenseInformation.ContentStatistics
  fullName: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.ContentStatistics
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: ContentStatistics
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 15788
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: State of statistics features for Content
  example: []
  syntax:
    content: >-
      [JsonProperty("contentStatistics", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public StatisticsLicenseState ContentStatistics { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.CloudManager.Contract.StatisticsLicenseState
    content.vb: >-
      <JsonProperty("contentStatistics", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property ContentStatistics As StatisticsLicenseState
  overload: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.ContentStatistics*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: contentStatistics
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.ImageOptimization
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.ImageOptimization
  id: ImageOptimization
  parent: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation
  langs:
  - csharp
  - vb
  name: ImageOptimization
  nameWithType: LicenseInformation.ImageOptimization
  fullName: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.ImageOptimization
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: ImageOptimization
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 15794
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: Image optimization licensing options
  example: []
  syntax:
    content: >-
      [JsonProperty("imageOptimization", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public ImageOptimizationLicenseState ImageOptimization { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.CloudManager.Contract.ImageOptimizationLicenseState
    content.vb: >-
      <JsonProperty("imageOptimization", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property ImageOptimization As ImageOptimizationLicenseState
  overload: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.ImageOptimization*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: imageOptimization
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.EnableTreeView
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.EnableTreeView
  id: EnableTreeView
  parent: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation
  langs:
  - csharp
  - vb
  name: EnableTreeView
  nameWithType: LicenseInformation.EnableTreeView
  fullName: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.EnableTreeView
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: EnableTreeView
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 15800
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: License flag to enable tree view
  example: []
  syntax:
    content: >-
      [JsonProperty("enableTreeView", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public bool? EnableTreeView { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("enableTreeView", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property EnableTreeView As Boolean?
  overload: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.EnableTreeView*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: enableTreeView
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.ToJson
  commentId: M:Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.ToJson
  id: ToJson
  parent: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation
  langs:
  - csharp
  - vb
  name: ToJson()
  nameWithType: LicenseInformation.ToJson()
  fullName: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.ToJson()
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: ToJson
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 15803
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  syntax:
    content: public string ToJson()
    return:
      type: System.String
    content.vb: Public Function ToJson() As String
  overload: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.ToJson*
- uid: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.FromJson(System.String)
  commentId: M:Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.FromJson(System.String)
  id: FromJson(System.String)
  parent: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation
  langs:
  - csharp
  - vb
  name: FromJson(string)
  nameWithType: LicenseInformation.FromJson(string)
  fullName: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.FromJson(string)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: FromJson
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 15809
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  syntax:
    content: public static LicenseInformation FromJson(string data)
    parameters:
    - id: data
      type: System.String
    return:
      type: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation
    content.vb: Public Shared Function FromJson(data As String) As LicenseInformation
  overload: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.FromJson*
  nameWithType.vb: LicenseInformation.FromJson(String)
  fullName.vb: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.FromJson(String)
  name.vb: FromJson(String)
references:
- uid: Picturepark.SDK.V1.CloudManager.Contract
  commentId: N:Picturepark.SDK.V1.CloudManager.Contract
  href: Picturepark.html
  name: Picturepark.SDK.V1.CloudManager.Contract
  nameWithType: Picturepark.SDK.V1.CloudManager.Contract
  fullName: Picturepark.SDK.V1.CloudManager.Contract
  spec.csharp:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.CloudManager
    name: CloudManager
    href: Picturepark.SDK.V1.CloudManager.html
  - name: .
  - uid: Picturepark.SDK.V1.CloudManager.Contract
    name: Contract
    href: Picturepark.SDK.V1.CloudManager.Contract.html
  spec.vb:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.CloudManager
    name: CloudManager
    href: Picturepark.SDK.V1.CloudManager.html
  - name: .
  - uid: Picturepark.SDK.V1.CloudManager.Contract
    name: Contract
    href: Picturepark.SDK.V1.CloudManager.Contract.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.BackupOption*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.BackupOption
  href: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.html#Picturepark_SDK_V1_CloudManager_Contract_LicenseInformation_BackupOption
  name: BackupOption
  nameWithType: LicenseInformation.BackupOption
  fullName: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.BackupOption
- uid: Picturepark.SDK.V1.CloudManager.Contract.LicenseBackupOption
  commentId: T:Picturepark.SDK.V1.CloudManager.Contract.LicenseBackupOption
  parent: Picturepark.SDK.V1.CloudManager.Contract
  href: Picturepark.SDK.V1.CloudManager.Contract.LicenseBackupOption.html
  name: LicenseBackupOption
  nameWithType: LicenseBackupOption
  fullName: Picturepark.SDK.V1.CloudManager.Contract.LicenseBackupOption
- uid: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.Subscription*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.Subscription
  href: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.html#Picturepark_SDK_V1_CloudManager_Contract_LicenseInformation_Subscription
  name: Subscription
  nameWithType: LicenseInformation.Subscription
  fullName: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.Subscription
- uid: Picturepark.SDK.V1.CloudManager.Contract.LicenseSubscription
  commentId: T:Picturepark.SDK.V1.CloudManager.Contract.LicenseSubscription
  parent: Picturepark.SDK.V1.CloudManager.Contract
  href: Picturepark.SDK.V1.CloudManager.Contract.LicenseSubscription.html
  name: LicenseSubscription
  nameWithType: LicenseSubscription
  fullName: Picturepark.SDK.V1.CloudManager.Contract.LicenseSubscription
- uid: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.HistoricVersioningState*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.HistoricVersioningState
  href: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.html#Picturepark_SDK_V1_CloudManager_Contract_LicenseInformation_HistoricVersioningState
  name: HistoricVersioningState
  nameWithType: LicenseInformation.HistoricVersioningState
  fullName: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.HistoricVersioningState
- uid: Picturepark.SDK.V1.CloudManager.Contract.HistoricVersioningState
  commentId: T:Picturepark.SDK.V1.CloudManager.Contract.HistoricVersioningState
  parent: Picturepark.SDK.V1.CloudManager.Contract
  href: Picturepark.SDK.V1.CloudManager.Contract.HistoricVersioningState.html
  name: HistoricVersioningState
  nameWithType: HistoricVersioningState
  fullName: Picturepark.SDK.V1.CloudManager.Contract.HistoricVersioningState
- uid: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.ContentStatistics*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.ContentStatistics
  href: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.html#Picturepark_SDK_V1_CloudManager_Contract_LicenseInformation_ContentStatistics
  name: ContentStatistics
  nameWithType: LicenseInformation.ContentStatistics
  fullName: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.ContentStatistics
- uid: Picturepark.SDK.V1.CloudManager.Contract.StatisticsLicenseState
  commentId: T:Picturepark.SDK.V1.CloudManager.Contract.StatisticsLicenseState
  parent: Picturepark.SDK.V1.CloudManager.Contract
  href: Picturepark.SDK.V1.CloudManager.Contract.StatisticsLicenseState.html
  name: StatisticsLicenseState
  nameWithType: StatisticsLicenseState
  fullName: Picturepark.SDK.V1.CloudManager.Contract.StatisticsLicenseState
- uid: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.ImageOptimization*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.ImageOptimization
  href: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.html#Picturepark_SDK_V1_CloudManager_Contract_LicenseInformation_ImageOptimization
  name: ImageOptimization
  nameWithType: LicenseInformation.ImageOptimization
  fullName: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.ImageOptimization
- uid: Picturepark.SDK.V1.CloudManager.Contract.ImageOptimizationLicenseState
  commentId: T:Picturepark.SDK.V1.CloudManager.Contract.ImageOptimizationLicenseState
  parent: Picturepark.SDK.V1.CloudManager.Contract
  href: Picturepark.SDK.V1.CloudManager.Contract.ImageOptimizationLicenseState.html
  name: ImageOptimizationLicenseState
  nameWithType: ImageOptimizationLicenseState
  fullName: Picturepark.SDK.V1.CloudManager.Contract.ImageOptimizationLicenseState
- uid: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.EnableTreeView*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.EnableTreeView
  href: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.html#Picturepark_SDK_V1_CloudManager_Contract_LicenseInformation_EnableTreeView
  name: EnableTreeView
  nameWithType: LicenseInformation.EnableTreeView
  fullName: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.EnableTreeView
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool?
  nameWithType: bool?
  fullName: bool?
  nameWithType.vb: Boolean?
  fullName.vb: Boolean?
  name.vb: Boolean?
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.ToJson*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.ToJson
  href: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.html#Picturepark_SDK_V1_CloudManager_Contract_LicenseInformation_ToJson
  name: ToJson
  nameWithType: LicenseInformation.ToJson
  fullName: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.ToJson
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.FromJson*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.FromJson
  href: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.html#Picturepark_SDK_V1_CloudManager_Contract_LicenseInformation_FromJson_System_String_
  name: FromJson
  nameWithType: LicenseInformation.FromJson
  fullName: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.FromJson
- uid: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation
  commentId: T:Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation
  parent: Picturepark.SDK.V1.CloudManager.Contract
  href: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation.html
  name: LicenseInformation
  nameWithType: LicenseInformation
  fullName: Picturepark.SDK.V1.CloudManager.Contract.LicenseInformation
