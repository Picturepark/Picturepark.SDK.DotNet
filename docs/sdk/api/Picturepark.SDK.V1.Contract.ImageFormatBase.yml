### YamlMime:ManagedReference
items:
- uid: Picturepark.SDK.V1.Contract.ImageFormatBase
  commentId: T:Picturepark.SDK.V1.Contract.ImageFormatBase
  id: ImageFormatBase
  parent: Picturepark.SDK.V1.Contract
  children:
  - Picturepark.SDK.V1.Contract.ImageFormatBase.Actions
  - Picturepark.SDK.V1.Contract.ImageFormatBase.ColorProfile
  - Picturepark.SDK.V1.Contract.ImageFormatBase.ColorTransformationIntent
  - Picturepark.SDK.V1.Contract.ImageFormatBase.FromJson(System.String)
  - Picturepark.SDK.V1.Contract.ImageFormatBase.HorizontalResolution
  - Picturepark.SDK.V1.Contract.ImageFormatBase.KeepClippingPath
  - Picturepark.SDK.V1.Contract.ImageFormatBase.ResizeAction
  - Picturepark.SDK.V1.Contract.ImageFormatBase.ToJson
  - Picturepark.SDK.V1.Contract.ImageFormatBase.VerticalResolution
  langs:
  - csharp
  - vb
  name: ImageFormatBase
  nameWithType: ImageFormatBase
  fullName: Picturepark.SDK.V1.Contract.ImageFormatBase
  type: Class
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: ImageFormatBase
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 32775
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Base class for ImageFormats such as JPEG, PNG, TIFF, ...
  example: []
  syntax:
    content: >-
      [GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]

      public abstract class ImageFormatBase : FormatWithFixedExtensionBase
    content.vb: >-
      <GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")>

      Public MustInherit Class ImageFormatBase Inherits FormatWithFixedExtensionBase
  inheritance:
  - System.Object
  - Picturepark.SDK.V1.Contract.FormatBase
  - Picturepark.SDK.V1.Contract.FormatWithFixedExtensionBase
  derivedClasses:
  - Picturepark.SDK.V1.Contract.AvifFormat
  - Picturepark.SDK.V1.Contract.JpegFormat
  - Picturepark.SDK.V1.Contract.PngFormat
  - Picturepark.SDK.V1.Contract.TiffFormat
  - Picturepark.SDK.V1.Contract.WebPFormat
  inheritedMembers:
  - Picturepark.SDK.V1.Contract.FormatWithFixedExtensionBase.Extension
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.CodeDom.Compiler.GeneratedCodeAttribute
    ctor: System.CodeDom.Compiler.GeneratedCodeAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: NJsonSchema
    - type: System.String
      value: 13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))
- uid: Picturepark.SDK.V1.Contract.ImageFormatBase.ColorProfile
  commentId: P:Picturepark.SDK.V1.Contract.ImageFormatBase.ColorProfile
  id: ColorProfile
  parent: Picturepark.SDK.V1.Contract.ImageFormatBase
  langs:
  - csharp
  - vb
  name: ColorProfile
  nameWithType: ImageFormatBase.ColorProfile
  fullName: Picturepark.SDK.V1.Contract.ImageFormatBase.ColorProfile
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: ColorProfile
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 32781
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Color profile to use. Colorspace is derived from the chosen profile.
  example: []
  syntax:
    content: >-
      [JsonProperty("colorProfile", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      [JsonConverter(typeof(StringEnumConverter))]

      public ColorProfile? ColorProfile { get; set; }
    parameters: []
    return:
      type: System.Nullable{Picturepark.SDK.V1.Contract.ColorProfile}
    content.vb: >-
      <JsonProperty("colorProfile", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      <JsonConverter(GetType(StringEnumConverter))>

      Public Property ColorProfile As ColorProfile?
  overload: Picturepark.SDK.V1.Contract.ImageFormatBase.ColorProfile*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: colorProfile
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Newtonsoft.Json.Converters.StringEnumConverter
- uid: Picturepark.SDK.V1.Contract.ImageFormatBase.ColorTransformationIntent
  commentId: P:Picturepark.SDK.V1.Contract.ImageFormatBase.ColorTransformationIntent
  id: ColorTransformationIntent
  parent: Picturepark.SDK.V1.Contract.ImageFormatBase
  langs:
  - csharp
  - vb
  name: ColorTransformationIntent
  nameWithType: ImageFormatBase.ColorTransformationIntent
  fullName: Picturepark.SDK.V1.Contract.ImageFormatBase.ColorTransformationIntent
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: ColorTransformationIntent
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 32788
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: 'The method of conversion for color spaces (e.g. CMYK to RGB). Further information can be found here: http://www.colourphil.co.uk/rendering_intents.shtml'
  example: []
  syntax:
    content: >-
      [JsonProperty("colorTransformationIntent", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      [JsonConverter(typeof(StringEnumConverter))]

      public ColorTransformationIntent ColorTransformationIntent { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.Contract.ColorTransformationIntent
    content.vb: >-
      <JsonProperty("colorTransformationIntent", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      <JsonConverter(GetType(StringEnumConverter))>

      Public Property ColorTransformationIntent As ColorTransformationIntent
  overload: Picturepark.SDK.V1.Contract.ImageFormatBase.ColorTransformationIntent*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: colorTransformationIntent
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Newtonsoft.Json.Converters.StringEnumConverter
- uid: Picturepark.SDK.V1.Contract.ImageFormatBase.HorizontalResolution
  commentId: P:Picturepark.SDK.V1.Contract.ImageFormatBase.HorizontalResolution
  id: HorizontalResolution
  parent: Picturepark.SDK.V1.Contract.ImageFormatBase
  langs:
  - csharp
  - vb
  name: HorizontalResolution
  nameWithType: ImageFormatBase.HorizontalResolution
  fullName: Picturepark.SDK.V1.Contract.ImageFormatBase.HorizontalResolution
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: HorizontalResolution
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 32795
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Horizontal resolution in dpi (dots per inch)
  example: []
  syntax:
    content: >-
      [JsonProperty("horizontalResolution", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public float? HorizontalResolution { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Single}
    content.vb: >-
      <JsonProperty("horizontalResolution", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property HorizontalResolution As Single?
  overload: Picturepark.SDK.V1.Contract.ImageFormatBase.HorizontalResolution*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: horizontalResolution
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.ImageFormatBase.VerticalResolution
  commentId: P:Picturepark.SDK.V1.Contract.ImageFormatBase.VerticalResolution
  id: VerticalResolution
  parent: Picturepark.SDK.V1.Contract.ImageFormatBase
  langs:
  - csharp
  - vb
  name: VerticalResolution
  nameWithType: ImageFormatBase.VerticalResolution
  fullName: Picturepark.SDK.V1.Contract.ImageFormatBase.VerticalResolution
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: VerticalResolution
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 32801
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Vertical resolution in dpi (dots per inch)
  example: []
  syntax:
    content: >-
      [JsonProperty("verticalResolution", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public float? VerticalResolution { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Single}
    content.vb: >-
      <JsonProperty("verticalResolution", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property VerticalResolution As Single?
  overload: Picturepark.SDK.V1.Contract.ImageFormatBase.VerticalResolution*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: verticalResolution
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.ImageFormatBase.KeepClippingPath
  commentId: P:Picturepark.SDK.V1.Contract.ImageFormatBase.KeepClippingPath
  id: KeepClippingPath
  parent: Picturepark.SDK.V1.Contract.ImageFormatBase
  langs:
  - csharp
  - vb
  name: KeepClippingPath
  nameWithType: ImageFormatBase.KeepClippingPath
  fullName: Picturepark.SDK.V1.Contract.ImageFormatBase.KeepClippingPath
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: KeepClippingPath
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 32807
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Copy clipping paths from input.
  example: []
  syntax:
    content: >-
      [JsonProperty("keepClippingPath", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public bool KeepClippingPath { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("keepClippingPath", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property KeepClippingPath As Boolean
  overload: Picturepark.SDK.V1.Contract.ImageFormatBase.KeepClippingPath*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: keepClippingPath
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.ImageFormatBase.ResizeAction
  commentId: P:Picturepark.SDK.V1.Contract.ImageFormatBase.ResizeAction
  id: ResizeAction
  parent: Picturepark.SDK.V1.Contract.ImageFormatBase
  langs:
  - csharp
  - vb
  name: ResizeAction
  nameWithType: ImageFormatBase.ResizeAction
  fullName: Picturepark.SDK.V1.Contract.ImageFormatBase.ResizeAction
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: ResizeAction
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 32813
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Allows resizing of the image.
  example: []
  syntax:
    content: >-
      [JsonProperty("resizeAction", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public ResizeAction ResizeAction { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.Contract.ResizeAction
    content.vb: >-
      <JsonProperty("resizeAction", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property ResizeAction As ResizeAction
  overload: Picturepark.SDK.V1.Contract.ImageFormatBase.ResizeAction*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: resizeAction
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.ImageFormatBase.Actions
  commentId: P:Picturepark.SDK.V1.Contract.ImageFormatBase.Actions
  id: Actions
  parent: Picturepark.SDK.V1.Contract.ImageFormatBase
  langs:
  - csharp
  - vb
  name: Actions
  nameWithType: ImageFormatBase.Actions
  fullName: Picturepark.SDK.V1.Contract.ImageFormatBase.Actions
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Actions
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 32819
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: A collection of actions to be applied during rendering.
  example: []
  syntax:
    content: >-
      [JsonProperty("actions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public ICollection<ImageActionBase> Actions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.ImageActionBase}
    content.vb: >-
      <JsonProperty("actions", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Actions As ICollection(Of ImageActionBase)
  overload: Picturepark.SDK.V1.Contract.ImageFormatBase.Actions*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: actions
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.ImageFormatBase.ToJson
  commentId: M:Picturepark.SDK.V1.Contract.ImageFormatBase.ToJson
  id: ToJson
  parent: Picturepark.SDK.V1.Contract.ImageFormatBase
  langs:
  - csharp
  - vb
  name: ToJson()
  nameWithType: ImageFormatBase.ToJson()
  fullName: Picturepark.SDK.V1.Contract.ImageFormatBase.ToJson()
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: ToJson
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 32822
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  syntax:
    content: public string ToJson()
    return:
      type: System.String
    content.vb: Public Function ToJson() As String
  overload: Picturepark.SDK.V1.Contract.ImageFormatBase.ToJson*
- uid: Picturepark.SDK.V1.Contract.ImageFormatBase.FromJson(System.String)
  commentId: M:Picturepark.SDK.V1.Contract.ImageFormatBase.FromJson(System.String)
  id: FromJson(System.String)
  parent: Picturepark.SDK.V1.Contract.ImageFormatBase
  langs:
  - csharp
  - vb
  name: FromJson(string)
  nameWithType: ImageFormatBase.FromJson(string)
  fullName: Picturepark.SDK.V1.Contract.ImageFormatBase.FromJson(string)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: FromJson
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 32828
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  syntax:
    content: public static ImageFormatBase FromJson(string data)
    parameters:
    - id: data
      type: System.String
    return:
      type: Picturepark.SDK.V1.Contract.ImageFormatBase
    content.vb: Public Shared Function FromJson(data As String) As ImageFormatBase
  overload: Picturepark.SDK.V1.Contract.ImageFormatBase.FromJson*
  nameWithType.vb: ImageFormatBase.FromJson(String)
  fullName.vb: Picturepark.SDK.V1.Contract.ImageFormatBase.FromJson(String)
  name.vb: FromJson(String)
references:
- uid: Picturepark.SDK.V1.Contract
  commentId: N:Picturepark.SDK.V1.Contract
  href: Picturepark.html
  name: Picturepark.SDK.V1.Contract
  nameWithType: Picturepark.SDK.V1.Contract
  fullName: Picturepark.SDK.V1.Contract
  spec.csharp:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.Contract
    name: Contract
    href: Picturepark.SDK.V1.Contract.html
  spec.vb:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.Contract
    name: Contract
    href: Picturepark.SDK.V1.Contract.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Picturepark.SDK.V1.Contract.FormatBase
  commentId: T:Picturepark.SDK.V1.Contract.FormatBase
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.FormatBase.html
  name: FormatBase
  nameWithType: FormatBase
  fullName: Picturepark.SDK.V1.Contract.FormatBase
- uid: Picturepark.SDK.V1.Contract.FormatWithFixedExtensionBase
  commentId: T:Picturepark.SDK.V1.Contract.FormatWithFixedExtensionBase
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.FormatWithFixedExtensionBase.html
  name: FormatWithFixedExtensionBase
  nameWithType: FormatWithFixedExtensionBase
  fullName: Picturepark.SDK.V1.Contract.FormatWithFixedExtensionBase
- uid: Picturepark.SDK.V1.Contract.FormatWithFixedExtensionBase.Extension
  commentId: P:Picturepark.SDK.V1.Contract.FormatWithFixedExtensionBase.Extension
  parent: Picturepark.SDK.V1.Contract.FormatWithFixedExtensionBase
  href: Picturepark.SDK.V1.Contract.FormatWithFixedExtensionBase.html#Picturepark_SDK_V1_Contract_FormatWithFixedExtensionBase_Extension
  name: Extension
  nameWithType: FormatWithFixedExtensionBase.Extension
  fullName: Picturepark.SDK.V1.Contract.FormatWithFixedExtensionBase.Extension
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Picturepark.SDK.V1.Contract.ImageFormatBase.ColorProfile*
  commentId: Overload:Picturepark.SDK.V1.Contract.ImageFormatBase.ColorProfile
  href: Picturepark.SDK.V1.Contract.ImageFormatBase.html#Picturepark_SDK_V1_Contract_ImageFormatBase_ColorProfile
  name: ColorProfile
  nameWithType: ImageFormatBase.ColorProfile
  fullName: Picturepark.SDK.V1.Contract.ImageFormatBase.ColorProfile
- uid: System.Nullable{Picturepark.SDK.V1.Contract.ColorProfile}
  commentId: T:System.Nullable{Picturepark.SDK.V1.Contract.ColorProfile}
  parent: System
  definition: System.Nullable`1
  href: Picturepark.SDK.V1.Contract.ColorProfile.html
  name: ColorProfile?
  nameWithType: ColorProfile?
  fullName: Picturepark.SDK.V1.Contract.ColorProfile?
  spec.csharp:
  - uid: Picturepark.SDK.V1.Contract.ColorProfile
    name: ColorProfile
    href: Picturepark.SDK.V1.Contract.ColorProfile.html
  - name: '?'
  spec.vb:
  - uid: Picturepark.SDK.V1.Contract.ColorProfile
    name: ColorProfile
    href: Picturepark.SDK.V1.Contract.ColorProfile.html
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Picturepark.SDK.V1.Contract.ImageFormatBase.ColorTransformationIntent*
  commentId: Overload:Picturepark.SDK.V1.Contract.ImageFormatBase.ColorTransformationIntent
  href: Picturepark.SDK.V1.Contract.ImageFormatBase.html#Picturepark_SDK_V1_Contract_ImageFormatBase_ColorTransformationIntent
  name: ColorTransformationIntent
  nameWithType: ImageFormatBase.ColorTransformationIntent
  fullName: Picturepark.SDK.V1.Contract.ImageFormatBase.ColorTransformationIntent
- uid: Picturepark.SDK.V1.Contract.ColorTransformationIntent
  commentId: T:Picturepark.SDK.V1.Contract.ColorTransformationIntent
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ColorTransformationIntent.html
  name: ColorTransformationIntent
  nameWithType: ColorTransformationIntent
  fullName: Picturepark.SDK.V1.Contract.ColorTransformationIntent
- uid: Picturepark.SDK.V1.Contract.ImageFormatBase.HorizontalResolution*
  commentId: Overload:Picturepark.SDK.V1.Contract.ImageFormatBase.HorizontalResolution
  href: Picturepark.SDK.V1.Contract.ImageFormatBase.html#Picturepark_SDK_V1_Contract_ImageFormatBase_HorizontalResolution
  name: HorizontalResolution
  nameWithType: ImageFormatBase.HorizontalResolution
  fullName: Picturepark.SDK.V1.Contract.ImageFormatBase.HorizontalResolution
- uid: System.Nullable{System.Single}
  commentId: T:System.Nullable{System.Single}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float?
  nameWithType: float?
  fullName: float?
  nameWithType.vb: Single?
  fullName.vb: Single?
  name.vb: Single?
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
- uid: Picturepark.SDK.V1.Contract.ImageFormatBase.VerticalResolution*
  commentId: Overload:Picturepark.SDK.V1.Contract.ImageFormatBase.VerticalResolution
  href: Picturepark.SDK.V1.Contract.ImageFormatBase.html#Picturepark_SDK_V1_Contract_ImageFormatBase_VerticalResolution
  name: VerticalResolution
  nameWithType: ImageFormatBase.VerticalResolution
  fullName: Picturepark.SDK.V1.Contract.ImageFormatBase.VerticalResolution
- uid: Picturepark.SDK.V1.Contract.ImageFormatBase.KeepClippingPath*
  commentId: Overload:Picturepark.SDK.V1.Contract.ImageFormatBase.KeepClippingPath
  href: Picturepark.SDK.V1.Contract.ImageFormatBase.html#Picturepark_SDK_V1_Contract_ImageFormatBase_KeepClippingPath
  name: KeepClippingPath
  nameWithType: ImageFormatBase.KeepClippingPath
  fullName: Picturepark.SDK.V1.Contract.ImageFormatBase.KeepClippingPath
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Picturepark.SDK.V1.Contract.ImageFormatBase.ResizeAction*
  commentId: Overload:Picturepark.SDK.V1.Contract.ImageFormatBase.ResizeAction
  href: Picturepark.SDK.V1.Contract.ImageFormatBase.html#Picturepark_SDK_V1_Contract_ImageFormatBase_ResizeAction
  name: ResizeAction
  nameWithType: ImageFormatBase.ResizeAction
  fullName: Picturepark.SDK.V1.Contract.ImageFormatBase.ResizeAction
- uid: Picturepark.SDK.V1.Contract.ResizeAction
  commentId: T:Picturepark.SDK.V1.Contract.ResizeAction
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ResizeAction.html
  name: ResizeAction
  nameWithType: ResizeAction
  fullName: Picturepark.SDK.V1.Contract.ResizeAction
- uid: Picturepark.SDK.V1.Contract.ImageFormatBase.Actions*
  commentId: Overload:Picturepark.SDK.V1.Contract.ImageFormatBase.Actions
  href: Picturepark.SDK.V1.Contract.ImageFormatBase.html#Picturepark_SDK_V1_Contract_ImageFormatBase_Actions
  name: Actions
  nameWithType: ImageFormatBase.Actions
  fullName: Picturepark.SDK.V1.Contract.ImageFormatBase.Actions
- uid: System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.ImageActionBase}
  commentId: T:System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.ImageActionBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<ImageActionBase>
  nameWithType: ICollection<ImageActionBase>
  fullName: System.Collections.Generic.ICollection<Picturepark.SDK.V1.Contract.ImageActionBase>
  nameWithType.vb: ICollection(Of ImageActionBase)
  fullName.vb: System.Collections.Generic.ICollection(Of Picturepark.SDK.V1.Contract.ImageActionBase)
  name.vb: ICollection(Of ImageActionBase)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Picturepark.SDK.V1.Contract.ImageActionBase
    name: ImageActionBase
    href: Picturepark.SDK.V1.Contract.ImageActionBase.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.ImageActionBase
    name: ImageActionBase
    href: Picturepark.SDK.V1.Contract.ImageActionBase.html
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Picturepark.SDK.V1.Contract.ImageFormatBase.ToJson*
  commentId: Overload:Picturepark.SDK.V1.Contract.ImageFormatBase.ToJson
  href: Picturepark.SDK.V1.Contract.ImageFormatBase.html#Picturepark_SDK_V1_Contract_ImageFormatBase_ToJson
  name: ToJson
  nameWithType: ImageFormatBase.ToJson
  fullName: Picturepark.SDK.V1.Contract.ImageFormatBase.ToJson
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Picturepark.SDK.V1.Contract.ImageFormatBase.FromJson*
  commentId: Overload:Picturepark.SDK.V1.Contract.ImageFormatBase.FromJson
  href: Picturepark.SDK.V1.Contract.ImageFormatBase.html#Picturepark_SDK_V1_Contract_ImageFormatBase_FromJson_System_String_
  name: FromJson
  nameWithType: ImageFormatBase.FromJson
  fullName: Picturepark.SDK.V1.Contract.ImageFormatBase.FromJson
- uid: Picturepark.SDK.V1.Contract.ImageFormatBase
  commentId: T:Picturepark.SDK.V1.Contract.ImageFormatBase
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ImageFormatBase.html
  name: ImageFormatBase
  nameWithType: ImageFormatBase
  fullName: Picturepark.SDK.V1.Contract.ImageFormatBase
