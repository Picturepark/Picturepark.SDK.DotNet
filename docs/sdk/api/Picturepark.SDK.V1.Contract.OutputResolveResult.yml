### YamlMime:ManagedReference
items:
- uid: Picturepark.SDK.V1.Contract.OutputResolveResult
  commentId: T:Picturepark.SDK.V1.Contract.OutputResolveResult
  id: OutputResolveResult
  parent: Picturepark.SDK.V1.Contract
  children:
  - Picturepark.SDK.V1.Contract.OutputResolveResult.AvailabilityState
  - Picturepark.SDK.V1.Contract.OutputResolveResult.ContentId
  - Picturepark.SDK.V1.Contract.OutputResolveResult.DynamicRendering
  - Picturepark.SDK.V1.Contract.OutputResolveResult.FileSize
  - Picturepark.SDK.V1.Contract.OutputResolveResult.FromJson(System.String)
  - Picturepark.SDK.V1.Contract.OutputResolveResult.Id
  - Picturepark.SDK.V1.Contract.OutputResolveResult.OutputFormatId
  - Picturepark.SDK.V1.Contract.OutputResolveResult.RenderingState
  - Picturepark.SDK.V1.Contract.OutputResolveResult.RenderingStateV2
  - Picturepark.SDK.V1.Contract.OutputResolveResult.ToJson
  langs:
  - csharp
  - vb
  name: OutputResolveResult
  nameWithType: OutputResolveResult
  fullName: Picturepark.SDK.V1.Contract.OutputResolveResult
  type: Class
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: OutputResolveResult
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 24900
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Result of output resolution.
  example: []
  syntax:
    content: >-
      [GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]

      public class OutputResolveResult
    content.vb: >-
      <GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")>

      Public Class OutputResolveResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.CodeDom.Compiler.GeneratedCodeAttribute
    ctor: System.CodeDom.Compiler.GeneratedCodeAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: NJsonSchema
    - type: System.String
      value: 13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))
- uid: Picturepark.SDK.V1.Contract.OutputResolveResult.Id
  commentId: P:Picturepark.SDK.V1.Contract.OutputResolveResult.Id
  id: Id
  parent: Picturepark.SDK.V1.Contract.OutputResolveResult
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: OutputResolveResult.Id
  fullName: Picturepark.SDK.V1.Contract.OutputResolveResult.Id
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: Id
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 24906
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: ID of output.
  example: []
  syntax:
    content: >-
      [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("id", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Id As String
  overload: Picturepark.SDK.V1.Contract.OutputResolveResult.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.OutputResolveResult.OutputFormatId
  commentId: P:Picturepark.SDK.V1.Contract.OutputResolveResult.OutputFormatId
  id: OutputFormatId
  parent: Picturepark.SDK.V1.Contract.OutputResolveResult
  langs:
  - csharp
  - vb
  name: OutputFormatId
  nameWithType: OutputResolveResult.OutputFormatId
  fullName: Picturepark.SDK.V1.Contract.OutputResolveResult.OutputFormatId
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: OutputFormatId
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 24912
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: The ID of the output format this output represents.
  example: []
  syntax:
    content: >-
      [JsonProperty("outputFormatId", Required = Required.Always)]

      [Required]

      public string OutputFormatId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("outputFormatId", Required:=Required.Always)>

      <Required>

      Public Property OutputFormatId As String
  overload: Picturepark.SDK.V1.Contract.OutputResolveResult.OutputFormatId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: outputFormatId
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Picturepark.SDK.V1.Contract.OutputResolveResult.ContentId
  commentId: P:Picturepark.SDK.V1.Contract.OutputResolveResult.ContentId
  id: ContentId
  parent: Picturepark.SDK.V1.Contract.OutputResolveResult
  langs:
  - csharp
  - vb
  name: ContentId
  nameWithType: OutputResolveResult.ContentId
  fullName: Picturepark.SDK.V1.Contract.OutputResolveResult.ContentId
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: ContentId
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 24919
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: The ID of the content for which this output has been created.
  example: []
  syntax:
    content: >-
      [JsonProperty("contentId", Required = Required.Always)]

      [Required]

      public string ContentId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("contentId", Required:=Required.Always)>

      <Required>

      Public Property ContentId As String
  overload: Picturepark.SDK.V1.Contract.OutputResolveResult.ContentId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: contentId
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Picturepark.SDK.V1.Contract.OutputResolveResult.RenderingState
  commentId: P:Picturepark.SDK.V1.Contract.OutputResolveResult.RenderingState
  id: RenderingState
  parent: Picturepark.SDK.V1.Contract.OutputResolveResult
  langs:
  - csharp
  - vb
  name: RenderingState
  nameWithType: OutputResolveResult.RenderingState
  fullName: Picturepark.SDK.V1.Contract.OutputResolveResult.RenderingState
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: RenderingState
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 24926
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: The rendering state of the output file.
  example: []
  syntax:
    content: >-
      [JsonProperty("renderingState", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      [JsonConverter(typeof(StringEnumConverter))]

      [Obsolete("Replaced by RenderingStateV2")]

      public OutputRenderingState? RenderingState { get; set; }
    parameters: []
    return:
      type: System.Nullable{Picturepark.SDK.V1.Contract.OutputRenderingState}
    content.vb: >-
      <JsonProperty("renderingState", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      <JsonConverter(GetType(StringEnumConverter))>

      <Obsolete("Replaced by RenderingStateV2")>

      Public Property RenderingState As OutputRenderingState?
  overload: Picturepark.SDK.V1.Contract.OutputResolveResult.RenderingState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: renderingState
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Newtonsoft.Json.Converters.StringEnumConverter
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Replaced by RenderingStateV2
- uid: Picturepark.SDK.V1.Contract.OutputResolveResult.RenderingStateV2
  commentId: P:Picturepark.SDK.V1.Contract.OutputResolveResult.RenderingStateV2
  id: RenderingStateV2
  parent: Picturepark.SDK.V1.Contract.OutputResolveResult
  langs:
  - csharp
  - vb
  name: RenderingStateV2
  nameWithType: OutputResolveResult.RenderingStateV2
  fullName: Picturepark.SDK.V1.Contract.OutputResolveResult.RenderingStateV2
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: RenderingStateV2
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 24934
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: The rendering state of the output file. Only null for static outputs which are not rendered ("Skipped" in old RenderingState), such outputs won't be returned in the future.
  example: []
  syntax:
    content: >-
      [JsonProperty("renderingStateV2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      [JsonConverter(typeof(StringEnumConverter))]

      public OutputRenderingStateV2? RenderingStateV2 { get; set; }
    parameters: []
    return:
      type: System.Nullable{Picturepark.SDK.V1.Contract.OutputRenderingStateV2}
    content.vb: >-
      <JsonProperty("renderingStateV2", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      <JsonConverter(GetType(StringEnumConverter))>

      Public Property RenderingStateV2 As OutputRenderingStateV2?
  overload: Picturepark.SDK.V1.Contract.OutputResolveResult.RenderingStateV2*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: renderingStateV2
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Newtonsoft.Json.Converters.StringEnumConverter
- uid: Picturepark.SDK.V1.Contract.OutputResolveResult.AvailabilityState
  commentId: P:Picturepark.SDK.V1.Contract.OutputResolveResult.AvailabilityState
  id: AvailabilityState
  parent: Picturepark.SDK.V1.Contract.OutputResolveResult
  langs:
  - csharp
  - vb
  name: AvailabilityState
  nameWithType: OutputResolveResult.AvailabilityState
  fullName: Picturepark.SDK.V1.Contract.OutputResolveResult.AvailabilityState
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: AvailabilityState
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 24941
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Describes whether the output is available normally or if it is outdated. Note that this does not take into account failed or not yet performed rendering or similar.
  example: []
  syntax:
    content: >-
      [JsonProperty("availabilityState", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      [JsonConverter(typeof(StringEnumConverter))]

      public OutputAvailabilityState? AvailabilityState { get; set; }
    parameters: []
    return:
      type: System.Nullable{Picturepark.SDK.V1.Contract.OutputAvailabilityState}
    content.vb: >-
      <JsonProperty("availabilityState", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      <JsonConverter(GetType(StringEnumConverter))>

      Public Property AvailabilityState As OutputAvailabilityState?
  overload: Picturepark.SDK.V1.Contract.OutputResolveResult.AvailabilityState*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: availabilityState
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Newtonsoft.Json.Converters.StringEnumConverter
- uid: Picturepark.SDK.V1.Contract.OutputResolveResult.DynamicRendering
  commentId: P:Picturepark.SDK.V1.Contract.OutputResolveResult.DynamicRendering
  id: DynamicRendering
  parent: Picturepark.SDK.V1.Contract.OutputResolveResult
  langs:
  - csharp
  - vb
  name: DynamicRendering
  nameWithType: OutputResolveResult.DynamicRendering
  fullName: Picturepark.SDK.V1.Contract.OutputResolveResult.DynamicRendering
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: DynamicRendering
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 24948
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Whether this Output belongs to a dynamic OutputFormat.
  example: []
  syntax:
    content: >-
      [JsonProperty("dynamicRendering", Required = Required.Always)]

      public bool DynamicRendering { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("dynamicRendering", Required:=Required.Always)>

      Public Property DynamicRendering As Boolean
  overload: Picturepark.SDK.V1.Contract.OutputResolveResult.DynamicRendering*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: dynamicRendering
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
- uid: Picturepark.SDK.V1.Contract.OutputResolveResult.FileSize
  commentId: P:Picturepark.SDK.V1.Contract.OutputResolveResult.FileSize
  id: FileSize
  parent: Picturepark.SDK.V1.Contract.OutputResolveResult
  langs:
  - csharp
  - vb
  name: FileSize
  nameWithType: OutputResolveResult.FileSize
  fullName: Picturepark.SDK.V1.Contract.OutputResolveResult.FileSize
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: FileSize
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 24954
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Size of file, if already known
  example: []
  syntax:
    content: >-
      [JsonProperty("fileSize", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public long? FileSize { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: >-
      <JsonProperty("fileSize", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property FileSize As Long?
  overload: Picturepark.SDK.V1.Contract.OutputResolveResult.FileSize*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: fileSize
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.OutputResolveResult.ToJson
  commentId: M:Picturepark.SDK.V1.Contract.OutputResolveResult.ToJson
  id: ToJson
  parent: Picturepark.SDK.V1.Contract.OutputResolveResult
  langs:
  - csharp
  - vb
  name: ToJson()
  nameWithType: OutputResolveResult.ToJson()
  fullName: Picturepark.SDK.V1.Contract.OutputResolveResult.ToJson()
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: ToJson
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 24957
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  syntax:
    content: public string ToJson()
    return:
      type: System.String
    content.vb: Public Function ToJson() As String
  overload: Picturepark.SDK.V1.Contract.OutputResolveResult.ToJson*
- uid: Picturepark.SDK.V1.Contract.OutputResolveResult.FromJson(System.String)
  commentId: M:Picturepark.SDK.V1.Contract.OutputResolveResult.FromJson(System.String)
  id: FromJson(System.String)
  parent: Picturepark.SDK.V1.Contract.OutputResolveResult
  langs:
  - csharp
  - vb
  name: FromJson(string)
  nameWithType: OutputResolveResult.FromJson(string)
  fullName: Picturepark.SDK.V1.Contract.OutputResolveResult.FromJson(string)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: FromJson
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 24963
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  syntax:
    content: public static OutputResolveResult FromJson(string data)
    parameters:
    - id: data
      type: System.String
    return:
      type: Picturepark.SDK.V1.Contract.OutputResolveResult
    content.vb: Public Shared Function FromJson(data As String) As OutputResolveResult
  overload: Picturepark.SDK.V1.Contract.OutputResolveResult.FromJson*
  nameWithType.vb: OutputResolveResult.FromJson(String)
  fullName.vb: Picturepark.SDK.V1.Contract.OutputResolveResult.FromJson(String)
  name.vb: FromJson(String)
references:
- uid: Picturepark.SDK.V1.Contract
  commentId: N:Picturepark.SDK.V1.Contract
  href: Picturepark.html
  name: Picturepark.SDK.V1.Contract
  nameWithType: Picturepark.SDK.V1.Contract
  fullName: Picturepark.SDK.V1.Contract
  spec.csharp:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.Contract
    name: Contract
    href: Picturepark.SDK.V1.Contract.html
  spec.vb:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.Contract
    name: Contract
    href: Picturepark.SDK.V1.Contract.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Picturepark.SDK.V1.Contract.OutputResolveResult.Id*
  commentId: Overload:Picturepark.SDK.V1.Contract.OutputResolveResult.Id
  href: Picturepark.SDK.V1.Contract.OutputResolveResult.html#Picturepark_SDK_V1_Contract_OutputResolveResult_Id
  name: Id
  nameWithType: OutputResolveResult.Id
  fullName: Picturepark.SDK.V1.Contract.OutputResolveResult.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Picturepark.SDK.V1.Contract.OutputResolveResult.OutputFormatId*
  commentId: Overload:Picturepark.SDK.V1.Contract.OutputResolveResult.OutputFormatId
  href: Picturepark.SDK.V1.Contract.OutputResolveResult.html#Picturepark_SDK_V1_Contract_OutputResolveResult_OutputFormatId
  name: OutputFormatId
  nameWithType: OutputResolveResult.OutputFormatId
  fullName: Picturepark.SDK.V1.Contract.OutputResolveResult.OutputFormatId
- uid: Picturepark.SDK.V1.Contract.OutputResolveResult.ContentId*
  commentId: Overload:Picturepark.SDK.V1.Contract.OutputResolveResult.ContentId
  href: Picturepark.SDK.V1.Contract.OutputResolveResult.html#Picturepark_SDK_V1_Contract_OutputResolveResult_ContentId
  name: ContentId
  nameWithType: OutputResolveResult.ContentId
  fullName: Picturepark.SDK.V1.Contract.OutputResolveResult.ContentId
- uid: Picturepark.SDK.V1.Contract.OutputResolveResult.RenderingState*
  commentId: Overload:Picturepark.SDK.V1.Contract.OutputResolveResult.RenderingState
  href: Picturepark.SDK.V1.Contract.OutputResolveResult.html#Picturepark_SDK_V1_Contract_OutputResolveResult_RenderingState
  name: RenderingState
  nameWithType: OutputResolveResult.RenderingState
  fullName: Picturepark.SDK.V1.Contract.OutputResolveResult.RenderingState
- uid: System.Nullable{Picturepark.SDK.V1.Contract.OutputRenderingState}
  commentId: T:System.Nullable{Picturepark.SDK.V1.Contract.OutputRenderingState}
  parent: System
  definition: System.Nullable`1
  href: Picturepark.SDK.V1.Contract.OutputRenderingState.html
  name: OutputRenderingState?
  nameWithType: OutputRenderingState?
  fullName: Picturepark.SDK.V1.Contract.OutputRenderingState?
  spec.csharp:
  - uid: Picturepark.SDK.V1.Contract.OutputRenderingState
    name: OutputRenderingState
    href: Picturepark.SDK.V1.Contract.OutputRenderingState.html
  - name: '?'
  spec.vb:
  - uid: Picturepark.SDK.V1.Contract.OutputRenderingState
    name: OutputRenderingState
    href: Picturepark.SDK.V1.Contract.OutputRenderingState.html
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Picturepark.SDK.V1.Contract.OutputResolveResult.RenderingStateV2*
  commentId: Overload:Picturepark.SDK.V1.Contract.OutputResolveResult.RenderingStateV2
  href: Picturepark.SDK.V1.Contract.OutputResolveResult.html#Picturepark_SDK_V1_Contract_OutputResolveResult_RenderingStateV2
  name: RenderingStateV2
  nameWithType: OutputResolveResult.RenderingStateV2
  fullName: Picturepark.SDK.V1.Contract.OutputResolveResult.RenderingStateV2
- uid: System.Nullable{Picturepark.SDK.V1.Contract.OutputRenderingStateV2}
  commentId: T:System.Nullable{Picturepark.SDK.V1.Contract.OutputRenderingStateV2}
  parent: System
  definition: System.Nullable`1
  href: Picturepark.SDK.V1.Contract.OutputRenderingStateV2.html
  name: OutputRenderingStateV2?
  nameWithType: OutputRenderingStateV2?
  fullName: Picturepark.SDK.V1.Contract.OutputRenderingStateV2?
  spec.csharp:
  - uid: Picturepark.SDK.V1.Contract.OutputRenderingStateV2
    name: OutputRenderingStateV2
    href: Picturepark.SDK.V1.Contract.OutputRenderingStateV2.html
  - name: '?'
  spec.vb:
  - uid: Picturepark.SDK.V1.Contract.OutputRenderingStateV2
    name: OutputRenderingStateV2
    href: Picturepark.SDK.V1.Contract.OutputRenderingStateV2.html
  - name: '?'
- uid: Picturepark.SDK.V1.Contract.OutputResolveResult.AvailabilityState*
  commentId: Overload:Picturepark.SDK.V1.Contract.OutputResolveResult.AvailabilityState
  href: Picturepark.SDK.V1.Contract.OutputResolveResult.html#Picturepark_SDK_V1_Contract_OutputResolveResult_AvailabilityState
  name: AvailabilityState
  nameWithType: OutputResolveResult.AvailabilityState
  fullName: Picturepark.SDK.V1.Contract.OutputResolveResult.AvailabilityState
- uid: System.Nullable{Picturepark.SDK.V1.Contract.OutputAvailabilityState}
  commentId: T:System.Nullable{Picturepark.SDK.V1.Contract.OutputAvailabilityState}
  parent: System
  definition: System.Nullable`1
  href: Picturepark.SDK.V1.Contract.OutputAvailabilityState.html
  name: OutputAvailabilityState?
  nameWithType: OutputAvailabilityState?
  fullName: Picturepark.SDK.V1.Contract.OutputAvailabilityState?
  spec.csharp:
  - uid: Picturepark.SDK.V1.Contract.OutputAvailabilityState
    name: OutputAvailabilityState
    href: Picturepark.SDK.V1.Contract.OutputAvailabilityState.html
  - name: '?'
  spec.vb:
  - uid: Picturepark.SDK.V1.Contract.OutputAvailabilityState
    name: OutputAvailabilityState
    href: Picturepark.SDK.V1.Contract.OutputAvailabilityState.html
  - name: '?'
- uid: Picturepark.SDK.V1.Contract.OutputResolveResult.DynamicRendering*
  commentId: Overload:Picturepark.SDK.V1.Contract.OutputResolveResult.DynamicRendering
  href: Picturepark.SDK.V1.Contract.OutputResolveResult.html#Picturepark_SDK_V1_Contract_OutputResolveResult_DynamicRendering
  name: DynamicRendering
  nameWithType: OutputResolveResult.DynamicRendering
  fullName: Picturepark.SDK.V1.Contract.OutputResolveResult.DynamicRendering
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Picturepark.SDK.V1.Contract.OutputResolveResult.FileSize*
  commentId: Overload:Picturepark.SDK.V1.Contract.OutputResolveResult.FileSize
  href: Picturepark.SDK.V1.Contract.OutputResolveResult.html#Picturepark_SDK_V1_Contract_OutputResolveResult_FileSize
  name: FileSize
  nameWithType: OutputResolveResult.FileSize
  fullName: Picturepark.SDK.V1.Contract.OutputResolveResult.FileSize
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long?
  nameWithType: long?
  fullName: long?
  nameWithType.vb: Long?
  fullName.vb: Long?
  name.vb: Long?
  spec.csharp:
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: '?'
  spec.vb:
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: '?'
- uid: Picturepark.SDK.V1.Contract.OutputResolveResult.ToJson*
  commentId: Overload:Picturepark.SDK.V1.Contract.OutputResolveResult.ToJson
  href: Picturepark.SDK.V1.Contract.OutputResolveResult.html#Picturepark_SDK_V1_Contract_OutputResolveResult_ToJson
  name: ToJson
  nameWithType: OutputResolveResult.ToJson
  fullName: Picturepark.SDK.V1.Contract.OutputResolveResult.ToJson
- uid: Picturepark.SDK.V1.Contract.OutputResolveResult.FromJson*
  commentId: Overload:Picturepark.SDK.V1.Contract.OutputResolveResult.FromJson
  href: Picturepark.SDK.V1.Contract.OutputResolveResult.html#Picturepark_SDK_V1_Contract_OutputResolveResult_FromJson_System_String_
  name: FromJson
  nameWithType: OutputResolveResult.FromJson
  fullName: Picturepark.SDK.V1.Contract.OutputResolveResult.FromJson
- uid: Picturepark.SDK.V1.Contract.OutputResolveResult
  commentId: T:Picturepark.SDK.V1.Contract.OutputResolveResult
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.OutputResolveResult.html
  name: OutputResolveResult
  nameWithType: OutputResolveResult
  fullName: Picturepark.SDK.V1.Contract.OutputResolveResult
