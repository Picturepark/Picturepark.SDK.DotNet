### YamlMime:ManagedReference
items:
- uid: Picturepark.SDK.V1.Contract.UploadOptions
  commentId: T:Picturepark.SDK.V1.Contract.UploadOptions
  id: UploadOptions
  parent: Picturepark.SDK.V1.Contract
  children:
  - Picturepark.SDK.V1.Contract.UploadOptions.ChunkSize
  - Picturepark.SDK.V1.Contract.UploadOptions.ConcurrentUploads
  - Picturepark.SDK.V1.Contract.UploadOptions.ErrorDelegate
  - Picturepark.SDK.V1.Contract.UploadOptions.SuccessDelegate
  - Picturepark.SDK.V1.Contract.UploadOptions.WaitForTransferCompletion
  langs:
  - csharp
  - vb
  name: UploadOptions
  nameWithType: UploadOptions
  fullName: Picturepark.SDK.V1.Contract.UploadOptions
  type: Class
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contract/UploadOptions.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: UploadOptions
    path: ../../src/Picturepark.SDK.V1.Contract/Contract/UploadOptions.cs
    startLine: 5
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: The file upload options.
  example: []
  syntax:
    content: public class UploadOptions
    content.vb: Public Class UploadOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Picturepark.SDK.V1.Contract.UploadOptions.ConcurrentUploads
  commentId: P:Picturepark.SDK.V1.Contract.UploadOptions.ConcurrentUploads
  id: ConcurrentUploads
  parent: Picturepark.SDK.V1.Contract.UploadOptions
  langs:
  - csharp
  - vb
  name: ConcurrentUploads
  nameWithType: UploadOptions.ConcurrentUploads
  fullName: Picturepark.SDK.V1.Contract.UploadOptions.ConcurrentUploads
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contract/UploadOptions.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: ConcurrentUploads
    path: ../../src/Picturepark.SDK.V1.Contract/Contract/UploadOptions.cs
    startLine: 8
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: 'Gets or sets the number of concurrent uploads (default: 4).'
  example: []
  syntax:
    content: public int ConcurrentUploads { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ConcurrentUploads As Integer
  overload: Picturepark.SDK.V1.Contract.UploadOptions.ConcurrentUploads*
- uid: Picturepark.SDK.V1.Contract.UploadOptions.ChunkSize
  commentId: P:Picturepark.SDK.V1.Contract.UploadOptions.ChunkSize
  id: ChunkSize
  parent: Picturepark.SDK.V1.Contract.UploadOptions
  langs:
  - csharp
  - vb
  name: ChunkSize
  nameWithType: UploadOptions.ChunkSize
  fullName: Picturepark.SDK.V1.Contract.UploadOptions.ChunkSize
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contract/UploadOptions.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: ChunkSize
    path: ../../src/Picturepark.SDK.V1.Contract/Contract/UploadOptions.cs
    startLine: 11
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: 'Gets or sets the chunk size in bytes (default: 1 MB).'
  example: []
  syntax:
    content: >-
      [Obsolete("SDK helper methods use streaming uploads. In order to use chunked uploads, please see ITransferClient.UploadFileAsync")]

      public int ChunkSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Obsolete("SDK helper methods use streaming uploads. In order to use chunked uploads, please see ITransferClient.UploadFileAsync")>

      Public Property ChunkSize As Integer
  overload: Picturepark.SDK.V1.Contract.UploadOptions.ChunkSize*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: SDK helper methods use streaming uploads. In order to use chunked uploads, please see ITransferClient.UploadFileAsync
- uid: Picturepark.SDK.V1.Contract.UploadOptions.WaitForTransferCompletion
  commentId: P:Picturepark.SDK.V1.Contract.UploadOptions.WaitForTransferCompletion
  id: WaitForTransferCompletion
  parent: Picturepark.SDK.V1.Contract.UploadOptions
  langs:
  - csharp
  - vb
  name: WaitForTransferCompletion
  nameWithType: UploadOptions.WaitForTransferCompletion
  fullName: Picturepark.SDK.V1.Contract.UploadOptions.WaitForTransferCompletion
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contract/UploadOptions.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: WaitForTransferCompletion
    path: ../../src/Picturepark.SDK.V1.Contract/Contract/UploadOptions.cs
    startLine: 15
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Gets or sets a value indicating whether to wait for the completion of the transfer.
  example: []
  syntax:
    content: public bool WaitForTransferCompletion { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property WaitForTransferCompletion As Boolean
  overload: Picturepark.SDK.V1.Contract.UploadOptions.WaitForTransferCompletion*
- uid: Picturepark.SDK.V1.Contract.UploadOptions.SuccessDelegate
  commentId: P:Picturepark.SDK.V1.Contract.UploadOptions.SuccessDelegate
  id: SuccessDelegate
  parent: Picturepark.SDK.V1.Contract.UploadOptions
  langs:
  - csharp
  - vb
  name: SuccessDelegate
  nameWithType: UploadOptions.SuccessDelegate
  fullName: Picturepark.SDK.V1.Contract.UploadOptions.SuccessDelegate
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contract/UploadOptions.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: SuccessDelegate
    path: ../../src/Picturepark.SDK.V1.Contract/Contract/UploadOptions.cs
    startLine: 18
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Gets or sets the success delegate which is called when a file has been uploaded.
  example: []
  syntax:
    content: public Action<FileLocations> SuccessDelegate { get; set; }
    parameters: []
    return:
      type: System.Action{Picturepark.SDK.V1.Contract.FileLocations}
    content.vb: Public Property SuccessDelegate As Action(Of FileLocations)
  overload: Picturepark.SDK.V1.Contract.UploadOptions.SuccessDelegate*
- uid: Picturepark.SDK.V1.Contract.UploadOptions.ErrorDelegate
  commentId: P:Picturepark.SDK.V1.Contract.UploadOptions.ErrorDelegate
  id: ErrorDelegate
  parent: Picturepark.SDK.V1.Contract.UploadOptions
  langs:
  - csharp
  - vb
  name: ErrorDelegate
  nameWithType: UploadOptions.ErrorDelegate
  fullName: Picturepark.SDK.V1.Contract.UploadOptions.ErrorDelegate
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contract/UploadOptions.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: ErrorDelegate
    path: ../../src/Picturepark.SDK.V1.Contract/Contract/UploadOptions.cs
    startLine: 21
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Gets or sets the error delegate which is called when file upload failed.
  example: []
  syntax:
    content: public Action<(FileLocations File, Exception Exception)> ErrorDelegate { get; set; }
    parameters: []
    return:
      type: System.Action{System.ValueTuple{Picturepark.SDK.V1.Contract.FileLocations,System.Exception}}
    content.vb: Public Property ErrorDelegate As Action(Of (File As FileLocations, Exception As Exception))
  overload: Picturepark.SDK.V1.Contract.UploadOptions.ErrorDelegate*
references:
- uid: Picturepark.SDK.V1.Contract
  commentId: N:Picturepark.SDK.V1.Contract
  href: Picturepark.html
  name: Picturepark.SDK.V1.Contract
  nameWithType: Picturepark.SDK.V1.Contract
  fullName: Picturepark.SDK.V1.Contract
  spec.csharp:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.Contract
    name: Contract
    href: Picturepark.SDK.V1.Contract.html
  spec.vb:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.Contract
    name: Contract
    href: Picturepark.SDK.V1.Contract.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Picturepark.SDK.V1.Contract.UploadOptions.ConcurrentUploads*
  commentId: Overload:Picturepark.SDK.V1.Contract.UploadOptions.ConcurrentUploads
  href: Picturepark.SDK.V1.Contract.UploadOptions.html#Picturepark_SDK_V1_Contract_UploadOptions_ConcurrentUploads
  name: ConcurrentUploads
  nameWithType: UploadOptions.ConcurrentUploads
  fullName: Picturepark.SDK.V1.Contract.UploadOptions.ConcurrentUploads
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Picturepark.SDK.V1.Contract.UploadOptions.ChunkSize*
  commentId: Overload:Picturepark.SDK.V1.Contract.UploadOptions.ChunkSize
  href: Picturepark.SDK.V1.Contract.UploadOptions.html#Picturepark_SDK_V1_Contract_UploadOptions_ChunkSize
  name: ChunkSize
  nameWithType: UploadOptions.ChunkSize
  fullName: Picturepark.SDK.V1.Contract.UploadOptions.ChunkSize
- uid: Picturepark.SDK.V1.Contract.UploadOptions.WaitForTransferCompletion*
  commentId: Overload:Picturepark.SDK.V1.Contract.UploadOptions.WaitForTransferCompletion
  href: Picturepark.SDK.V1.Contract.UploadOptions.html#Picturepark_SDK_V1_Contract_UploadOptions_WaitForTransferCompletion
  name: WaitForTransferCompletion
  nameWithType: UploadOptions.WaitForTransferCompletion
  fullName: Picturepark.SDK.V1.Contract.UploadOptions.WaitForTransferCompletion
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Picturepark.SDK.V1.Contract.UploadOptions.SuccessDelegate*
  commentId: Overload:Picturepark.SDK.V1.Contract.UploadOptions.SuccessDelegate
  href: Picturepark.SDK.V1.Contract.UploadOptions.html#Picturepark_SDK_V1_Contract_UploadOptions_SuccessDelegate
  name: SuccessDelegate
  nameWithType: UploadOptions.SuccessDelegate
  fullName: Picturepark.SDK.V1.Contract.UploadOptions.SuccessDelegate
- uid: System.Action{Picturepark.SDK.V1.Contract.FileLocations}
  commentId: T:System.Action{Picturepark.SDK.V1.Contract.FileLocations}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<FileLocations>
  nameWithType: Action<FileLocations>
  fullName: System.Action<Picturepark.SDK.V1.Contract.FileLocations>
  nameWithType.vb: Action(Of FileLocations)
  fullName.vb: System.Action(Of Picturepark.SDK.V1.Contract.FileLocations)
  name.vb: Action(Of FileLocations)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Picturepark.SDK.V1.Contract.FileLocations
    name: FileLocations
    href: Picturepark.SDK.V1.Contract.FileLocations.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.FileLocations
    name: FileLocations
    href: Picturepark.SDK.V1.Contract.FileLocations.html
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Picturepark.SDK.V1.Contract.UploadOptions.ErrorDelegate*
  commentId: Overload:Picturepark.SDK.V1.Contract.UploadOptions.ErrorDelegate
  href: Picturepark.SDK.V1.Contract.UploadOptions.html#Picturepark_SDK_V1_Contract_UploadOptions_ErrorDelegate
  name: ErrorDelegate
  nameWithType: UploadOptions.ErrorDelegate
  fullName: Picturepark.SDK.V1.Contract.UploadOptions.ErrorDelegate
- uid: System.Action{System.ValueTuple{Picturepark.SDK.V1.Contract.FileLocations,System.Exception}}
  commentId: T:System.Action{System.ValueTuple{Picturepark.SDK.V1.Contract.FileLocations,System.Exception}}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<(FileLocations File, Exception Exception)>
  nameWithType: Action<(FileLocations File, Exception Exception)>
  fullName: System.Action<(Picturepark.SDK.V1.Contract.FileLocations File, System.Exception Exception)>
  nameWithType.vb: Action(Of (File As FileLocations, Exception As Exception))
  fullName.vb: System.Action(Of (File As Picturepark.SDK.V1.Contract.FileLocations, Exception As System.Exception))
  name.vb: Action(Of (File As FileLocations, Exception As Exception))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: (
  - uid: Picturepark.SDK.V1.Contract.FileLocations
    name: FileLocations
    href: Picturepark.SDK.V1.Contract.FileLocations.html
  - name: " "
  - uid: System.ValueTuple{Picturepark.SDK.V1.Contract.FileLocations,System.Exception}.File
    name: File
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-picturepark.sdk.v1.contract.filelocations,system.exception-.file
  - name: ','
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: " "
  - uid: System.ValueTuple{Picturepark.SDK.V1.Contract.FileLocations,System.Exception}.Exception
    name: Exception
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-picturepark.sdk.v1.contract.filelocations,system.exception-.exception
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{Picturepark.SDK.V1.Contract.FileLocations,System.Exception}.File
    name: File
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-picturepark.sdk.v1.contract.filelocations,system.exception-.file
  - name: " "
  - name: As
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.FileLocations
    name: FileLocations
    href: Picturepark.SDK.V1.Contract.FileLocations.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{Picturepark.SDK.V1.Contract.FileLocations,System.Exception}.Exception
    name: Exception
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-picturepark.sdk.v1.contract.filelocations,system.exception-.exception
  - name: " "
  - name: As
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: )
  - name: )
