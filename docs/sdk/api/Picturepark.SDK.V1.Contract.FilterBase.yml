### YamlMime:ManagedReference
items:
- uid: Picturepark.SDK.V1.Contract.FilterBase
  commentId: T:Picturepark.SDK.V1.Contract.FilterBase
  id: FilterBase
  parent: Picturepark.SDK.V1.Contract
  children:
  - Picturepark.SDK.V1.Contract.FilterBase.FromExpression``1(System.Linq.Expressions.Expression{System.Func{``0,Picturepark.SDK.V1.Contract.TranslatedStringDictionary}},System.String,System.Collections.Generic.IEnumerable{System.String})
  - Picturepark.SDK.V1.Contract.FilterBase.FromExpression``1(System.Linq.Expressions.Expression{System.Func{``0,Picturepark.SDK.V1.Contract.TranslatedStringDictionary}},System.String,System.String,System.Boolean)
  - Picturepark.SDK.V1.Contract.FilterBase.FromExpression``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},Picturepark.SDK.V1.Contract.Analyzer,System.String[])
  - Picturepark.SDK.V1.Contract.FilterBase.FromExpression``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,Picturepark.SDK.V1.Contract.Analyzer)
  - Picturepark.SDK.V1.Contract.FilterBase.FromExpression``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String[])
  - Picturepark.SDK.V1.Contract.FilterBase.FromJson(System.String)
  - Picturepark.SDK.V1.Contract.FilterBase.ToJson
  langs:
  - csharp
  - vb
  name: FilterBase
  nameWithType: FilterBase
  fullName: Picturepark.SDK.V1.Contract.FilterBase
  type: Class
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Partials/FilterBase.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: FilterBase
    path: ../../src/Picturepark.SDK.V1.Contract/Partials/FilterBase.cs
    startLine: 10
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: The filters' base class
  example: []
  syntax:
    content: >-
      [JsonConverter(typeof(JsonInheritanceConverter), new object[] { "kind" })]

      [GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]

      public abstract class FilterBase
    content.vb: >-
      <JsonConverter(GetType(JsonInheritanceConverter), New Object() { "kind" })>

      <GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")>

      Public MustInherit Class FilterBase
  inheritance:
  - System.Object
  derivedClasses:
  - Picturepark.SDK.V1.Contract.AggregationFilter
  - Picturepark.SDK.V1.Contract.AndFilter
  - Picturepark.SDK.V1.Contract.ChildFilter
  - Picturepark.SDK.V1.Contract.DateRangeFilter
  - Picturepark.SDK.V1.Contract.ExistsFilter
  - Picturepark.SDK.V1.Contract.GeoBoundingBoxFilter
  - Picturepark.SDK.V1.Contract.GeoDistanceFilter
  - Picturepark.SDK.V1.Contract.NestedFilter
  - Picturepark.SDK.V1.Contract.NotFilter
  - Picturepark.SDK.V1.Contract.NumericRangeFilter
  - Picturepark.SDK.V1.Contract.OrFilter
  - Picturepark.SDK.V1.Contract.ParentFilter
  - Picturepark.SDK.V1.Contract.PrefixFilter
  - Picturepark.SDK.V1.Contract.TermFilter
  - Picturepark.SDK.V1.Contract.TermsFilter
  - Picturepark.SDK.V1.Contract.TreeFilter
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.CodeDom.Compiler.GeneratedCodeAttribute
    ctor: System.CodeDom.Compiler.GeneratedCodeAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: NJsonSchema
    - type: System.String
      value: 13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))
- uid: Picturepark.SDK.V1.Contract.FilterBase.ToJson
  commentId: M:Picturepark.SDK.V1.Contract.FilterBase.ToJson
  id: ToJson
  parent: Picturepark.SDK.V1.Contract.FilterBase
  langs:
  - csharp
  - vb
  name: ToJson()
  nameWithType: FilterBase.ToJson()
  fullName: Picturepark.SDK.V1.Contract.FilterBase.ToJson()
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: ToJson
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 16848
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  syntax:
    content: public string ToJson()
    return:
      type: System.String
    content.vb: Public Function ToJson() As String
  overload: Picturepark.SDK.V1.Contract.FilterBase.ToJson*
- uid: Picturepark.SDK.V1.Contract.FilterBase.FromJson(System.String)
  commentId: M:Picturepark.SDK.V1.Contract.FilterBase.FromJson(System.String)
  id: FromJson(System.String)
  parent: Picturepark.SDK.V1.Contract.FilterBase
  langs:
  - csharp
  - vb
  name: FromJson(string)
  nameWithType: FilterBase.FromJson(string)
  fullName: Picturepark.SDK.V1.Contract.FilterBase.FromJson(string)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: FromJson
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 16854
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  syntax:
    content: public static FilterBase FromJson(string data)
    parameters:
    - id: data
      type: System.String
    return:
      type: Picturepark.SDK.V1.Contract.FilterBase
    content.vb: Public Shared Function FromJson(data As String) As FilterBase
  overload: Picturepark.SDK.V1.Contract.FilterBase.FromJson*
  nameWithType.vb: FilterBase.FromJson(String)
  fullName.vb: Picturepark.SDK.V1.Contract.FilterBase.FromJson(String)
  name.vb: FromJson(String)
- uid: Picturepark.SDK.V1.Contract.FilterBase.FromExpression``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,Picturepark.SDK.V1.Contract.Analyzer)
  commentId: M:Picturepark.SDK.V1.Contract.FilterBase.FromExpression``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,Picturepark.SDK.V1.Contract.Analyzer)
  id: FromExpression``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,Picturepark.SDK.V1.Contract.Analyzer)
  parent: Picturepark.SDK.V1.Contract.FilterBase
  langs:
  - csharp
  - vb
  name: FromExpression<TObject>(Expression<Func<TObject, object>>, string, Analyzer)
  nameWithType: FilterBase.FromExpression<TObject>(Expression<Func<TObject, object>>, string, Analyzer)
  fullName: Picturepark.SDK.V1.Contract.FilterBase.FromExpression<TObject>(System.Linq.Expressions.Expression<System.Func<TObject, object>>, string, Picturepark.SDK.V1.Contract.Analyzer)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Partials/FilterBase.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: FromExpression
    path: ../../src/Picturepark.SDK.V1.Contract/Partials/FilterBase.cs
    startLine: 20
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Creates a new <xref href="Picturepark.SDK.V1.Contract.TermFilter" data-throw-if-not-resolved="false"></xref> whose property name is retrieved from an expression.
  example: []
  syntax:
    content: public static TermFilter FromExpression<TObject>(Expression<Func<TObject, object>> property, string term, Analyzer analyzer = Analyzer.None)
    parameters:
    - id: property
      type: System.Linq.Expressions.Expression{System.Func{{TObject},System.Object}}
      description: The property expression.
    - id: term
      type: System.String
      description: The search term.
    - id: analyzer
      type: Picturepark.SDK.V1.Contract.Analyzer
      description: Specify if you want to query the analyzed field version
    typeParameters:
    - id: TObject
      description: The object type.
    return:
      type: Picturepark.SDK.V1.Contract.TermFilter
      description: The term filter.
    content.vb: Public Shared Function FromExpression(Of TObject)([property] As Expression(Of Func(Of TObject, Object)), term As String, analyzer As Analyzer = Analyzer.None) As TermFilter
  overload: Picturepark.SDK.V1.Contract.FilterBase.FromExpression*
  nameWithType.vb: FilterBase.FromExpression(Of TObject)(Expression(Of Func(Of TObject, Object)), String, Analyzer)
  fullName.vb: Picturepark.SDK.V1.Contract.FilterBase.FromExpression(Of TObject)(System.Linq.Expressions.Expression(Of System.Func(Of TObject, Object)), String, Picturepark.SDK.V1.Contract.Analyzer)
  name.vb: FromExpression(Of TObject)(Expression(Of Func(Of TObject, Object)), String, Analyzer)
- uid: Picturepark.SDK.V1.Contract.FilterBase.FromExpression``1(System.Linq.Expressions.Expression{System.Func{``0,Picturepark.SDK.V1.Contract.TranslatedStringDictionary}},System.String,System.String,System.Boolean)
  commentId: M:Picturepark.SDK.V1.Contract.FilterBase.FromExpression``1(System.Linq.Expressions.Expression{System.Func{``0,Picturepark.SDK.V1.Contract.TranslatedStringDictionary}},System.String,System.String,System.Boolean)
  id: FromExpression``1(System.Linq.Expressions.Expression{System.Func{``0,Picturepark.SDK.V1.Contract.TranslatedStringDictionary}},System.String,System.String,System.Boolean)
  parent: Picturepark.SDK.V1.Contract.FilterBase
  langs:
  - csharp
  - vb
  name: FromExpression<TObject>(Expression<Func<TObject, TranslatedStringDictionary>>, string, string, bool)
  nameWithType: FilterBase.FromExpression<TObject>(Expression<Func<TObject, TranslatedStringDictionary>>, string, string, bool)
  fullName: Picturepark.SDK.V1.Contract.FilterBase.FromExpression<TObject>(System.Linq.Expressions.Expression<System.Func<TObject, Picturepark.SDK.V1.Contract.TranslatedStringDictionary>>, string, string, bool)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Partials/FilterBase.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: FromExpression
    path: ../../src/Picturepark.SDK.V1.Contract/Partials/FilterBase.cs
    startLine: 30
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Creates a new <xref href="Picturepark.SDK.V1.Contract.TermFilter" data-throw-if-not-resolved="false"></xref> whose property name is retrieved from an expression.
  example: []
  syntax:
    content: public static TermFilter FromExpression<TObject>(Expression<Func<TObject, TranslatedStringDictionary>> property, string term, string language = null, bool useAnalyzer = false)
    parameters:
    - id: property
      type: System.Linq.Expressions.Expression{System.Func{{TObject},Picturepark.SDK.V1.Contract.TranslatedStringDictionary}}
      description: The property expression.
    - id: term
      type: System.String
      description: The search term.
    - id: language
      type: System.String
      description: Specify the language to query inside the TranslatedStringDictionary
    - id: useAnalyzer
      type: System.Boolean
      description: Specify whether to use the language analyzed version
    typeParameters:
    - id: TObject
      description: The object type.
    return:
      type: Picturepark.SDK.V1.Contract.TermFilter
      description: The term filter.
    content.vb: Public Shared Function FromExpression(Of TObject)([property] As Expression(Of Func(Of TObject, TranslatedStringDictionary)), term As String, language As String = Nothing, useAnalyzer As Boolean = False) As TermFilter
  overload: Picturepark.SDK.V1.Contract.FilterBase.FromExpression*
  nameWithType.vb: FilterBase.FromExpression(Of TObject)(Expression(Of Func(Of TObject, TranslatedStringDictionary)), String, String, Boolean)
  fullName.vb: Picturepark.SDK.V1.Contract.FilterBase.FromExpression(Of TObject)(System.Linq.Expressions.Expression(Of System.Func(Of TObject, Picturepark.SDK.V1.Contract.TranslatedStringDictionary)), String, String, Boolean)
  name.vb: FromExpression(Of TObject)(Expression(Of Func(Of TObject, TranslatedStringDictionary)), String, String, Boolean)
- uid: Picturepark.SDK.V1.Contract.FilterBase.FromExpression``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String[])
  commentId: M:Picturepark.SDK.V1.Contract.FilterBase.FromExpression``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String[])
  id: FromExpression``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String[])
  parent: Picturepark.SDK.V1.Contract.FilterBase
  langs:
  - csharp
  - vb
  name: FromExpression<TObject>(Expression<Func<TObject, object>>, params string[])
  nameWithType: FilterBase.FromExpression<TObject>(Expression<Func<TObject, object>>, params string[])
  fullName: Picturepark.SDK.V1.Contract.FilterBase.FromExpression<TObject>(System.Linq.Expressions.Expression<System.Func<TObject, object>>, params string[])
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Partials/FilterBase.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: FromExpression
    path: ../../src/Picturepark.SDK.V1.Contract/Partials/FilterBase.cs
    startLine: 44
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Creates a new <xref href="Picturepark.SDK.V1.Contract.TermsFilter" data-throw-if-not-resolved="false"></xref> whose property name is retrieved from an expression.
  example: []
  syntax:
    content: public static TermsFilter FromExpression<TObject>(Expression<Func<TObject, object>> property, params string[] terms)
    parameters:
    - id: property
      type: System.Linq.Expressions.Expression{System.Func{{TObject},System.Object}}
      description: The property expression.
    - id: terms
      type: System.String[]
      description: The search terms.
    typeParameters:
    - id: TObject
      description: The object type.
    return:
      type: Picturepark.SDK.V1.Contract.TermsFilter
      description: The terms filter.
    content.vb: Public Shared Function FromExpression(Of TObject)([property] As Expression(Of Func(Of TObject, Object)), ParamArray terms As String()) As TermsFilter
  overload: Picturepark.SDK.V1.Contract.FilterBase.FromExpression*
  nameWithType.vb: FilterBase.FromExpression(Of TObject)(Expression(Of Func(Of TObject, Object)), ParamArray String())
  fullName.vb: Picturepark.SDK.V1.Contract.FilterBase.FromExpression(Of TObject)(System.Linq.Expressions.Expression(Of System.Func(Of TObject, Object)), ParamArray String())
  name.vb: FromExpression(Of TObject)(Expression(Of Func(Of TObject, Object)), ParamArray String())
- uid: Picturepark.SDK.V1.Contract.FilterBase.FromExpression``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},Picturepark.SDK.V1.Contract.Analyzer,System.String[])
  commentId: M:Picturepark.SDK.V1.Contract.FilterBase.FromExpression``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},Picturepark.SDK.V1.Contract.Analyzer,System.String[])
  id: FromExpression``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},Picturepark.SDK.V1.Contract.Analyzer,System.String[])
  parent: Picturepark.SDK.V1.Contract.FilterBase
  langs:
  - csharp
  - vb
  name: FromExpression<TObject>(Expression<Func<TObject, object>>, Analyzer, params string[])
  nameWithType: FilterBase.FromExpression<TObject>(Expression<Func<TObject, object>>, Analyzer, params string[])
  fullName: Picturepark.SDK.V1.Contract.FilterBase.FromExpression<TObject>(System.Linq.Expressions.Expression<System.Func<TObject, object>>, Picturepark.SDK.V1.Contract.Analyzer, params string[])
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Partials/FilterBase.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: FromExpression
    path: ../../src/Picturepark.SDK.V1.Contract/Partials/FilterBase.cs
    startLine: 53
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Creates a new <xref href="Picturepark.SDK.V1.Contract.TermsFilter" data-throw-if-not-resolved="false"></xref> whose property name is retrieved from an expression.
  example: []
  syntax:
    content: public static TermsFilter FromExpression<TObject>(Expression<Func<TObject, object>> property, Analyzer analyzer, params string[] terms)
    parameters:
    - id: property
      type: System.Linq.Expressions.Expression{System.Func{{TObject},System.Object}}
      description: The property expression.
    - id: analyzer
      type: Picturepark.SDK.V1.Contract.Analyzer
      description: Specify if you want to query the analyzed field version
    - id: terms
      type: System.String[]
      description: The search terms.
    typeParameters:
    - id: TObject
      description: The object type.
    return:
      type: Picturepark.SDK.V1.Contract.TermsFilter
      description: The terms filter.
    content.vb: Public Shared Function FromExpression(Of TObject)([property] As Expression(Of Func(Of TObject, Object)), analyzer As Analyzer, ParamArray terms As String()) As TermsFilter
  overload: Picturepark.SDK.V1.Contract.FilterBase.FromExpression*
  nameWithType.vb: FilterBase.FromExpression(Of TObject)(Expression(Of Func(Of TObject, Object)), Analyzer, ParamArray String())
  fullName.vb: Picturepark.SDK.V1.Contract.FilterBase.FromExpression(Of TObject)(System.Linq.Expressions.Expression(Of System.Func(Of TObject, Object)), Picturepark.SDK.V1.Contract.Analyzer, ParamArray String())
  name.vb: FromExpression(Of TObject)(Expression(Of Func(Of TObject, Object)), Analyzer, ParamArray String())
- uid: Picturepark.SDK.V1.Contract.FilterBase.FromExpression``1(System.Linq.Expressions.Expression{System.Func{``0,Picturepark.SDK.V1.Contract.TranslatedStringDictionary}},System.String,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Picturepark.SDK.V1.Contract.FilterBase.FromExpression``1(System.Linq.Expressions.Expression{System.Func{``0,Picturepark.SDK.V1.Contract.TranslatedStringDictionary}},System.String,System.Collections.Generic.IEnumerable{System.String})
  id: FromExpression``1(System.Linq.Expressions.Expression{System.Func{``0,Picturepark.SDK.V1.Contract.TranslatedStringDictionary}},System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: Picturepark.SDK.V1.Contract.FilterBase
  langs:
  - csharp
  - vb
  name: FromExpression<TObject>(Expression<Func<TObject, TranslatedStringDictionary>>, string, IEnumerable<string>)
  nameWithType: FilterBase.FromExpression<TObject>(Expression<Func<TObject, TranslatedStringDictionary>>, string, IEnumerable<string>)
  fullName: Picturepark.SDK.V1.Contract.FilterBase.FromExpression<TObject>(System.Linq.Expressions.Expression<System.Func<TObject, Picturepark.SDK.V1.Contract.TranslatedStringDictionary>>, string, System.Collections.Generic.IEnumerable<string>)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Partials/FilterBase.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: FromExpression
    path: ../../src/Picturepark.SDK.V1.Contract/Partials/FilterBase.cs
    startLine: 62
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Creates a new <xref href="Picturepark.SDK.V1.Contract.TermsFilter" data-throw-if-not-resolved="false"></xref> whose property name is retrieved from an expression.
  example: []
  syntax:
    content: public static TermsFilter FromExpression<TObject>(Expression<Func<TObject, TranslatedStringDictionary>> property, string language, IEnumerable<string> terms)
    parameters:
    - id: property
      type: System.Linq.Expressions.Expression{System.Func{{TObject},Picturepark.SDK.V1.Contract.TranslatedStringDictionary}}
      description: The property expression.
    - id: language
      type: System.String
      description: Specify the language to query inside the TranslatedStringDictionary
    - id: terms
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The search terms.
    typeParameters:
    - id: TObject
      description: The object type.
    return:
      type: Picturepark.SDK.V1.Contract.TermsFilter
      description: The terms filter.
    content.vb: Public Shared Function FromExpression(Of TObject)([property] As Expression(Of Func(Of TObject, TranslatedStringDictionary)), language As String, terms As IEnumerable(Of String)) As TermsFilter
  overload: Picturepark.SDK.V1.Contract.FilterBase.FromExpression*
  nameWithType.vb: FilterBase.FromExpression(Of TObject)(Expression(Of Func(Of TObject, TranslatedStringDictionary)), String, IEnumerable(Of String))
  fullName.vb: Picturepark.SDK.V1.Contract.FilterBase.FromExpression(Of TObject)(System.Linq.Expressions.Expression(Of System.Func(Of TObject, Picturepark.SDK.V1.Contract.TranslatedStringDictionary)), String, System.Collections.Generic.IEnumerable(Of String))
  name.vb: FromExpression(Of TObject)(Expression(Of Func(Of TObject, TranslatedStringDictionary)), String, IEnumerable(Of String))
references:
- uid: Picturepark.SDK.V1.Contract
  commentId: N:Picturepark.SDK.V1.Contract
  href: Picturepark.html
  name: Picturepark.SDK.V1.Contract
  nameWithType: Picturepark.SDK.V1.Contract
  fullName: Picturepark.SDK.V1.Contract
  spec.csharp:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.Contract
    name: Contract
    href: Picturepark.SDK.V1.Contract.html
  spec.vb:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.Contract
    name: Contract
    href: Picturepark.SDK.V1.Contract.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Picturepark.SDK.V1.Contract.FilterBase.ToJson*
  commentId: Overload:Picturepark.SDK.V1.Contract.FilterBase.ToJson
  href: Picturepark.SDK.V1.Contract.FilterBase.html#Picturepark_SDK_V1_Contract_FilterBase_ToJson
  name: ToJson
  nameWithType: FilterBase.ToJson
  fullName: Picturepark.SDK.V1.Contract.FilterBase.ToJson
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Picturepark.SDK.V1.Contract.FilterBase.FromJson*
  commentId: Overload:Picturepark.SDK.V1.Contract.FilterBase.FromJson
  href: Picturepark.SDK.V1.Contract.FilterBase.html#Picturepark_SDK_V1_Contract_FilterBase_FromJson_System_String_
  name: FromJson
  nameWithType: FilterBase.FromJson
  fullName: Picturepark.SDK.V1.Contract.FilterBase.FromJson
- uid: Picturepark.SDK.V1.Contract.FilterBase
  commentId: T:Picturepark.SDK.V1.Contract.FilterBase
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.FilterBase.html
  name: FilterBase
  nameWithType: FilterBase
  fullName: Picturepark.SDK.V1.Contract.FilterBase
- uid: Picturepark.SDK.V1.Contract.TermFilter
  commentId: T:Picturepark.SDK.V1.Contract.TermFilter
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.TermFilter.html
  name: TermFilter
  nameWithType: TermFilter
  fullName: Picturepark.SDK.V1.Contract.TermFilter
- uid: Picturepark.SDK.V1.Contract.FilterBase.FromExpression*
  commentId: Overload:Picturepark.SDK.V1.Contract.FilterBase.FromExpression
  href: Picturepark.SDK.V1.Contract.FilterBase.html#Picturepark_SDK_V1_Contract_FilterBase_FromExpression__1_System_Linq_Expressions_Expression_System_Func___0_System_Object___System_String_Picturepark_SDK_V1_Contract_Analyzer_
  name: FromExpression
  nameWithType: FilterBase.FromExpression
  fullName: Picturepark.SDK.V1.Contract.FilterBase.FromExpression
- uid: System.Linq.Expressions.Expression{System.Func{{TObject},System.Object}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{``0,System.Object}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TObject, object>>
  nameWithType: Expression<Func<TObject, object>>
  fullName: System.Linq.Expressions.Expression<System.Func<TObject, object>>
  nameWithType.vb: Expression(Of Func(Of TObject, Object))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TObject, Object))
  name.vb: Expression(Of Func(Of TObject, Object))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TObject
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TObject
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: Picturepark.SDK.V1.Contract.Analyzer
  commentId: T:Picturepark.SDK.V1.Contract.Analyzer
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.Analyzer.html
  name: Analyzer
  nameWithType: Analyzer
  fullName: Picturepark.SDK.V1.Contract.Analyzer
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - name: TDelegate
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - name: TDelegate
  - name: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
- uid: System.Linq.Expressions.Expression{System.Func{{TObject},Picturepark.SDK.V1.Contract.TranslatedStringDictionary}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{``0,Picturepark.SDK.V1.Contract.TranslatedStringDictionary}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TObject, TranslatedStringDictionary>>
  nameWithType: Expression<Func<TObject, TranslatedStringDictionary>>
  fullName: System.Linq.Expressions.Expression<System.Func<TObject, Picturepark.SDK.V1.Contract.TranslatedStringDictionary>>
  nameWithType.vb: Expression(Of Func(Of TObject, TranslatedStringDictionary))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TObject, Picturepark.SDK.V1.Contract.TranslatedStringDictionary))
  name.vb: Expression(Of Func(Of TObject, TranslatedStringDictionary))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TObject
  - name: ','
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.TranslatedStringDictionary
    name: TranslatedStringDictionary
    href: Picturepark.SDK.V1.Contract.TranslatedStringDictionary.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TObject
  - name: ','
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.TranslatedStringDictionary
    name: TranslatedStringDictionary
    href: Picturepark.SDK.V1.Contract.TranslatedStringDictionary.html
  - name: )
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Picturepark.SDK.V1.Contract.TermsFilter
  commentId: T:Picturepark.SDK.V1.Contract.TermsFilter
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.TermsFilter.html
  name: TermsFilter
  nameWithType: TermsFilter
  fullName: Picturepark.SDK.V1.Contract.TermsFilter
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
