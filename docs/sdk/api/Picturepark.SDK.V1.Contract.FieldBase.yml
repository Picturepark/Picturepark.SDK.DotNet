### YamlMime:ManagedReference
items:
- uid: Picturepark.SDK.V1.Contract.FieldBase
  commentId: T:Picturepark.SDK.V1.Contract.FieldBase
  id: FieldBase
  parent: Picturepark.SDK.V1.Contract
  children:
  - Picturepark.SDK.V1.Contract.FieldBase.Descriptions
  - Picturepark.SDK.V1.Contract.FieldBase.FieldNamespace
  - Picturepark.SDK.V1.Contract.FieldBase.FromJson(System.String)
  - Picturepark.SDK.V1.Contract.FieldBase.Id
  - Picturepark.SDK.V1.Contract.FieldBase.Index
  - Picturepark.SDK.V1.Contract.FieldBase.IndexId
  - Picturepark.SDK.V1.Contract.FieldBase.Names
  - Picturepark.SDK.V1.Contract.FieldBase.Required
  - Picturepark.SDK.V1.Contract.FieldBase.SimpleSearch
  - Picturepark.SDK.V1.Contract.FieldBase.Sortable
  - Picturepark.SDK.V1.Contract.FieldBase.ToJson
  - Picturepark.SDK.V1.Contract.FieldBase.UiBehavior
  langs:
  - csharp
  - vb
  name: FieldBase
  nameWithType: FieldBase
  fullName: Picturepark.SDK.V1.Contract.FieldBase
  type: Class
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: FieldBase
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 35389
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: The field base class
  example: []
  syntax:
    content: >-
      [JsonConverter(typeof(JsonInheritanceConverter), new object[] { "kind" })]

      [GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]

      public abstract class FieldBase
    content.vb: >-
      <JsonConverter(GetType(JsonInheritanceConverter), New Object() { "kind" })>

      <GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")>

      Public MustInherit Class FieldBase
  inheritance:
  - System.Object
  derivedClasses:
  - Picturepark.SDK.V1.Contract.FieldBoolean
  - Picturepark.SDK.V1.Contract.FieldDate
  - Picturepark.SDK.V1.Contract.FieldDateTime
  - Picturepark.SDK.V1.Contract.FieldDecimal
  - Picturepark.SDK.V1.Contract.FieldDictionary
  - Picturepark.SDK.V1.Contract.FieldDynamicView
  - Picturepark.SDK.V1.Contract.FieldGeoPoint
  - Picturepark.SDK.V1.Contract.FieldLong
  - Picturepark.SDK.V1.Contract.FieldMultiFieldset
  - Picturepark.SDK.V1.Contract.FieldMultiRelation
  - Picturepark.SDK.V1.Contract.FieldMultiTagbox
  - Picturepark.SDK.V1.Contract.FieldSingleFieldset
  - Picturepark.SDK.V1.Contract.FieldSingleRelation
  - Picturepark.SDK.V1.Contract.FieldSingleTagbox
  - Picturepark.SDK.V1.Contract.FieldString
  - Picturepark.SDK.V1.Contract.FieldTranslatedString
  - Picturepark.SDK.V1.Contract.FieldTreeView
  - Picturepark.SDK.V1.Contract.FieldTrigger
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.CodeDom.Compiler.GeneratedCodeAttribute
    ctor: System.CodeDom.Compiler.GeneratedCodeAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: NJsonSchema
    - type: System.String
      value: 13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))
- uid: Picturepark.SDK.V1.Contract.FieldBase.Id
  commentId: P:Picturepark.SDK.V1.Contract.FieldBase.Id
  id: Id
  parent: Picturepark.SDK.V1.Contract.FieldBase
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: FieldBase.Id
  fullName: Picturepark.SDK.V1.Contract.FieldBase.Id
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Id
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 35418
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: The field ID. It can be a slug; it must be unique within the schema hierarchy (ancestors / descendants); it must be begin with lower case.
  example: []
  syntax:
    content: >-
      [JsonProperty("id", Required = Required.Always)]

      [Required]

      public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("id", Required:=Required.Always)>

      <Required>

      Public Property Id As String
  overload: Picturepark.SDK.V1.Contract.FieldBase.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Picturepark.SDK.V1.Contract.FieldBase.IndexId
  commentId: P:Picturepark.SDK.V1.Contract.FieldBase.IndexId
  id: IndexId
  parent: Picturepark.SDK.V1.Contract.FieldBase
  langs:
  - csharp
  - vb
  name: IndexId
  nameWithType: FieldBase.IndexId
  fullName: Picturepark.SDK.V1.Contract.FieldBase.IndexId
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: IndexId
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 35425
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: The index ID is auto generated by the system.
  example: []
  syntax:
    content: >-
      [JsonProperty("indexId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public string IndexId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("indexId", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property IndexId As String
  overload: Picturepark.SDK.V1.Contract.FieldBase.IndexId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: indexId
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.FieldBase.FieldNamespace
  commentId: P:Picturepark.SDK.V1.Contract.FieldBase.FieldNamespace
  id: FieldNamespace
  parent: Picturepark.SDK.V1.Contract.FieldBase
  langs:
  - csharp
  - vb
  name: FieldNamespace
  nameWithType: FieldBase.FieldNamespace
  fullName: Picturepark.SDK.V1.Contract.FieldBase.FieldNamespace
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: FieldNamespace
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 35431
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: 'The field namespace is auto generated by the system: it carries the hierarchy information.'
  example: []
  syntax:
    content: >-
      [JsonProperty("fieldNamespace", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public string FieldNamespace { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("fieldNamespace", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property FieldNamespace As String
  overload: Picturepark.SDK.V1.Contract.FieldBase.FieldNamespace*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: fieldNamespace
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.FieldBase.Names
  commentId: P:Picturepark.SDK.V1.Contract.FieldBase.Names
  id: Names
  parent: Picturepark.SDK.V1.Contract.FieldBase
  langs:
  - csharp
  - vb
  name: Names
  nameWithType: FieldBase.Names
  fullName: Picturepark.SDK.V1.Contract.FieldBase.Names
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Names
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 35437
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Language specific field names.
  example: []
  syntax:
    content: >-
      [JsonProperty("names", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public TranslatedStringDictionary Names { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.Contract.TranslatedStringDictionary
    content.vb: >-
      <JsonProperty("names", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Names As TranslatedStringDictionary
  overload: Picturepark.SDK.V1.Contract.FieldBase.Names*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: names
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.FieldBase.Descriptions
  commentId: P:Picturepark.SDK.V1.Contract.FieldBase.Descriptions
  id: Descriptions
  parent: Picturepark.SDK.V1.Contract.FieldBase
  langs:
  - csharp
  - vb
  name: Descriptions
  nameWithType: FieldBase.Descriptions
  fullName: Picturepark.SDK.V1.Contract.FieldBase.Descriptions
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Descriptions
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 35443
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Language specific field descriptions.
  example: []
  syntax:
    content: >-
      [JsonProperty("descriptions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public TranslatedStringDictionary Descriptions { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.Contract.TranslatedStringDictionary
    content.vb: >-
      <JsonProperty("descriptions", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Descriptions As TranslatedStringDictionary
  overload: Picturepark.SDK.V1.Contract.FieldBase.Descriptions*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: descriptions
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.FieldBase.Required
  commentId: P:Picturepark.SDK.V1.Contract.FieldBase.Required
  id: Required
  parent: Picturepark.SDK.V1.Contract.FieldBase
  langs:
  - csharp
  - vb
  name: Required
  nameWithType: FieldBase.Required
  fullName: Picturepark.SDK.V1.Contract.FieldBase.Required
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Required
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 35449
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Defines if a field value is mandatory or not.
  example: []
  syntax:
    content: >-
      [JsonProperty("required", Required = Required.Always)]

      public bool Required { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("required", Required:=Required.Always)>

      Public Property Required As Boolean
  overload: Picturepark.SDK.V1.Contract.FieldBase.Required*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: required
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
- uid: Picturepark.SDK.V1.Contract.FieldBase.UiBehavior
  commentId: P:Picturepark.SDK.V1.Contract.FieldBase.UiBehavior
  id: UiBehavior
  parent: Picturepark.SDK.V1.Contract.FieldBase
  langs:
  - csharp
  - vb
  name: UiBehavior
  nameWithType: FieldBase.UiBehavior
  fullName: Picturepark.SDK.V1.Contract.FieldBase.UiBehavior
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: UiBehavior
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 35455
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Defines additional only UI-specific behavior
  example: []
  syntax:
    content: >-
      [JsonProperty("uiBehavior", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public UiFieldBehavior UiBehavior { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.Contract.UiFieldBehavior
    content.vb: >-
      <JsonProperty("uiBehavior", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property UiBehavior As UiFieldBehavior
  overload: Picturepark.SDK.V1.Contract.FieldBase.UiBehavior*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: uiBehavior
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.FieldBase.Index
  commentId: P:Picturepark.SDK.V1.Contract.FieldBase.Index
  id: Index
  parent: Picturepark.SDK.V1.Contract.FieldBase
  langs:
  - csharp
  - vb
  name: Index
  nameWithType: FieldBase.Index
  fullName: Picturepark.SDK.V1.Contract.FieldBase.Index
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Index
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 35461
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Field is stored for filtering.
  example: []
  syntax:
    content: >-
      [JsonProperty("index", Required = Required.Always)]

      public bool Index { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("index", Required:=Required.Always)>

      Public Property Index As Boolean
  overload: Picturepark.SDK.V1.Contract.FieldBase.Index*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: index
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
- uid: Picturepark.SDK.V1.Contract.FieldBase.SimpleSearch
  commentId: P:Picturepark.SDK.V1.Contract.FieldBase.SimpleSearch
  id: SimpleSearch
  parent: Picturepark.SDK.V1.Contract.FieldBase
  langs:
  - csharp
  - vb
  name: SimpleSearch
  nameWithType: FieldBase.SimpleSearch
  fullName: Picturepark.SDK.V1.Contract.FieldBase.SimpleSearch
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: SimpleSearch
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 35467
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Field is stored for simple search.
  example: []
  syntax:
    content: >-
      [JsonProperty("simpleSearch", Required = Required.Always)]

      public bool SimpleSearch { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("simpleSearch", Required:=Required.Always)>

      Public Property SimpleSearch As Boolean
  overload: Picturepark.SDK.V1.Contract.FieldBase.SimpleSearch*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: simpleSearch
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
- uid: Picturepark.SDK.V1.Contract.FieldBase.Sortable
  commentId: P:Picturepark.SDK.V1.Contract.FieldBase.Sortable
  id: Sortable
  parent: Picturepark.SDK.V1.Contract.FieldBase
  langs:
  - csharp
  - vb
  name: Sortable
  nameWithType: FieldBase.Sortable
  fullName: Picturepark.SDK.V1.Contract.FieldBase.Sortable
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Sortable
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 35473
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Field is stored for sorting.
  example: []
  syntax:
    content: >-
      [JsonProperty("sortable", Required = Required.Always)]

      public bool Sortable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("sortable", Required:=Required.Always)>

      Public Property Sortable As Boolean
  overload: Picturepark.SDK.V1.Contract.FieldBase.Sortable*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: sortable
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
- uid: Picturepark.SDK.V1.Contract.FieldBase.ToJson
  commentId: M:Picturepark.SDK.V1.Contract.FieldBase.ToJson
  id: ToJson
  parent: Picturepark.SDK.V1.Contract.FieldBase
  langs:
  - csharp
  - vb
  name: ToJson()
  nameWithType: FieldBase.ToJson()
  fullName: Picturepark.SDK.V1.Contract.FieldBase.ToJson()
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: ToJson
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 35476
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  syntax:
    content: public string ToJson()
    return:
      type: System.String
    content.vb: Public Function ToJson() As String
  overload: Picturepark.SDK.V1.Contract.FieldBase.ToJson*
- uid: Picturepark.SDK.V1.Contract.FieldBase.FromJson(System.String)
  commentId: M:Picturepark.SDK.V1.Contract.FieldBase.FromJson(System.String)
  id: FromJson(System.String)
  parent: Picturepark.SDK.V1.Contract.FieldBase
  langs:
  - csharp
  - vb
  name: FromJson(string)
  nameWithType: FieldBase.FromJson(string)
  fullName: Picturepark.SDK.V1.Contract.FieldBase.FromJson(string)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: FromJson
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 35482
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  syntax:
    content: public static FieldBase FromJson(string data)
    parameters:
    - id: data
      type: System.String
    return:
      type: Picturepark.SDK.V1.Contract.FieldBase
    content.vb: Public Shared Function FromJson(data As String) As FieldBase
  overload: Picturepark.SDK.V1.Contract.FieldBase.FromJson*
  nameWithType.vb: FieldBase.FromJson(String)
  fullName.vb: Picturepark.SDK.V1.Contract.FieldBase.FromJson(String)
  name.vb: FromJson(String)
references:
- uid: Picturepark.SDK.V1.Contract
  commentId: N:Picturepark.SDK.V1.Contract
  href: Picturepark.html
  name: Picturepark.SDK.V1.Contract
  nameWithType: Picturepark.SDK.V1.Contract
  fullName: Picturepark.SDK.V1.Contract
  spec.csharp:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.Contract
    name: Contract
    href: Picturepark.SDK.V1.Contract.html
  spec.vb:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.Contract
    name: Contract
    href: Picturepark.SDK.V1.Contract.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Picturepark.SDK.V1.Contract.FieldBase.Id*
  commentId: Overload:Picturepark.SDK.V1.Contract.FieldBase.Id
  href: Picturepark.SDK.V1.Contract.FieldBase.html#Picturepark_SDK_V1_Contract_FieldBase_Id
  name: Id
  nameWithType: FieldBase.Id
  fullName: Picturepark.SDK.V1.Contract.FieldBase.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Picturepark.SDK.V1.Contract.FieldBase.IndexId*
  commentId: Overload:Picturepark.SDK.V1.Contract.FieldBase.IndexId
  href: Picturepark.SDK.V1.Contract.FieldBase.html#Picturepark_SDK_V1_Contract_FieldBase_IndexId
  name: IndexId
  nameWithType: FieldBase.IndexId
  fullName: Picturepark.SDK.V1.Contract.FieldBase.IndexId
- uid: Picturepark.SDK.V1.Contract.FieldBase.FieldNamespace*
  commentId: Overload:Picturepark.SDK.V1.Contract.FieldBase.FieldNamespace
  href: Picturepark.SDK.V1.Contract.FieldBase.html#Picturepark_SDK_V1_Contract_FieldBase_FieldNamespace
  name: FieldNamespace
  nameWithType: FieldBase.FieldNamespace
  fullName: Picturepark.SDK.V1.Contract.FieldBase.FieldNamespace
- uid: Picturepark.SDK.V1.Contract.FieldBase.Names*
  commentId: Overload:Picturepark.SDK.V1.Contract.FieldBase.Names
  href: Picturepark.SDK.V1.Contract.FieldBase.html#Picturepark_SDK_V1_Contract_FieldBase_Names
  name: Names
  nameWithType: FieldBase.Names
  fullName: Picturepark.SDK.V1.Contract.FieldBase.Names
- uid: Picturepark.SDK.V1.Contract.TranslatedStringDictionary
  commentId: T:Picturepark.SDK.V1.Contract.TranslatedStringDictionary
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.TranslatedStringDictionary.html
  name: TranslatedStringDictionary
  nameWithType: TranslatedStringDictionary
  fullName: Picturepark.SDK.V1.Contract.TranslatedStringDictionary
- uid: Picturepark.SDK.V1.Contract.FieldBase.Descriptions*
  commentId: Overload:Picturepark.SDK.V1.Contract.FieldBase.Descriptions
  href: Picturepark.SDK.V1.Contract.FieldBase.html#Picturepark_SDK_V1_Contract_FieldBase_Descriptions
  name: Descriptions
  nameWithType: FieldBase.Descriptions
  fullName: Picturepark.SDK.V1.Contract.FieldBase.Descriptions
- uid: Picturepark.SDK.V1.Contract.FieldBase.Required*
  commentId: Overload:Picturepark.SDK.V1.Contract.FieldBase.Required
  href: Picturepark.SDK.V1.Contract.FieldBase.html#Picturepark_SDK_V1_Contract_FieldBase_Required
  name: Required
  nameWithType: FieldBase.Required
  fullName: Picturepark.SDK.V1.Contract.FieldBase.Required
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Picturepark.SDK.V1.Contract.FieldBase.UiBehavior*
  commentId: Overload:Picturepark.SDK.V1.Contract.FieldBase.UiBehavior
  href: Picturepark.SDK.V1.Contract.FieldBase.html#Picturepark_SDK_V1_Contract_FieldBase_UiBehavior
  name: UiBehavior
  nameWithType: FieldBase.UiBehavior
  fullName: Picturepark.SDK.V1.Contract.FieldBase.UiBehavior
- uid: Picturepark.SDK.V1.Contract.UiFieldBehavior
  commentId: T:Picturepark.SDK.V1.Contract.UiFieldBehavior
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.UiFieldBehavior.html
  name: UiFieldBehavior
  nameWithType: UiFieldBehavior
  fullName: Picturepark.SDK.V1.Contract.UiFieldBehavior
- uid: Picturepark.SDK.V1.Contract.FieldBase.Index*
  commentId: Overload:Picturepark.SDK.V1.Contract.FieldBase.Index
  href: Picturepark.SDK.V1.Contract.FieldBase.html#Picturepark_SDK_V1_Contract_FieldBase_Index
  name: Index
  nameWithType: FieldBase.Index
  fullName: Picturepark.SDK.V1.Contract.FieldBase.Index
- uid: Picturepark.SDK.V1.Contract.FieldBase.SimpleSearch*
  commentId: Overload:Picturepark.SDK.V1.Contract.FieldBase.SimpleSearch
  href: Picturepark.SDK.V1.Contract.FieldBase.html#Picturepark_SDK_V1_Contract_FieldBase_SimpleSearch
  name: SimpleSearch
  nameWithType: FieldBase.SimpleSearch
  fullName: Picturepark.SDK.V1.Contract.FieldBase.SimpleSearch
- uid: Picturepark.SDK.V1.Contract.FieldBase.Sortable*
  commentId: Overload:Picturepark.SDK.V1.Contract.FieldBase.Sortable
  href: Picturepark.SDK.V1.Contract.FieldBase.html#Picturepark_SDK_V1_Contract_FieldBase_Sortable
  name: Sortable
  nameWithType: FieldBase.Sortable
  fullName: Picturepark.SDK.V1.Contract.FieldBase.Sortable
- uid: Picturepark.SDK.V1.Contract.FieldBase.ToJson*
  commentId: Overload:Picturepark.SDK.V1.Contract.FieldBase.ToJson
  href: Picturepark.SDK.V1.Contract.FieldBase.html#Picturepark_SDK_V1_Contract_FieldBase_ToJson
  name: ToJson
  nameWithType: FieldBase.ToJson
  fullName: Picturepark.SDK.V1.Contract.FieldBase.ToJson
- uid: Picturepark.SDK.V1.Contract.FieldBase.FromJson*
  commentId: Overload:Picturepark.SDK.V1.Contract.FieldBase.FromJson
  href: Picturepark.SDK.V1.Contract.FieldBase.html#Picturepark_SDK_V1_Contract_FieldBase_FromJson_System_String_
  name: FromJson
  nameWithType: FieldBase.FromJson
  fullName: Picturepark.SDK.V1.Contract.FieldBase.FromJson
- uid: Picturepark.SDK.V1.Contract.FieldBase
  commentId: T:Picturepark.SDK.V1.Contract.FieldBase
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.FieldBase.html
  name: FieldBase
  nameWithType: FieldBase
  fullName: Picturepark.SDK.V1.Contract.FieldBase
