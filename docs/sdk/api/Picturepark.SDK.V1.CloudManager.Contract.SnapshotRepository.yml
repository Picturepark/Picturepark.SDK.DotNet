### YamlMime:ManagedReference
items:
- uid: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository
  commentId: T:Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository
  id: SnapshotRepository
  parent: Picturepark.SDK.V1.CloudManager.Contract
  children:
  - Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.EntityId
  - Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.EntityType
  - Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.Expires
  - Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.ExternalMetadata
  - Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.FromJson(System.String)
  - Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.Id
  - Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.IsArchived
  - Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.Name
  - Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.StartTime
  - Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.ToJson
  langs:
  - csharp
  - vb
  name: SnapshotRepository
  nameWithType: SnapshotRepository
  fullName: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository
  type: Class
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: SnapshotRepository
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 14784
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  syntax:
    content: >-
      [GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]

      public class SnapshotRepository
    content.vb: >-
      <GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")>

      Public Class SnapshotRepository
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.CodeDom.Compiler.GeneratedCodeAttribute
    ctor: System.CodeDom.Compiler.GeneratedCodeAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: NJsonSchema
    - type: System.String
      value: 13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))
- uid: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.Id
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.Id
  id: Id
  parent: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: SnapshotRepository.Id
  fullName: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.Id
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Id
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 14787
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  syntax:
    content: >-
      [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("id", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Id As String
  overload: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.Name
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.Name
  id: Name
  parent: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: SnapshotRepository.Name
  fullName: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.Name
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Name
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 14790
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  syntax:
    content: >-
      [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("name", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Name As String
  overload: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: name
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.EntityId
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.EntityId
  id: EntityId
  parent: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository
  langs:
  - csharp
  - vb
  name: EntityId
  nameWithType: SnapshotRepository.EntityId
  fullName: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.EntityId
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: EntityId
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 14793
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  syntax:
    content: >-
      [JsonProperty("entityId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public string EntityId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("entityId", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property EntityId As String
  overload: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.EntityId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: entityId
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.EntityType
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.EntityType
  id: EntityType
  parent: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository
  langs:
  - csharp
  - vb
  name: EntityType
  nameWithType: SnapshotRepository.EntityType
  fullName: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.EntityType
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: EntityType
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 14796
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  syntax:
    content: >-
      [JsonProperty("entityType", Required = Required.Always)]

      [Required(AllowEmptyStrings = true)]

      [JsonConverter(typeof(StringEnumConverter))]

      public BackupEntityType EntityType { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.CloudManager.Contract.BackupEntityType
    content.vb: >-
      <JsonProperty("entityType", Required:=Required.Always)>

      <Required(AllowEmptyStrings:=True)>

      <JsonConverter(GetType(StringEnumConverter))>

      Public Property EntityType As BackupEntityType
  overload: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.EntityType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: entityType
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: AllowEmptyStrings
      type: System.Boolean
      value: true
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Newtonsoft.Json.Converters.StringEnumConverter
- uid: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.StartTime
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.StartTime
  id: StartTime
  parent: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository
  langs:
  - csharp
  - vb
  name: StartTime
  nameWithType: SnapshotRepository.StartTime
  fullName: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.StartTime
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: StartTime
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 14801
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  syntax:
    content: >-
      [JsonProperty("startTime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public DateTime? StartTime { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: >-
      <JsonProperty("startTime", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property StartTime As Date?
  overload: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.StartTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: startTime
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.Expires
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.Expires
  id: Expires
  parent: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository
  langs:
  - csharp
  - vb
  name: Expires
  nameWithType: SnapshotRepository.Expires
  fullName: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.Expires
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Expires
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 14804
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  syntax:
    content: >-
      [JsonProperty("expires", Required = Required.Always)]

      [Required(AllowEmptyStrings = true)]

      public DateTime Expires { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonProperty("expires", Required:=Required.Always)>

      <Required(AllowEmptyStrings:=True)>

      Public Property Expires As Date
  overload: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.Expires*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: expires
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: AllowEmptyStrings
      type: System.Boolean
      value: true
- uid: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.IsArchived
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.IsArchived
  id: IsArchived
  parent: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository
  langs:
  - csharp
  - vb
  name: IsArchived
  nameWithType: SnapshotRepository.IsArchived
  fullName: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.IsArchived
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: IsArchived
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 14808
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  syntax:
    content: >-
      [JsonProperty("isArchived", Required = Required.Always)]

      public bool IsArchived { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("isArchived", Required:=Required.Always)>

      Public Property IsArchived As Boolean
  overload: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.IsArchived*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: isArchived
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
- uid: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.ExternalMetadata
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.ExternalMetadata
  id: ExternalMetadata
  parent: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository
  langs:
  - csharp
  - vb
  name: ExternalMetadata
  nameWithType: SnapshotRepository.ExternalMetadata
  fullName: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.ExternalMetadata
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: ExternalMetadata
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 14811
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  syntax:
    content: >-
      [JsonProperty("externalMetadata", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public string ExternalMetadata { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("externalMetadata", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property ExternalMetadata As String
  overload: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.ExternalMetadata*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: externalMetadata
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.ToJson
  commentId: M:Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.ToJson
  id: ToJson
  parent: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository
  langs:
  - csharp
  - vb
  name: ToJson()
  nameWithType: SnapshotRepository.ToJson()
  fullName: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.ToJson()
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: ToJson
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 14814
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  syntax:
    content: public string ToJson()
    return:
      type: System.String
    content.vb: Public Function ToJson() As String
  overload: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.ToJson*
- uid: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.FromJson(System.String)
  commentId: M:Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.FromJson(System.String)
  id: FromJson(System.String)
  parent: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository
  langs:
  - csharp
  - vb
  name: FromJson(string)
  nameWithType: SnapshotRepository.FromJson(string)
  fullName: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.FromJson(string)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: FromJson
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 14820
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  syntax:
    content: public static SnapshotRepository FromJson(string data)
    parameters:
    - id: data
      type: System.String
    return:
      type: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository
    content.vb: Public Shared Function FromJson(data As String) As SnapshotRepository
  overload: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.FromJson*
  nameWithType.vb: SnapshotRepository.FromJson(String)
  fullName.vb: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.FromJson(String)
  name.vb: FromJson(String)
references:
- uid: Picturepark.SDK.V1.CloudManager.Contract
  commentId: N:Picturepark.SDK.V1.CloudManager.Contract
  href: Picturepark.html
  name: Picturepark.SDK.V1.CloudManager.Contract
  nameWithType: Picturepark.SDK.V1.CloudManager.Contract
  fullName: Picturepark.SDK.V1.CloudManager.Contract
  spec.csharp:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.CloudManager
    name: CloudManager
    href: Picturepark.SDK.V1.CloudManager.html
  - name: .
  - uid: Picturepark.SDK.V1.CloudManager.Contract
    name: Contract
    href: Picturepark.SDK.V1.CloudManager.Contract.html
  spec.vb:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.CloudManager
    name: CloudManager
    href: Picturepark.SDK.V1.CloudManager.html
  - name: .
  - uid: Picturepark.SDK.V1.CloudManager.Contract
    name: Contract
    href: Picturepark.SDK.V1.CloudManager.Contract.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.Id*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.Id
  href: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.html#Picturepark_SDK_V1_CloudManager_Contract_SnapshotRepository_Id
  name: Id
  nameWithType: SnapshotRepository.Id
  fullName: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.Name*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.Name
  href: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.html#Picturepark_SDK_V1_CloudManager_Contract_SnapshotRepository_Name
  name: Name
  nameWithType: SnapshotRepository.Name
  fullName: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.Name
- uid: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.EntityId*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.EntityId
  href: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.html#Picturepark_SDK_V1_CloudManager_Contract_SnapshotRepository_EntityId
  name: EntityId
  nameWithType: SnapshotRepository.EntityId
  fullName: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.EntityId
- uid: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.EntityType*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.EntityType
  href: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.html#Picturepark_SDK_V1_CloudManager_Contract_SnapshotRepository_EntityType
  name: EntityType
  nameWithType: SnapshotRepository.EntityType
  fullName: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.EntityType
- uid: Picturepark.SDK.V1.CloudManager.Contract.BackupEntityType
  commentId: T:Picturepark.SDK.V1.CloudManager.Contract.BackupEntityType
  parent: Picturepark.SDK.V1.CloudManager.Contract
  href: Picturepark.SDK.V1.CloudManager.Contract.BackupEntityType.html
  name: BackupEntityType
  nameWithType: BackupEntityType
  fullName: Picturepark.SDK.V1.CloudManager.Contract.BackupEntityType
- uid: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.StartTime*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.StartTime
  href: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.html#Picturepark_SDK_V1_CloudManager_Contract_SnapshotRepository_StartTime
  name: StartTime
  nameWithType: SnapshotRepository.StartTime
  fullName: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.StartTime
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime?
  nameWithType: DateTime?
  fullName: System.DateTime?
  nameWithType.vb: Date?
  fullName.vb: Date?
  name.vb: Date?
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
  spec.vb:
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.Expires*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.Expires
  href: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.html#Picturepark_SDK_V1_CloudManager_Contract_SnapshotRepository_Expires
  name: Expires
  nameWithType: SnapshotRepository.Expires
  fullName: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.Expires
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.IsArchived*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.IsArchived
  href: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.html#Picturepark_SDK_V1_CloudManager_Contract_SnapshotRepository_IsArchived
  name: IsArchived
  nameWithType: SnapshotRepository.IsArchived
  fullName: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.IsArchived
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.ExternalMetadata*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.ExternalMetadata
  href: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.html#Picturepark_SDK_V1_CloudManager_Contract_SnapshotRepository_ExternalMetadata
  name: ExternalMetadata
  nameWithType: SnapshotRepository.ExternalMetadata
  fullName: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.ExternalMetadata
- uid: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.ToJson*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.ToJson
  href: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.html#Picturepark_SDK_V1_CloudManager_Contract_SnapshotRepository_ToJson
  name: ToJson
  nameWithType: SnapshotRepository.ToJson
  fullName: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.ToJson
- uid: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.FromJson*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.FromJson
  href: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.html#Picturepark_SDK_V1_CloudManager_Contract_SnapshotRepository_FromJson_System_String_
  name: FromJson
  nameWithType: SnapshotRepository.FromJson
  fullName: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.FromJson
- uid: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository
  commentId: T:Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository
  parent: Picturepark.SDK.V1.CloudManager.Contract
  href: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository.html
  name: SnapshotRepository
  nameWithType: SnapshotRepository
  fullName: Picturepark.SDK.V1.CloudManager.Contract.SnapshotRepository
