### YamlMime:ManagedReference
items:
- uid: Picturepark.SDK.V1.Contract.FieldTranslatedString
  commentId: T:Picturepark.SDK.V1.Contract.FieldTranslatedString
  id: FieldTranslatedString
  parent: Picturepark.SDK.V1.Contract
  children:
  - Picturepark.SDK.V1.Contract.FieldTranslatedString.Boost
  - Picturepark.SDK.V1.Contract.FieldTranslatedString.FromJson(System.String)
  - Picturepark.SDK.V1.Contract.FieldTranslatedString.IndexAnalyzers
  - Picturepark.SDK.V1.Contract.FieldTranslatedString.MaximumLength
  - Picturepark.SDK.V1.Contract.FieldTranslatedString.MinimumLength
  - Picturepark.SDK.V1.Contract.FieldTranslatedString.MultiLine
  - Picturepark.SDK.V1.Contract.FieldTranslatedString.Pattern
  - Picturepark.SDK.V1.Contract.FieldTranslatedString.RenderingType
  - Picturepark.SDK.V1.Contract.FieldTranslatedString.RequiredMetadataLanguages
  - Picturepark.SDK.V1.Contract.FieldTranslatedString.SimpleSearchAnalyzers
  - Picturepark.SDK.V1.Contract.FieldTranslatedString.Template
  - Picturepark.SDK.V1.Contract.FieldTranslatedString.ToJson
  langs:
  - csharp
  - vb
  name: FieldTranslatedString
  nameWithType: FieldTranslatedString
  fullName: Picturepark.SDK.V1.Contract.FieldTranslatedString
  type: Class
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: FieldTranslatedString
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 36572
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: The field used to store a translated string values
  example: []
  syntax:
    content: >-
      [GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]

      public class FieldTranslatedString : FieldBase
    content.vb: >-
      <GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")>

      Public Class FieldTranslatedString Inherits FieldBase
  inheritance:
  - System.Object
  - Picturepark.SDK.V1.Contract.FieldBase
  inheritedMembers:
  - Picturepark.SDK.V1.Contract.FieldBase.Id
  - Picturepark.SDK.V1.Contract.FieldBase.IndexId
  - Picturepark.SDK.V1.Contract.FieldBase.FieldNamespace
  - Picturepark.SDK.V1.Contract.FieldBase.Names
  - Picturepark.SDK.V1.Contract.FieldBase.Descriptions
  - Picturepark.SDK.V1.Contract.FieldBase.Required
  - Picturepark.SDK.V1.Contract.FieldBase.UiBehavior
  - Picturepark.SDK.V1.Contract.FieldBase.Index
  - Picturepark.SDK.V1.Contract.FieldBase.SimpleSearch
  - Picturepark.SDK.V1.Contract.FieldBase.Sortable
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.CodeDom.Compiler.GeneratedCodeAttribute
    ctor: System.CodeDom.Compiler.GeneratedCodeAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: NJsonSchema
    - type: System.String
      value: 13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))
- uid: Picturepark.SDK.V1.Contract.FieldTranslatedString.Pattern
  commentId: P:Picturepark.SDK.V1.Contract.FieldTranslatedString.Pattern
  id: Pattern
  parent: Picturepark.SDK.V1.Contract.FieldTranslatedString
  langs:
  - csharp
  - vb
  name: Pattern
  nameWithType: FieldTranslatedString.Pattern
  fullName: Picturepark.SDK.V1.Contract.FieldTranslatedString.Pattern
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Pattern
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 36578
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Contains a regex validation pattern.
  example: []
  syntax:
    content: >-
      [JsonProperty("pattern", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public string Pattern { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("pattern", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Pattern As String
  overload: Picturepark.SDK.V1.Contract.FieldTranslatedString.Pattern*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: pattern
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.FieldTranslatedString.MinimumLength
  commentId: P:Picturepark.SDK.V1.Contract.FieldTranslatedString.MinimumLength
  id: MinimumLength
  parent: Picturepark.SDK.V1.Contract.FieldTranslatedString
  langs:
  - csharp
  - vb
  name: MinimumLength
  nameWithType: FieldTranslatedString.MinimumLength
  fullName: Picturepark.SDK.V1.Contract.FieldTranslatedString.MinimumLength
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: MinimumLength
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 36584
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: The minimum string's length.
  example: []
  syntax:
    content: >-
      [JsonProperty("minimumLength", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public int? MinimumLength { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonProperty("minimumLength", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property MinimumLength As Integer?
  overload: Picturepark.SDK.V1.Contract.FieldTranslatedString.MinimumLength*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: minimumLength
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.FieldTranslatedString.MaximumLength
  commentId: P:Picturepark.SDK.V1.Contract.FieldTranslatedString.MaximumLength
  id: MaximumLength
  parent: Picturepark.SDK.V1.Contract.FieldTranslatedString
  langs:
  - csharp
  - vb
  name: MaximumLength
  nameWithType: FieldTranslatedString.MaximumLength
  fullName: Picturepark.SDK.V1.Contract.FieldTranslatedString.MaximumLength
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: MaximumLength
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 36590
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: The maximum string's length.
  example: []
  syntax:
    content: >-
      [JsonProperty("maximumLength", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public int? MaximumLength { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonProperty("maximumLength", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property MaximumLength As Integer?
  overload: Picturepark.SDK.V1.Contract.FieldTranslatedString.MaximumLength*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: maximumLength
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.FieldTranslatedString.IndexAnalyzers
  commentId: P:Picturepark.SDK.V1.Contract.FieldTranslatedString.IndexAnalyzers
  id: IndexAnalyzers
  parent: Picturepark.SDK.V1.Contract.FieldTranslatedString
  langs:
  - csharp
  - vb
  name: IndexAnalyzers
  nameWithType: FieldTranslatedString.IndexAnalyzers
  fullName: Picturepark.SDK.V1.Contract.FieldTranslatedString.IndexAnalyzers
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: IndexAnalyzers
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 36597
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: >-
    Defines how the value must be analyzed for filtering by ElasticSearch. A string field can have multiple analyzers, but only one per analyzer type.

    <br />The analyzers are applied only if the Index property is set to true.
  example: []
  syntax:
    content: >-
      [JsonProperty("indexAnalyzers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public ICollection<AnalyzerBase> IndexAnalyzers { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.AnalyzerBase}
    content.vb: >-
      <JsonProperty("indexAnalyzers", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property IndexAnalyzers As ICollection(Of AnalyzerBase)
  overload: Picturepark.SDK.V1.Contract.FieldTranslatedString.IndexAnalyzers*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: indexAnalyzers
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.FieldTranslatedString.SimpleSearchAnalyzers
  commentId: P:Picturepark.SDK.V1.Contract.FieldTranslatedString.SimpleSearchAnalyzers
  id: SimpleSearchAnalyzers
  parent: Picturepark.SDK.V1.Contract.FieldTranslatedString
  langs:
  - csharp
  - vb
  name: SimpleSearchAnalyzers
  nameWithType: FieldTranslatedString.SimpleSearchAnalyzers
  fullName: Picturepark.SDK.V1.Contract.FieldTranslatedString.SimpleSearchAnalyzers
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: SimpleSearchAnalyzers
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 36604
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: >-
    Defines how the value must be analyzed for searches by ElasticSearch. A string field can have multiple analyzers, but only one per analyzer type.

    <br />The analyzers are applied only if the SimpleSearch property is set to true.
  example: []
  syntax:
    content: >-
      [JsonProperty("simpleSearchAnalyzers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public ICollection<AnalyzerBase> SimpleSearchAnalyzers { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.AnalyzerBase}
    content.vb: >-
      <JsonProperty("simpleSearchAnalyzers", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property SimpleSearchAnalyzers As ICollection(Of AnalyzerBase)
  overload: Picturepark.SDK.V1.Contract.FieldTranslatedString.SimpleSearchAnalyzers*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: simpleSearchAnalyzers
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.FieldTranslatedString.MultiLine
  commentId: P:Picturepark.SDK.V1.Contract.FieldTranslatedString.MultiLine
  id: MultiLine
  parent: Picturepark.SDK.V1.Contract.FieldTranslatedString
  langs:
  - csharp
  - vb
  name: MultiLine
  nameWithType: FieldTranslatedString.MultiLine
  fullName: Picturepark.SDK.V1.Contract.FieldTranslatedString.MultiLine
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: MultiLine
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 36610
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Defines that the field value must be displayed in a multiline component.
  example: []
  syntax:
    content: >-
      [JsonProperty("multiLine", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public bool MultiLine { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("multiLine", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property MultiLine As Boolean
  overload: Picturepark.SDK.V1.Contract.FieldTranslatedString.MultiLine*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: multiLine
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.FieldTranslatedString.RequiredMetadataLanguages
  commentId: P:Picturepark.SDK.V1.Contract.FieldTranslatedString.RequiredMetadataLanguages
  id: RequiredMetadataLanguages
  parent: Picturepark.SDK.V1.Contract.FieldTranslatedString
  langs:
  - csharp
  - vb
  name: RequiredMetadataLanguages
  nameWithType: FieldTranslatedString.RequiredMetadataLanguages
  fullName: Picturepark.SDK.V1.Contract.FieldTranslatedString.RequiredMetadataLanguages
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: RequiredMetadataLanguages
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 36618
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: >-
    Sets the required metadata languages for the translation field. The langauge configuration limits the available metadata languages.

    <br />If Required is true, the field and all its metadata languages are required.

    <br />If Required is false, the field can be left empty, but as soon as a value is entered all required metadata languages are mandatory.
  example: []
  syntax:
    content: >-
      [JsonProperty("requiredMetadataLanguages", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public ICollection<string> RequiredMetadataLanguages { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonProperty("requiredMetadataLanguages", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property RequiredMetadataLanguages As ICollection(Of String)
  overload: Picturepark.SDK.V1.Contract.FieldTranslatedString.RequiredMetadataLanguages*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: requiredMetadataLanguages
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.FieldTranslatedString.Template
  commentId: P:Picturepark.SDK.V1.Contract.FieldTranslatedString.Template
  id: Template
  parent: Picturepark.SDK.V1.Contract.FieldTranslatedString
  langs:
  - csharp
  - vb
  name: Template
  nameWithType: FieldTranslatedString.Template
  fullName: Picturepark.SDK.V1.Contract.FieldTranslatedString.Template
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Template
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 36625
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: >-
    A DotLiquid template. If set, it transforms the field in a calculated field, so that its value is calculated based on this template.

    <br />
  example: []
  syntax:
    content: >-
      [JsonProperty("template", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public string Template { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("template", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Template As String
  overload: Picturepark.SDK.V1.Contract.FieldTranslatedString.Template*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: template
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.FieldTranslatedString.Boost
  commentId: P:Picturepark.SDK.V1.Contract.FieldTranslatedString.Boost
  id: Boost
  parent: Picturepark.SDK.V1.Contract.FieldTranslatedString
  langs:
  - csharp
  - vb
  name: Boost
  nameWithType: FieldTranslatedString.Boost
  fullName: Picturepark.SDK.V1.Contract.FieldTranslatedString.Boost
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Boost
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 36631
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Value to prioritize search results. Set to 1 by default. Ignored if SimpleSearch not set to true.
  example: []
  syntax:
    content: >-
      [JsonProperty("boost", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double Boost { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonProperty("boost", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Boost As Double
  overload: Picturepark.SDK.V1.Contract.FieldTranslatedString.Boost*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: boost
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.FieldTranslatedString.RenderingType
  commentId: P:Picturepark.SDK.V1.Contract.FieldTranslatedString.RenderingType
  id: RenderingType
  parent: Picturepark.SDK.V1.Contract.FieldTranslatedString
  langs:
  - csharp
  - vb
  name: RenderingType
  nameWithType: FieldTranslatedString.RenderingType
  fullName: Picturepark.SDK.V1.Contract.FieldTranslatedString.RenderingType
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: RenderingType
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 36637
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Stores information on how values of this field should be rendered
  example: []
  syntax:
    content: >-
      [JsonProperty("renderingType", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      [JsonConverter(typeof(StringEnumConverter))]

      public StringRenderingType RenderingType { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.Contract.StringRenderingType
    content.vb: >-
      <JsonProperty("renderingType", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      <JsonConverter(GetType(StringEnumConverter))>

      Public Property RenderingType As StringRenderingType
  overload: Picturepark.SDK.V1.Contract.FieldTranslatedString.RenderingType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: renderingType
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Newtonsoft.Json.Converters.StringEnumConverter
- uid: Picturepark.SDK.V1.Contract.FieldTranslatedString.ToJson
  commentId: M:Picturepark.SDK.V1.Contract.FieldTranslatedString.ToJson
  id: ToJson
  parent: Picturepark.SDK.V1.Contract.FieldTranslatedString
  langs:
  - csharp
  - vb
  name: ToJson()
  nameWithType: FieldTranslatedString.ToJson()
  fullName: Picturepark.SDK.V1.Contract.FieldTranslatedString.ToJson()
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: ToJson
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 36641
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  syntax:
    content: public string ToJson()
    return:
      type: System.String
    content.vb: Public Function ToJson() As String
  overload: Picturepark.SDK.V1.Contract.FieldTranslatedString.ToJson*
- uid: Picturepark.SDK.V1.Contract.FieldTranslatedString.FromJson(System.String)
  commentId: M:Picturepark.SDK.V1.Contract.FieldTranslatedString.FromJson(System.String)
  id: FromJson(System.String)
  parent: Picturepark.SDK.V1.Contract.FieldTranslatedString
  langs:
  - csharp
  - vb
  name: FromJson(string)
  nameWithType: FieldTranslatedString.FromJson(string)
  fullName: Picturepark.SDK.V1.Contract.FieldTranslatedString.FromJson(string)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: FromJson
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 36647
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  syntax:
    content: public static FieldTranslatedString FromJson(string data)
    parameters:
    - id: data
      type: System.String
    return:
      type: Picturepark.SDK.V1.Contract.FieldTranslatedString
    content.vb: Public Shared Function FromJson(data As String) As FieldTranslatedString
  overload: Picturepark.SDK.V1.Contract.FieldTranslatedString.FromJson*
  nameWithType.vb: FieldTranslatedString.FromJson(String)
  fullName.vb: Picturepark.SDK.V1.Contract.FieldTranslatedString.FromJson(String)
  name.vb: FromJson(String)
references:
- uid: Picturepark.SDK.V1.Contract
  commentId: N:Picturepark.SDK.V1.Contract
  href: Picturepark.html
  name: Picturepark.SDK.V1.Contract
  nameWithType: Picturepark.SDK.V1.Contract
  fullName: Picturepark.SDK.V1.Contract
  spec.csharp:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.Contract
    name: Contract
    href: Picturepark.SDK.V1.Contract.html
  spec.vb:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.Contract
    name: Contract
    href: Picturepark.SDK.V1.Contract.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Picturepark.SDK.V1.Contract.FieldBase
  commentId: T:Picturepark.SDK.V1.Contract.FieldBase
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.FieldBase.html
  name: FieldBase
  nameWithType: FieldBase
  fullName: Picturepark.SDK.V1.Contract.FieldBase
- uid: Picturepark.SDK.V1.Contract.FieldBase.Id
  commentId: P:Picturepark.SDK.V1.Contract.FieldBase.Id
  parent: Picturepark.SDK.V1.Contract.FieldBase
  href: Picturepark.SDK.V1.Contract.FieldBase.html#Picturepark_SDK_V1_Contract_FieldBase_Id
  name: Id
  nameWithType: FieldBase.Id
  fullName: Picturepark.SDK.V1.Contract.FieldBase.Id
- uid: Picturepark.SDK.V1.Contract.FieldBase.IndexId
  commentId: P:Picturepark.SDK.V1.Contract.FieldBase.IndexId
  parent: Picturepark.SDK.V1.Contract.FieldBase
  href: Picturepark.SDK.V1.Contract.FieldBase.html#Picturepark_SDK_V1_Contract_FieldBase_IndexId
  name: IndexId
  nameWithType: FieldBase.IndexId
  fullName: Picturepark.SDK.V1.Contract.FieldBase.IndexId
- uid: Picturepark.SDK.V1.Contract.FieldBase.FieldNamespace
  commentId: P:Picturepark.SDK.V1.Contract.FieldBase.FieldNamespace
  parent: Picturepark.SDK.V1.Contract.FieldBase
  href: Picturepark.SDK.V1.Contract.FieldBase.html#Picturepark_SDK_V1_Contract_FieldBase_FieldNamespace
  name: FieldNamespace
  nameWithType: FieldBase.FieldNamespace
  fullName: Picturepark.SDK.V1.Contract.FieldBase.FieldNamespace
- uid: Picturepark.SDK.V1.Contract.FieldBase.Names
  commentId: P:Picturepark.SDK.V1.Contract.FieldBase.Names
  parent: Picturepark.SDK.V1.Contract.FieldBase
  href: Picturepark.SDK.V1.Contract.FieldBase.html#Picturepark_SDK_V1_Contract_FieldBase_Names
  name: Names
  nameWithType: FieldBase.Names
  fullName: Picturepark.SDK.V1.Contract.FieldBase.Names
- uid: Picturepark.SDK.V1.Contract.FieldBase.Descriptions
  commentId: P:Picturepark.SDK.V1.Contract.FieldBase.Descriptions
  parent: Picturepark.SDK.V1.Contract.FieldBase
  href: Picturepark.SDK.V1.Contract.FieldBase.html#Picturepark_SDK_V1_Contract_FieldBase_Descriptions
  name: Descriptions
  nameWithType: FieldBase.Descriptions
  fullName: Picturepark.SDK.V1.Contract.FieldBase.Descriptions
- uid: Picturepark.SDK.V1.Contract.FieldBase.Required
  commentId: P:Picturepark.SDK.V1.Contract.FieldBase.Required
  parent: Picturepark.SDK.V1.Contract.FieldBase
  href: Picturepark.SDK.V1.Contract.FieldBase.html#Picturepark_SDK_V1_Contract_FieldBase_Required
  name: Required
  nameWithType: FieldBase.Required
  fullName: Picturepark.SDK.V1.Contract.FieldBase.Required
- uid: Picturepark.SDK.V1.Contract.FieldBase.UiBehavior
  commentId: P:Picturepark.SDK.V1.Contract.FieldBase.UiBehavior
  parent: Picturepark.SDK.V1.Contract.FieldBase
  href: Picturepark.SDK.V1.Contract.FieldBase.html#Picturepark_SDK_V1_Contract_FieldBase_UiBehavior
  name: UiBehavior
  nameWithType: FieldBase.UiBehavior
  fullName: Picturepark.SDK.V1.Contract.FieldBase.UiBehavior
- uid: Picturepark.SDK.V1.Contract.FieldBase.Index
  commentId: P:Picturepark.SDK.V1.Contract.FieldBase.Index
  parent: Picturepark.SDK.V1.Contract.FieldBase
  href: Picturepark.SDK.V1.Contract.FieldBase.html#Picturepark_SDK_V1_Contract_FieldBase_Index
  name: Index
  nameWithType: FieldBase.Index
  fullName: Picturepark.SDK.V1.Contract.FieldBase.Index
- uid: Picturepark.SDK.V1.Contract.FieldBase.SimpleSearch
  commentId: P:Picturepark.SDK.V1.Contract.FieldBase.SimpleSearch
  parent: Picturepark.SDK.V1.Contract.FieldBase
  href: Picturepark.SDK.V1.Contract.FieldBase.html#Picturepark_SDK_V1_Contract_FieldBase_SimpleSearch
  name: SimpleSearch
  nameWithType: FieldBase.SimpleSearch
  fullName: Picturepark.SDK.V1.Contract.FieldBase.SimpleSearch
- uid: Picturepark.SDK.V1.Contract.FieldBase.Sortable
  commentId: P:Picturepark.SDK.V1.Contract.FieldBase.Sortable
  parent: Picturepark.SDK.V1.Contract.FieldBase
  href: Picturepark.SDK.V1.Contract.FieldBase.html#Picturepark_SDK_V1_Contract_FieldBase_Sortable
  name: Sortable
  nameWithType: FieldBase.Sortable
  fullName: Picturepark.SDK.V1.Contract.FieldBase.Sortable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Picturepark.SDK.V1.Contract.FieldTranslatedString.Pattern*
  commentId: Overload:Picturepark.SDK.V1.Contract.FieldTranslatedString.Pattern
  href: Picturepark.SDK.V1.Contract.FieldTranslatedString.html#Picturepark_SDK_V1_Contract_FieldTranslatedString_Pattern
  name: Pattern
  nameWithType: FieldTranslatedString.Pattern
  fullName: Picturepark.SDK.V1.Contract.FieldTranslatedString.Pattern
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Picturepark.SDK.V1.Contract.FieldTranslatedString.MinimumLength*
  commentId: Overload:Picturepark.SDK.V1.Contract.FieldTranslatedString.MinimumLength
  href: Picturepark.SDK.V1.Contract.FieldTranslatedString.html#Picturepark_SDK_V1_Contract_FieldTranslatedString_MinimumLength
  name: MinimumLength
  nameWithType: FieldTranslatedString.MinimumLength
  fullName: Picturepark.SDK.V1.Contract.FieldTranslatedString.MinimumLength
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Picturepark.SDK.V1.Contract.FieldTranslatedString.MaximumLength*
  commentId: Overload:Picturepark.SDK.V1.Contract.FieldTranslatedString.MaximumLength
  href: Picturepark.SDK.V1.Contract.FieldTranslatedString.html#Picturepark_SDK_V1_Contract_FieldTranslatedString_MaximumLength
  name: MaximumLength
  nameWithType: FieldTranslatedString.MaximumLength
  fullName: Picturepark.SDK.V1.Contract.FieldTranslatedString.MaximumLength
- uid: Picturepark.SDK.V1.Contract.FieldTranslatedString.IndexAnalyzers*
  commentId: Overload:Picturepark.SDK.V1.Contract.FieldTranslatedString.IndexAnalyzers
  href: Picturepark.SDK.V1.Contract.FieldTranslatedString.html#Picturepark_SDK_V1_Contract_FieldTranslatedString_IndexAnalyzers
  name: IndexAnalyzers
  nameWithType: FieldTranslatedString.IndexAnalyzers
  fullName: Picturepark.SDK.V1.Contract.FieldTranslatedString.IndexAnalyzers
- uid: System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.AnalyzerBase}
  commentId: T:System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.AnalyzerBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<AnalyzerBase>
  nameWithType: ICollection<AnalyzerBase>
  fullName: System.Collections.Generic.ICollection<Picturepark.SDK.V1.Contract.AnalyzerBase>
  nameWithType.vb: ICollection(Of AnalyzerBase)
  fullName.vb: System.Collections.Generic.ICollection(Of Picturepark.SDK.V1.Contract.AnalyzerBase)
  name.vb: ICollection(Of AnalyzerBase)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Picturepark.SDK.V1.Contract.AnalyzerBase
    name: AnalyzerBase
    href: Picturepark.SDK.V1.Contract.AnalyzerBase.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.AnalyzerBase
    name: AnalyzerBase
    href: Picturepark.SDK.V1.Contract.AnalyzerBase.html
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Picturepark.SDK.V1.Contract.FieldTranslatedString.SimpleSearchAnalyzers*
  commentId: Overload:Picturepark.SDK.V1.Contract.FieldTranslatedString.SimpleSearchAnalyzers
  href: Picturepark.SDK.V1.Contract.FieldTranslatedString.html#Picturepark_SDK_V1_Contract_FieldTranslatedString_SimpleSearchAnalyzers
  name: SimpleSearchAnalyzers
  nameWithType: FieldTranslatedString.SimpleSearchAnalyzers
  fullName: Picturepark.SDK.V1.Contract.FieldTranslatedString.SimpleSearchAnalyzers
- uid: Picturepark.SDK.V1.Contract.FieldTranslatedString.MultiLine*
  commentId: Overload:Picturepark.SDK.V1.Contract.FieldTranslatedString.MultiLine
  href: Picturepark.SDK.V1.Contract.FieldTranslatedString.html#Picturepark_SDK_V1_Contract_FieldTranslatedString_MultiLine
  name: MultiLine
  nameWithType: FieldTranslatedString.MultiLine
  fullName: Picturepark.SDK.V1.Contract.FieldTranslatedString.MultiLine
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Picturepark.SDK.V1.Contract.FieldTranslatedString.RequiredMetadataLanguages*
  commentId: Overload:Picturepark.SDK.V1.Contract.FieldTranslatedString.RequiredMetadataLanguages
  href: Picturepark.SDK.V1.Contract.FieldTranslatedString.html#Picturepark_SDK_V1_Contract_FieldTranslatedString_RequiredMetadataLanguages
  name: RequiredMetadataLanguages
  nameWithType: FieldTranslatedString.RequiredMetadataLanguages
  fullName: Picturepark.SDK.V1.Contract.FieldTranslatedString.RequiredMetadataLanguages
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<string>
  nameWithType: ICollection<string>
  fullName: System.Collections.Generic.ICollection<string>
  nameWithType.vb: ICollection(Of String)
  fullName.vb: System.Collections.Generic.ICollection(Of String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Picturepark.SDK.V1.Contract.FieldTranslatedString.Template*
  commentId: Overload:Picturepark.SDK.V1.Contract.FieldTranslatedString.Template
  href: Picturepark.SDK.V1.Contract.FieldTranslatedString.html#Picturepark_SDK_V1_Contract_FieldTranslatedString_Template
  name: Template
  nameWithType: FieldTranslatedString.Template
  fullName: Picturepark.SDK.V1.Contract.FieldTranslatedString.Template
- uid: Picturepark.SDK.V1.Contract.FieldTranslatedString.Boost*
  commentId: Overload:Picturepark.SDK.V1.Contract.FieldTranslatedString.Boost
  href: Picturepark.SDK.V1.Contract.FieldTranslatedString.html#Picturepark_SDK_V1_Contract_FieldTranslatedString_Boost
  name: Boost
  nameWithType: FieldTranslatedString.Boost
  fullName: Picturepark.SDK.V1.Contract.FieldTranslatedString.Boost
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: Picturepark.SDK.V1.Contract.FieldTranslatedString.RenderingType*
  commentId: Overload:Picturepark.SDK.V1.Contract.FieldTranslatedString.RenderingType
  href: Picturepark.SDK.V1.Contract.FieldTranslatedString.html#Picturepark_SDK_V1_Contract_FieldTranslatedString_RenderingType
  name: RenderingType
  nameWithType: FieldTranslatedString.RenderingType
  fullName: Picturepark.SDK.V1.Contract.FieldTranslatedString.RenderingType
- uid: Picturepark.SDK.V1.Contract.StringRenderingType
  commentId: T:Picturepark.SDK.V1.Contract.StringRenderingType
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.StringRenderingType.html
  name: StringRenderingType
  nameWithType: StringRenderingType
  fullName: Picturepark.SDK.V1.Contract.StringRenderingType
- uid: Picturepark.SDK.V1.Contract.FieldTranslatedString.ToJson*
  commentId: Overload:Picturepark.SDK.V1.Contract.FieldTranslatedString.ToJson
  href: Picturepark.SDK.V1.Contract.FieldTranslatedString.html#Picturepark_SDK_V1_Contract_FieldTranslatedString_ToJson
  name: ToJson
  nameWithType: FieldTranslatedString.ToJson
  fullName: Picturepark.SDK.V1.Contract.FieldTranslatedString.ToJson
- uid: Picturepark.SDK.V1.Contract.FieldTranslatedString.FromJson*
  commentId: Overload:Picturepark.SDK.V1.Contract.FieldTranslatedString.FromJson
  href: Picturepark.SDK.V1.Contract.FieldTranslatedString.html#Picturepark_SDK_V1_Contract_FieldTranslatedString_FromJson_System_String_
  name: FromJson
  nameWithType: FieldTranslatedString.FromJson
  fullName: Picturepark.SDK.V1.Contract.FieldTranslatedString.FromJson
- uid: Picturepark.SDK.V1.Contract.FieldTranslatedString
  commentId: T:Picturepark.SDK.V1.Contract.FieldTranslatedString
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.FieldTranslatedString.html
  name: FieldTranslatedString
  nameWithType: FieldTranslatedString
  fullName: Picturepark.SDK.V1.Contract.FieldTranslatedString
