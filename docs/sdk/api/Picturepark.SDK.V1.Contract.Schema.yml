### YamlMime:ManagedReference
items:
- uid: Picturepark.SDK.V1.Contract.Schema
  commentId: T:Picturepark.SDK.V1.Contract.Schema
  id: Schema
  parent: Picturepark.SDK.V1.Contract
  children:
  - Picturepark.SDK.V1.Contract.Schema.ChildCount
  - Picturepark.SDK.V1.Contract.Schema.Descriptions
  - Picturepark.SDK.V1.Contract.Schema.FieldCount
  - Picturepark.SDK.V1.Contract.Schema.FromJson(System.String)
  - Picturepark.SDK.V1.Contract.Schema.Id
  - Picturepark.SDK.V1.Contract.Schema.LayerSchemaIds
  - Picturepark.SDK.V1.Contract.Schema.Level
  - Picturepark.SDK.V1.Contract.Schema.Names
  - Picturepark.SDK.V1.Contract.Schema.ParentSchemaId
  - Picturepark.SDK.V1.Contract.Schema.System
  - Picturepark.SDK.V1.Contract.Schema.ToJson
  - Picturepark.SDK.V1.Contract.Schema.Types
  langs:
  - csharp
  - vb
  name: Schema
  nameWithType: Schema
  fullName: Picturepark.SDK.V1.Contract.Schema
  type: Class
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: Schema
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 37912
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: A schema
  example: []
  syntax:
    content: >-
      [GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]

      public class Schema
    content.vb: >-
      <GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")>

      Public Class Schema
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.CodeDom.Compiler.GeneratedCodeAttribute
    ctor: System.CodeDom.Compiler.GeneratedCodeAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: NJsonSchema
    - type: System.String
      value: 13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))
- uid: Picturepark.SDK.V1.Contract.Schema.Id
  commentId: P:Picturepark.SDK.V1.Contract.Schema.Id
  id: Id
  parent: Picturepark.SDK.V1.Contract.Schema
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Schema.Id
  fullName: Picturepark.SDK.V1.Contract.Schema.Id
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: Id
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 37918
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: The schema ID. It is unique throughout the whole customer setup.
  example: []
  syntax:
    content: >-
      [JsonProperty("id", Required = Required.Always)]

      [Required]

      public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("id", Required:=Required.Always)>

      <Required>

      Public Property Id As String
  overload: Picturepark.SDK.V1.Contract.Schema.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Picturepark.SDK.V1.Contract.Schema.ParentSchemaId
  commentId: P:Picturepark.SDK.V1.Contract.Schema.ParentSchemaId
  id: ParentSchemaId
  parent: Picturepark.SDK.V1.Contract.Schema
  langs:
  - csharp
  - vb
  name: ParentSchemaId
  nameWithType: Schema.ParentSchemaId
  fullName: Picturepark.SDK.V1.Contract.Schema.ParentSchemaId
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: ParentSchemaId
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 37925
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: The parent schema ID.
  example: []
  syntax:
    content: >-
      [JsonProperty("parentSchemaId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public string ParentSchemaId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("parentSchemaId", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property ParentSchemaId As String
  overload: Picturepark.SDK.V1.Contract.Schema.ParentSchemaId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: parentSchemaId
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.Schema.Types
  commentId: P:Picturepark.SDK.V1.Contract.Schema.Types
  id: Types
  parent: Picturepark.SDK.V1.Contract.Schema
  langs:
  - csharp
  - vb
  name: Types
  nameWithType: Schema.Types
  fullName: Picturepark.SDK.V1.Contract.Schema.Types
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: Types
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 37931
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: List of schema types. Currently only one schema type can be assigned to this list, and it cannot be modified once the schema is created.
  example: []
  syntax:
    content: >-
      [JsonProperty("types", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore, ItemConverterType = typeof(StringEnumConverter))]

      public ICollection<SchemaType> Types { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.SchemaType}
    content.vb: >-
      <JsonProperty("types", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore, ItemConverterType:=GetType(StringEnumConverter))>

      Public Property Types As ICollection(Of SchemaType)
  overload: Picturepark.SDK.V1.Contract.Schema.Types*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: types
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
    - name: ItemConverterType
      type: System.Type
      value: Newtonsoft.Json.Converters.StringEnumConverter
- uid: Picturepark.SDK.V1.Contract.Schema.Names
  commentId: P:Picturepark.SDK.V1.Contract.Schema.Names
  id: Names
  parent: Picturepark.SDK.V1.Contract.Schema
  langs:
  - csharp
  - vb
  name: Names
  nameWithType: Schema.Names
  fullName: Picturepark.SDK.V1.Contract.Schema.Names
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: Names
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 37937
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Language specific schema names.
  example: []
  syntax:
    content: >-
      [JsonProperty("names", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public TranslatedStringDictionary Names { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.Contract.TranslatedStringDictionary
    content.vb: >-
      <JsonProperty("names", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Names As TranslatedStringDictionary
  overload: Picturepark.SDK.V1.Contract.Schema.Names*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: names
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.Schema.Descriptions
  commentId: P:Picturepark.SDK.V1.Contract.Schema.Descriptions
  id: Descriptions
  parent: Picturepark.SDK.V1.Contract.Schema
  langs:
  - csharp
  - vb
  name: Descriptions
  nameWithType: Schema.Descriptions
  fullName: Picturepark.SDK.V1.Contract.Schema.Descriptions
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: Descriptions
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 37943
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Language specific schema descriptions.
  example: []
  syntax:
    content: >-
      [JsonProperty("descriptions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public TranslatedStringDictionary Descriptions { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.Contract.TranslatedStringDictionary
    content.vb: >-
      <JsonProperty("descriptions", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Descriptions As TranslatedStringDictionary
  overload: Picturepark.SDK.V1.Contract.Schema.Descriptions*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: descriptions
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.Schema.LayerSchemaIds
  commentId: P:Picturepark.SDK.V1.Contract.Schema.LayerSchemaIds
  id: LayerSchemaIds
  parent: Picturepark.SDK.V1.Contract.Schema
  langs:
  - csharp
  - vb
  name: LayerSchemaIds
  nameWithType: Schema.LayerSchemaIds
  fullName: Picturepark.SDK.V1.Contract.Schema.LayerSchemaIds
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: LayerSchemaIds
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 37949
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: An optional list of schemas' IDs with type layer. For a Content schema it stores the layers that can be assigned to a content.
  example: []
  syntax:
    content: >-
      [JsonProperty("layerSchemaIds", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public ICollection<string> LayerSchemaIds { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonProperty("layerSchemaIds", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property LayerSchemaIds As ICollection(Of String)
  overload: Picturepark.SDK.V1.Contract.Schema.LayerSchemaIds*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: layerSchemaIds
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.Schema.FieldCount
  commentId: P:Picturepark.SDK.V1.Contract.Schema.FieldCount
  id: FieldCount
  parent: Picturepark.SDK.V1.Contract.Schema
  langs:
  - csharp
  - vb
  name: FieldCount
  nameWithType: Schema.FieldCount
  fullName: Picturepark.SDK.V1.Contract.Schema.FieldCount
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: FieldCount
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 37955
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: The count of all fields.
  example: []
  syntax:
    content: >-
      [JsonProperty("fieldCount", Required = Required.Always)]

      public int FieldCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("fieldCount", Required:=Required.Always)>

      Public Property FieldCount As Integer
  overload: Picturepark.SDK.V1.Contract.Schema.FieldCount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: fieldCount
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
- uid: Picturepark.SDK.V1.Contract.Schema.ChildCount
  commentId: P:Picturepark.SDK.V1.Contract.Schema.ChildCount
  id: ChildCount
  parent: Picturepark.SDK.V1.Contract.Schema
  langs:
  - csharp
  - vb
  name: ChildCount
  nameWithType: Schema.ChildCount
  fullName: Picturepark.SDK.V1.Contract.Schema.ChildCount
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: ChildCount
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 37961
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: The count of all schema descendants with an immediate inheritance.
  example: []
  syntax:
    content: >-
      [JsonProperty("childCount", Required = Required.Always)]

      public int ChildCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("childCount", Required:=Required.Always)>

      Public Property ChildCount As Integer
  overload: Picturepark.SDK.V1.Contract.Schema.ChildCount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: childCount
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
- uid: Picturepark.SDK.V1.Contract.Schema.Level
  commentId: P:Picturepark.SDK.V1.Contract.Schema.Level
  id: Level
  parent: Picturepark.SDK.V1.Contract.Schema
  langs:
  - csharp
  - vb
  name: Level
  nameWithType: Schema.Level
  fullName: Picturepark.SDK.V1.Contract.Schema.Level
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: Level
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 37967
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: The descendant depth of the schema.
  example: []
  syntax:
    content: >-
      [JsonProperty("level", Required = Required.Always)]

      public int Level { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("level", Required:=Required.Always)>

      Public Property Level As Integer
  overload: Picturepark.SDK.V1.Contract.Schema.Level*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: level
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
- uid: Picturepark.SDK.V1.Contract.Schema.System
  commentId: P:Picturepark.SDK.V1.Contract.Schema.System
  id: System
  parent: Picturepark.SDK.V1.Contract.Schema
  langs:
  - csharp
  - vb
  name: System
  nameWithType: Schema.System
  fullName: Picturepark.SDK.V1.Contract.Schema.System
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: System
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 37973
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Identifies a system provided schema. A system schema cannot be created, updated or deleted.
  example: []
  syntax:
    content: >-
      [JsonProperty("system", Required = Required.Always)]

      public bool System { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("system", Required:=Required.Always)>

      Public Property System As Boolean
  overload: Picturepark.SDK.V1.Contract.Schema.System*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: system
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
- uid: Picturepark.SDK.V1.Contract.Schema.ToJson
  commentId: M:Picturepark.SDK.V1.Contract.Schema.ToJson
  id: ToJson
  parent: Picturepark.SDK.V1.Contract.Schema
  langs:
  - csharp
  - vb
  name: ToJson()
  nameWithType: Schema.ToJson()
  fullName: Picturepark.SDK.V1.Contract.Schema.ToJson()
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: ToJson
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 37976
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  syntax:
    content: public string ToJson()
    return:
      type: System.String
    content.vb: Public Function ToJson() As String
  overload: Picturepark.SDK.V1.Contract.Schema.ToJson*
- uid: Picturepark.SDK.V1.Contract.Schema.FromJson(System.String)
  commentId: M:Picturepark.SDK.V1.Contract.Schema.FromJson(System.String)
  id: FromJson(System.String)
  parent: Picturepark.SDK.V1.Contract.Schema
  langs:
  - csharp
  - vb
  name: FromJson(string)
  nameWithType: Schema.FromJson(string)
  fullName: Picturepark.SDK.V1.Contract.Schema.FromJson(string)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: FromJson
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 37982
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  syntax:
    content: public static Schema FromJson(string data)
    parameters:
    - id: data
      type: System.String
    return:
      type: Picturepark.SDK.V1.Contract.Schema
    content.vb: Public Shared Function FromJson(data As String) As Schema
  overload: Picturepark.SDK.V1.Contract.Schema.FromJson*
  nameWithType.vb: Schema.FromJson(String)
  fullName.vb: Picturepark.SDK.V1.Contract.Schema.FromJson(String)
  name.vb: FromJson(String)
references:
- uid: Picturepark.SDK.V1.Contract
  commentId: N:Picturepark.SDK.V1.Contract
  href: Picturepark.html
  name: Picturepark.SDK.V1.Contract
  nameWithType: Picturepark.SDK.V1.Contract
  fullName: Picturepark.SDK.V1.Contract
  spec.csharp:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.Contract
    name: Contract
    href: Picturepark.SDK.V1.Contract.html
  spec.vb:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.Contract
    name: Contract
    href: Picturepark.SDK.V1.Contract.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Picturepark.SDK.V1.Contract.Schema.Id*
  commentId: Overload:Picturepark.SDK.V1.Contract.Schema.Id
  href: Picturepark.SDK.V1.Contract.Schema.html#Picturepark_SDK_V1_Contract_Schema_Id
  name: Id
  nameWithType: Schema.Id
  fullName: Picturepark.SDK.V1.Contract.Schema.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Picturepark.SDK.V1.Contract.Schema.ParentSchemaId*
  commentId: Overload:Picturepark.SDK.V1.Contract.Schema.ParentSchemaId
  href: Picturepark.SDK.V1.Contract.Schema.html#Picturepark_SDK_V1_Contract_Schema_ParentSchemaId
  name: ParentSchemaId
  nameWithType: Schema.ParentSchemaId
  fullName: Picturepark.SDK.V1.Contract.Schema.ParentSchemaId
- uid: Picturepark.SDK.V1.Contract.Schema.Types*
  commentId: Overload:Picturepark.SDK.V1.Contract.Schema.Types
  href: Picturepark.SDK.V1.Contract.Schema.html#Picturepark_SDK_V1_Contract_Schema_Types
  name: Types
  nameWithType: Schema.Types
  fullName: Picturepark.SDK.V1.Contract.Schema.Types
- uid: System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.SchemaType}
  commentId: T:System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.SchemaType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<SchemaType>
  nameWithType: ICollection<SchemaType>
  fullName: System.Collections.Generic.ICollection<Picturepark.SDK.V1.Contract.SchemaType>
  nameWithType.vb: ICollection(Of SchemaType)
  fullName.vb: System.Collections.Generic.ICollection(Of Picturepark.SDK.V1.Contract.SchemaType)
  name.vb: ICollection(Of SchemaType)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Picturepark.SDK.V1.Contract.SchemaType
    name: SchemaType
    href: Picturepark.SDK.V1.Contract.SchemaType.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.SchemaType
    name: SchemaType
    href: Picturepark.SDK.V1.Contract.SchemaType.html
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Picturepark.SDK.V1.Contract.Schema.Names*
  commentId: Overload:Picturepark.SDK.V1.Contract.Schema.Names
  href: Picturepark.SDK.V1.Contract.Schema.html#Picturepark_SDK_V1_Contract_Schema_Names
  name: Names
  nameWithType: Schema.Names
  fullName: Picturepark.SDK.V1.Contract.Schema.Names
- uid: Picturepark.SDK.V1.Contract.TranslatedStringDictionary
  commentId: T:Picturepark.SDK.V1.Contract.TranslatedStringDictionary
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.TranslatedStringDictionary.html
  name: TranslatedStringDictionary
  nameWithType: TranslatedStringDictionary
  fullName: Picturepark.SDK.V1.Contract.TranslatedStringDictionary
- uid: Picturepark.SDK.V1.Contract.Schema.Descriptions*
  commentId: Overload:Picturepark.SDK.V1.Contract.Schema.Descriptions
  href: Picturepark.SDK.V1.Contract.Schema.html#Picturepark_SDK_V1_Contract_Schema_Descriptions
  name: Descriptions
  nameWithType: Schema.Descriptions
  fullName: Picturepark.SDK.V1.Contract.Schema.Descriptions
- uid: Picturepark.SDK.V1.Contract.Schema.LayerSchemaIds*
  commentId: Overload:Picturepark.SDK.V1.Contract.Schema.LayerSchemaIds
  href: Picturepark.SDK.V1.Contract.Schema.html#Picturepark_SDK_V1_Contract_Schema_LayerSchemaIds
  name: LayerSchemaIds
  nameWithType: Schema.LayerSchemaIds
  fullName: Picturepark.SDK.V1.Contract.Schema.LayerSchemaIds
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<string>
  nameWithType: ICollection<string>
  fullName: System.Collections.Generic.ICollection<string>
  nameWithType.vb: ICollection(Of String)
  fullName.vb: System.Collections.Generic.ICollection(Of String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Picturepark.SDK.V1.Contract.Schema.FieldCount*
  commentId: Overload:Picturepark.SDK.V1.Contract.Schema.FieldCount
  href: Picturepark.SDK.V1.Contract.Schema.html#Picturepark_SDK_V1_Contract_Schema_FieldCount
  name: FieldCount
  nameWithType: Schema.FieldCount
  fullName: Picturepark.SDK.V1.Contract.Schema.FieldCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Picturepark.SDK.V1.Contract.Schema.ChildCount*
  commentId: Overload:Picturepark.SDK.V1.Contract.Schema.ChildCount
  href: Picturepark.SDK.V1.Contract.Schema.html#Picturepark_SDK_V1_Contract_Schema_ChildCount
  name: ChildCount
  nameWithType: Schema.ChildCount
  fullName: Picturepark.SDK.V1.Contract.Schema.ChildCount
- uid: Picturepark.SDK.V1.Contract.Schema.Level*
  commentId: Overload:Picturepark.SDK.V1.Contract.Schema.Level
  href: Picturepark.SDK.V1.Contract.Schema.html#Picturepark_SDK_V1_Contract_Schema_Level
  name: Level
  nameWithType: Schema.Level
  fullName: Picturepark.SDK.V1.Contract.Schema.Level
- uid: Picturepark.SDK.V1.Contract.Schema.System*
  commentId: Overload:Picturepark.SDK.V1.Contract.Schema.System
  href: Picturepark.SDK.V1.Contract.Schema.html#Picturepark_SDK_V1_Contract_Schema_System
  name: System
  nameWithType: Schema.System
  fullName: Picturepark.SDK.V1.Contract.Schema.System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Picturepark.SDK.V1.Contract.Schema.ToJson*
  commentId: Overload:Picturepark.SDK.V1.Contract.Schema.ToJson
  href: Picturepark.SDK.V1.Contract.Schema.html#Picturepark_SDK_V1_Contract_Schema_ToJson
  name: ToJson
  nameWithType: Schema.ToJson
  fullName: Picturepark.SDK.V1.Contract.Schema.ToJson
- uid: Picturepark.SDK.V1.Contract.Schema.FromJson*
  commentId: Overload:Picturepark.SDK.V1.Contract.Schema.FromJson
  href: Picturepark.SDK.V1.Contract.Schema.html#Picturepark_SDK_V1_Contract_Schema_FromJson_System_String_
  name: FromJson
  nameWithType: Schema.FromJson
  fullName: Picturepark.SDK.V1.Contract.Schema.FromJson
- uid: Picturepark.SDK.V1.Contract.Schema
  commentId: T:Picturepark.SDK.V1.Contract.Schema
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.Schema.html
  name: Schema
  nameWithType: Schema
  fullName: Picturepark.SDK.V1.Contract.Schema
