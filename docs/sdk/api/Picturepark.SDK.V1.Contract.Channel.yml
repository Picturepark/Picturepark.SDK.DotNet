### YamlMime:ManagedReference
items:
- uid: Picturepark.SDK.V1.Contract.Channel
  commentId: T:Picturepark.SDK.V1.Contract.Channel
  id: Channel
  parent: Picturepark.SDK.V1.Contract
  children:
  - Picturepark.SDK.V1.Contract.Channel.Aggregations
  - Picturepark.SDK.V1.Contract.Channel.Audit
  - Picturepark.SDK.V1.Contract.Channel.ExtendedSimpleSearchFields
  - Picturepark.SDK.V1.Contract.Channel.Filter
  - Picturepark.SDK.V1.Contract.Channel.FromJson(System.String)
  - Picturepark.SDK.V1.Contract.Channel.GrantedUserRoleIds
  - Picturepark.SDK.V1.Contract.Channel.Id
  - Picturepark.SDK.V1.Contract.Channel.MissingResultsDisplayPatterns
  - Picturepark.SDK.V1.Contract.Channel.Names
  - Picturepark.SDK.V1.Contract.Channel.SearchIndexId
  - Picturepark.SDK.V1.Contract.Channel.Sort
  - Picturepark.SDK.V1.Contract.Channel.SortFields
  - Picturepark.SDK.V1.Contract.Channel.SortOrder
  - Picturepark.SDK.V1.Contract.Channel.ToJson
  - Picturepark.SDK.V1.Contract.Channel.ViewForAll
  langs:
  - csharp
  - vb
  name: Channel
  nameWithType: Channel
  fullName: Picturepark.SDK.V1.Contract.Channel
  type: Class
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Channel
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 21726
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  syntax:
    content: >-
      [GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]

      public class Channel
    content.vb: >-
      <GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")>

      Public Class Channel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.CodeDom.Compiler.GeneratedCodeAttribute
    ctor: System.CodeDom.Compiler.GeneratedCodeAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: NJsonSchema
    - type: System.String
      value: 13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))
- uid: Picturepark.SDK.V1.Contract.Channel.Id
  commentId: P:Picturepark.SDK.V1.Contract.Channel.Id
  id: Id
  parent: Picturepark.SDK.V1.Contract.Channel
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Channel.Id
  fullName: Picturepark.SDK.V1.Contract.Channel.Id
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Id
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 21732
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: ID of channel.
  example: []
  syntax:
    content: >-
      [JsonProperty("id", Required = Required.Always)]

      [Required]

      public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("id", Required:=Required.Always)>

      <Required>

      Public Property Id As String
  overload: Picturepark.SDK.V1.Contract.Channel.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Picturepark.SDK.V1.Contract.Channel.SortOrder
  commentId: P:Picturepark.SDK.V1.Contract.Channel.SortOrder
  id: SortOrder
  parent: Picturepark.SDK.V1.Contract.Channel
  langs:
  - csharp
  - vb
  name: SortOrder
  nameWithType: Channel.SortOrder
  fullName: Picturepark.SDK.V1.Contract.Channel.SortOrder
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: SortOrder
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 21739
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Numeric sort order of the channel. Channels are returned ordered by this field.
  example: []
  syntax:
    content: >-
      [JsonProperty("sortOrder", Required = Required.Always)]

      public int SortOrder { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("sortOrder", Required:=Required.Always)>

      Public Property SortOrder As Integer
  overload: Picturepark.SDK.V1.Contract.Channel.SortOrder*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: sortOrder
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
- uid: Picturepark.SDK.V1.Contract.Channel.SearchIndexId
  commentId: P:Picturepark.SDK.V1.Contract.Channel.SearchIndexId
  id: SearchIndexId
  parent: Picturepark.SDK.V1.Contract.Channel
  langs:
  - csharp
  - vb
  name: SearchIndexId
  nameWithType: Channel.SearchIndexId
  fullName: Picturepark.SDK.V1.Contract.Channel.SearchIndexId
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: SearchIndexId
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 21745
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: The search index ID where the channel requests the content from. Only RootContentSearchIndex is supported.
  example: []
  syntax:
    content: >-
      [JsonProperty("searchIndexId", Required = Required.Always)]

      [Required]

      public string SearchIndexId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("searchIndexId", Required:=Required.Always)>

      <Required>

      Public Property SearchIndexId As String
  overload: Picturepark.SDK.V1.Contract.Channel.SearchIndexId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: searchIndexId
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Picturepark.SDK.V1.Contract.Channel.Filter
  commentId: P:Picturepark.SDK.V1.Contract.Channel.Filter
  id: Filter
  parent: Picturepark.SDK.V1.Contract.Channel
  langs:
  - csharp
  - vb
  name: Filter
  nameWithType: Channel.Filter
  fullName: Picturepark.SDK.V1.Contract.Channel.Filter
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Filter
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 21752
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: An optional search filter. Limits the content document result set on each search and aggregation request.
  example: []
  syntax:
    content: >-
      [JsonProperty("filter", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public FilterBase Filter { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.Contract.FilterBase
    content.vb: >-
      <JsonProperty("filter", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Filter As FilterBase
  overload: Picturepark.SDK.V1.Contract.Channel.Filter*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: filter
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.Channel.Names
  commentId: P:Picturepark.SDK.V1.Contract.Channel.Names
  id: Names
  parent: Picturepark.SDK.V1.Contract.Channel
  langs:
  - csharp
  - vb
  name: Names
  nameWithType: Channel.Names
  fullName: Picturepark.SDK.V1.Contract.Channel.Names
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Names
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 21758
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Language specific names.
  example: []
  syntax:
    content: >-
      [JsonProperty("names", Required = Required.Always)]

      [Required]

      public TranslatedStringDictionary Names { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.Contract.TranslatedStringDictionary
    content.vb: >-
      <JsonProperty("names", Required:=Required.Always)>

      <Required>

      Public Property Names As TranslatedStringDictionary
  overload: Picturepark.SDK.V1.Contract.Channel.Names*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: names
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Picturepark.SDK.V1.Contract.Channel.Sort
  commentId: P:Picturepark.SDK.V1.Contract.Channel.Sort
  id: Sort
  parent: Picturepark.SDK.V1.Contract.Channel
  langs:
  - csharp
  - vb
  name: Sort
  nameWithType: Channel.Sort
  fullName: Picturepark.SDK.V1.Contract.Channel.Sort
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Sort
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 21765
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Default sort order specified for the channel to sort the results of a content search.
  example: []
  syntax:
    content: >-
      [JsonProperty("sort", Required = Required.Always)]

      [Required]

      public ICollection<SortInfo> Sort { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.SortInfo}
    content.vb: >-
      <JsonProperty("sort", Required:=Required.Always)>

      <Required>

      Public Property Sort As ICollection(Of SortInfo)
  overload: Picturepark.SDK.V1.Contract.Channel.Sort*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: sort
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Picturepark.SDK.V1.Contract.Channel.SortFields
  commentId: P:Picturepark.SDK.V1.Contract.Channel.SortFields
  id: SortFields
  parent: Picturepark.SDK.V1.Contract.Channel
  langs:
  - csharp
  - vb
  name: SortFields
  nameWithType: Channel.SortFields
  fullName: Picturepark.SDK.V1.Contract.Channel.SortFields
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: SortFields
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 21772
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Fields to be used for sorting in content browser when displaying the channel. The information is only set and consumed by the client, not by the server.
  example: []
  syntax:
    content: >-
      [JsonProperty("sortFields", Required = Required.Always)]

      [Required]

      public ICollection<SortField> SortFields { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.SortField}
    content.vb: >-
      <JsonProperty("sortFields", Required:=Required.Always)>

      <Required>

      Public Property SortFields As ICollection(Of SortField)
  overload: Picturepark.SDK.V1.Contract.Channel.SortFields*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: sortFields
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Picturepark.SDK.V1.Contract.Channel.Aggregations
  commentId: P:Picturepark.SDK.V1.Contract.Channel.Aggregations
  id: Aggregations
  parent: Picturepark.SDK.V1.Contract.Channel
  langs:
  - csharp
  - vb
  name: Aggregations
  nameWithType: Channel.Aggregations
  fullName: Picturepark.SDK.V1.Contract.Channel.Aggregations
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Aggregations
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 21779
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: An optional list of aggregators. These aggregations are added by default on each aggregation requests.
  example: []
  syntax:
    content: >-
      [JsonProperty("aggregations", Required = Required.Always)]

      [Required]

      public ICollection<AggregatorBase> Aggregations { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.AggregatorBase}
    content.vb: >-
      <JsonProperty("aggregations", Required:=Required.Always)>

      <Required>

      Public Property Aggregations As ICollection(Of AggregatorBase)
  overload: Picturepark.SDK.V1.Contract.Channel.Aggregations*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: aggregations
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Picturepark.SDK.V1.Contract.Channel.ExtendedSimpleSearchFields
  commentId: P:Picturepark.SDK.V1.Contract.Channel.ExtendedSimpleSearchFields
  id: ExtendedSimpleSearchFields
  parent: Picturepark.SDK.V1.Contract.Channel
  langs:
  - csharp
  - vb
  name: ExtendedSimpleSearchFields
  nameWithType: Channel.ExtendedSimpleSearchFields
  fullName: Picturepark.SDK.V1.Contract.Channel.ExtendedSimpleSearchFields
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: ExtendedSimpleSearchFields
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 21786
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: An Optional list of fields. These fields extend the list of simple search fields outside the bounds of any schema field configuration.
  example: []
  syntax:
    content: >-
      [JsonProperty("extendedSimpleSearchFields", Required = Required.Always)]

      [Required]

      public ICollection<string> ExtendedSimpleSearchFields { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonProperty("extendedSimpleSearchFields", Required:=Required.Always)>

      <Required>

      Public Property ExtendedSimpleSearchFields As ICollection(Of String)
  overload: Picturepark.SDK.V1.Contract.Channel.ExtendedSimpleSearchFields*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: extendedSimpleSearchFields
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Picturepark.SDK.V1.Contract.Channel.GrantedUserRoleIds
  commentId: P:Picturepark.SDK.V1.Contract.Channel.GrantedUserRoleIds
  id: GrantedUserRoleIds
  parent: Picturepark.SDK.V1.Contract.Channel
  langs:
  - csharp
  - vb
  name: GrantedUserRoleIds
  nameWithType: Channel.GrantedUserRoleIds
  fullName: Picturepark.SDK.V1.Contract.Channel.GrantedUserRoleIds
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: GrantedUserRoleIds
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 21793
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: User roles granted access to the channel.
  example: []
  syntax:
    content: >-
      [JsonProperty("grantedUserRoleIds", Required = Required.Always)]

      [Required]

      public ICollection<string> GrantedUserRoleIds { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonProperty("grantedUserRoleIds", Required:=Required.Always)>

      <Required>

      Public Property GrantedUserRoleIds As ICollection(Of String)
  overload: Picturepark.SDK.V1.Contract.Channel.GrantedUserRoleIds*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: grantedUserRoleIds
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Picturepark.SDK.V1.Contract.Channel.MissingResultsDisplayPatterns
  commentId: P:Picturepark.SDK.V1.Contract.Channel.MissingResultsDisplayPatterns
  id: MissingResultsDisplayPatterns
  parent: Picturepark.SDK.V1.Contract.Channel
  langs:
  - csharp
  - vb
  name: MissingResultsDisplayPatterns
  nameWithType: Channel.MissingResultsDisplayPatterns
  fullName: Picturepark.SDK.V1.Contract.Channel.MissingResultsDisplayPatterns
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: MissingResultsDisplayPatterns
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 21800
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Display pattern to use for rendering details when 0 results are returned
  example: []
  syntax:
    content: >-
      [JsonProperty("missingResultsDisplayPatterns", Required = Required.Always)]

      [Required]

      public TranslatedStringDictionary MissingResultsDisplayPatterns { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.Contract.TranslatedStringDictionary
    content.vb: >-
      <JsonProperty("missingResultsDisplayPatterns", Required:=Required.Always)>

      <Required>

      Public Property MissingResultsDisplayPatterns As TranslatedStringDictionary
  overload: Picturepark.SDK.V1.Contract.Channel.MissingResultsDisplayPatterns*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: missingResultsDisplayPatterns
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Picturepark.SDK.V1.Contract.Channel.Audit
  commentId: P:Picturepark.SDK.V1.Contract.Channel.Audit
  id: Audit
  parent: Picturepark.SDK.V1.Contract.Channel
  langs:
  - csharp
  - vb
  name: Audit
  nameWithType: Channel.Audit
  fullName: Picturepark.SDK.V1.Contract.Channel.Audit
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Audit
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 21807
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Audit information.
  example: []
  syntax:
    content: >-
      [JsonProperty("audit", Required = Required.Always)]

      [Required]

      public UserAudit Audit { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.Contract.UserAudit
    content.vb: >-
      <JsonProperty("audit", Required:=Required.Always)>

      <Required>

      Public Property Audit As UserAudit
  overload: Picturepark.SDK.V1.Contract.Channel.Audit*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: audit
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Picturepark.SDK.V1.Contract.Channel.ViewForAll
  commentId: P:Picturepark.SDK.V1.Contract.Channel.ViewForAll
  id: ViewForAll
  parent: Picturepark.SDK.V1.Contract.Channel
  langs:
  - csharp
  - vb
  name: ViewForAll
  nameWithType: Channel.ViewForAll
  fullName: Picturepark.SDK.V1.Contract.Channel.ViewForAll
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: ViewForAll
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 21814
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Grants rights to all the users to view the channel.
  example: []
  syntax:
    content: >-
      [JsonProperty("viewForAll", Required = Required.Always)]

      public bool ViewForAll { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("viewForAll", Required:=Required.Always)>

      Public Property ViewForAll As Boolean
  overload: Picturepark.SDK.V1.Contract.Channel.ViewForAll*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: viewForAll
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
- uid: Picturepark.SDK.V1.Contract.Channel.ToJson
  commentId: M:Picturepark.SDK.V1.Contract.Channel.ToJson
  id: ToJson
  parent: Picturepark.SDK.V1.Contract.Channel
  langs:
  - csharp
  - vb
  name: ToJson()
  nameWithType: Channel.ToJson()
  fullName: Picturepark.SDK.V1.Contract.Channel.ToJson()
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: ToJson
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 21817
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  syntax:
    content: public string ToJson()
    return:
      type: System.String
    content.vb: Public Function ToJson() As String
  overload: Picturepark.SDK.V1.Contract.Channel.ToJson*
- uid: Picturepark.SDK.V1.Contract.Channel.FromJson(System.String)
  commentId: M:Picturepark.SDK.V1.Contract.Channel.FromJson(System.String)
  id: FromJson(System.String)
  parent: Picturepark.SDK.V1.Contract.Channel
  langs:
  - csharp
  - vb
  name: FromJson(string)
  nameWithType: Channel.FromJson(string)
  fullName: Picturepark.SDK.V1.Contract.Channel.FromJson(string)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.15.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: FromJson
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 21823
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  syntax:
    content: public static Channel FromJson(string data)
    parameters:
    - id: data
      type: System.String
    return:
      type: Picturepark.SDK.V1.Contract.Channel
    content.vb: Public Shared Function FromJson(data As String) As Channel
  overload: Picturepark.SDK.V1.Contract.Channel.FromJson*
  nameWithType.vb: Channel.FromJson(String)
  fullName.vb: Picturepark.SDK.V1.Contract.Channel.FromJson(String)
  name.vb: FromJson(String)
references:
- uid: Picturepark.SDK.V1.Contract
  commentId: N:Picturepark.SDK.V1.Contract
  href: Picturepark.html
  name: Picturepark.SDK.V1.Contract
  nameWithType: Picturepark.SDK.V1.Contract
  fullName: Picturepark.SDK.V1.Contract
  spec.csharp:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.Contract
    name: Contract
    href: Picturepark.SDK.V1.Contract.html
  spec.vb:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.Contract
    name: Contract
    href: Picturepark.SDK.V1.Contract.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Picturepark.SDK.V1.Contract.Channel.Id*
  commentId: Overload:Picturepark.SDK.V1.Contract.Channel.Id
  href: Picturepark.SDK.V1.Contract.Channel.html#Picturepark_SDK_V1_Contract_Channel_Id
  name: Id
  nameWithType: Channel.Id
  fullName: Picturepark.SDK.V1.Contract.Channel.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Picturepark.SDK.V1.Contract.Channel.SortOrder*
  commentId: Overload:Picturepark.SDK.V1.Contract.Channel.SortOrder
  href: Picturepark.SDK.V1.Contract.Channel.html#Picturepark_SDK_V1_Contract_Channel_SortOrder
  name: SortOrder
  nameWithType: Channel.SortOrder
  fullName: Picturepark.SDK.V1.Contract.Channel.SortOrder
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Picturepark.SDK.V1.Contract.Channel.SearchIndexId*
  commentId: Overload:Picturepark.SDK.V1.Contract.Channel.SearchIndexId
  href: Picturepark.SDK.V1.Contract.Channel.html#Picturepark_SDK_V1_Contract_Channel_SearchIndexId
  name: SearchIndexId
  nameWithType: Channel.SearchIndexId
  fullName: Picturepark.SDK.V1.Contract.Channel.SearchIndexId
- uid: Picturepark.SDK.V1.Contract.Channel.Filter*
  commentId: Overload:Picturepark.SDK.V1.Contract.Channel.Filter
  href: Picturepark.SDK.V1.Contract.Channel.html#Picturepark_SDK_V1_Contract_Channel_Filter
  name: Filter
  nameWithType: Channel.Filter
  fullName: Picturepark.SDK.V1.Contract.Channel.Filter
- uid: Picturepark.SDK.V1.Contract.FilterBase
  commentId: T:Picturepark.SDK.V1.Contract.FilterBase
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.FilterBase.html
  name: FilterBase
  nameWithType: FilterBase
  fullName: Picturepark.SDK.V1.Contract.FilterBase
- uid: Picturepark.SDK.V1.Contract.Channel.Names*
  commentId: Overload:Picturepark.SDK.V1.Contract.Channel.Names
  href: Picturepark.SDK.V1.Contract.Channel.html#Picturepark_SDK_V1_Contract_Channel_Names
  name: Names
  nameWithType: Channel.Names
  fullName: Picturepark.SDK.V1.Contract.Channel.Names
- uid: Picturepark.SDK.V1.Contract.TranslatedStringDictionary
  commentId: T:Picturepark.SDK.V1.Contract.TranslatedStringDictionary
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.TranslatedStringDictionary.html
  name: TranslatedStringDictionary
  nameWithType: TranslatedStringDictionary
  fullName: Picturepark.SDK.V1.Contract.TranslatedStringDictionary
- uid: Picturepark.SDK.V1.Contract.Channel.Sort*
  commentId: Overload:Picturepark.SDK.V1.Contract.Channel.Sort
  href: Picturepark.SDK.V1.Contract.Channel.html#Picturepark_SDK_V1_Contract_Channel_Sort
  name: Sort
  nameWithType: Channel.Sort
  fullName: Picturepark.SDK.V1.Contract.Channel.Sort
- uid: System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.SortInfo}
  commentId: T:System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.SortInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<SortInfo>
  nameWithType: ICollection<SortInfo>
  fullName: System.Collections.Generic.ICollection<Picturepark.SDK.V1.Contract.SortInfo>
  nameWithType.vb: ICollection(Of SortInfo)
  fullName.vb: System.Collections.Generic.ICollection(Of Picturepark.SDK.V1.Contract.SortInfo)
  name.vb: ICollection(Of SortInfo)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Picturepark.SDK.V1.Contract.SortInfo
    name: SortInfo
    href: Picturepark.SDK.V1.Contract.SortInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.SortInfo
    name: SortInfo
    href: Picturepark.SDK.V1.Contract.SortInfo.html
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Picturepark.SDK.V1.Contract.Channel.SortFields*
  commentId: Overload:Picturepark.SDK.V1.Contract.Channel.SortFields
  href: Picturepark.SDK.V1.Contract.Channel.html#Picturepark_SDK_V1_Contract_Channel_SortFields
  name: SortFields
  nameWithType: Channel.SortFields
  fullName: Picturepark.SDK.V1.Contract.Channel.SortFields
- uid: System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.SortField}
  commentId: T:System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.SortField}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<SortField>
  nameWithType: ICollection<SortField>
  fullName: System.Collections.Generic.ICollection<Picturepark.SDK.V1.Contract.SortField>
  nameWithType.vb: ICollection(Of SortField)
  fullName.vb: System.Collections.Generic.ICollection(Of Picturepark.SDK.V1.Contract.SortField)
  name.vb: ICollection(Of SortField)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Picturepark.SDK.V1.Contract.SortField
    name: SortField
    href: Picturepark.SDK.V1.Contract.SortField.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.SortField
    name: SortField
    href: Picturepark.SDK.V1.Contract.SortField.html
  - name: )
- uid: Picturepark.SDK.V1.Contract.Channel.Aggregations*
  commentId: Overload:Picturepark.SDK.V1.Contract.Channel.Aggregations
  href: Picturepark.SDK.V1.Contract.Channel.html#Picturepark_SDK_V1_Contract_Channel_Aggregations
  name: Aggregations
  nameWithType: Channel.Aggregations
  fullName: Picturepark.SDK.V1.Contract.Channel.Aggregations
- uid: System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.AggregatorBase}
  commentId: T:System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.AggregatorBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<AggregatorBase>
  nameWithType: ICollection<AggregatorBase>
  fullName: System.Collections.Generic.ICollection<Picturepark.SDK.V1.Contract.AggregatorBase>
  nameWithType.vb: ICollection(Of AggregatorBase)
  fullName.vb: System.Collections.Generic.ICollection(Of Picturepark.SDK.V1.Contract.AggregatorBase)
  name.vb: ICollection(Of AggregatorBase)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Picturepark.SDK.V1.Contract.AggregatorBase
    name: AggregatorBase
    href: Picturepark.SDK.V1.Contract.AggregatorBase.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.AggregatorBase
    name: AggregatorBase
    href: Picturepark.SDK.V1.Contract.AggregatorBase.html
  - name: )
- uid: Picturepark.SDK.V1.Contract.Channel.ExtendedSimpleSearchFields*
  commentId: Overload:Picturepark.SDK.V1.Contract.Channel.ExtendedSimpleSearchFields
  href: Picturepark.SDK.V1.Contract.Channel.html#Picturepark_SDK_V1_Contract_Channel_ExtendedSimpleSearchFields
  name: ExtendedSimpleSearchFields
  nameWithType: Channel.ExtendedSimpleSearchFields
  fullName: Picturepark.SDK.V1.Contract.Channel.ExtendedSimpleSearchFields
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<string>
  nameWithType: ICollection<string>
  fullName: System.Collections.Generic.ICollection<string>
  nameWithType.vb: ICollection(Of String)
  fullName.vb: System.Collections.Generic.ICollection(Of String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Picturepark.SDK.V1.Contract.Channel.GrantedUserRoleIds*
  commentId: Overload:Picturepark.SDK.V1.Contract.Channel.GrantedUserRoleIds
  href: Picturepark.SDK.V1.Contract.Channel.html#Picturepark_SDK_V1_Contract_Channel_GrantedUserRoleIds
  name: GrantedUserRoleIds
  nameWithType: Channel.GrantedUserRoleIds
  fullName: Picturepark.SDK.V1.Contract.Channel.GrantedUserRoleIds
- uid: Picturepark.SDK.V1.Contract.Channel.MissingResultsDisplayPatterns*
  commentId: Overload:Picturepark.SDK.V1.Contract.Channel.MissingResultsDisplayPatterns
  href: Picturepark.SDK.V1.Contract.Channel.html#Picturepark_SDK_V1_Contract_Channel_MissingResultsDisplayPatterns
  name: MissingResultsDisplayPatterns
  nameWithType: Channel.MissingResultsDisplayPatterns
  fullName: Picturepark.SDK.V1.Contract.Channel.MissingResultsDisplayPatterns
- uid: Picturepark.SDK.V1.Contract.Channel.Audit*
  commentId: Overload:Picturepark.SDK.V1.Contract.Channel.Audit
  href: Picturepark.SDK.V1.Contract.Channel.html#Picturepark_SDK_V1_Contract_Channel_Audit
  name: Audit
  nameWithType: Channel.Audit
  fullName: Picturepark.SDK.V1.Contract.Channel.Audit
- uid: Picturepark.SDK.V1.Contract.UserAudit
  commentId: T:Picturepark.SDK.V1.Contract.UserAudit
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.UserAudit.html
  name: UserAudit
  nameWithType: UserAudit
  fullName: Picturepark.SDK.V1.Contract.UserAudit
- uid: Picturepark.SDK.V1.Contract.Channel.ViewForAll*
  commentId: Overload:Picturepark.SDK.V1.Contract.Channel.ViewForAll
  href: Picturepark.SDK.V1.Contract.Channel.html#Picturepark_SDK_V1_Contract_Channel_ViewForAll
  name: ViewForAll
  nameWithType: Channel.ViewForAll
  fullName: Picturepark.SDK.V1.Contract.Channel.ViewForAll
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Picturepark.SDK.V1.Contract.Channel.ToJson*
  commentId: Overload:Picturepark.SDK.V1.Contract.Channel.ToJson
  href: Picturepark.SDK.V1.Contract.Channel.html#Picturepark_SDK_V1_Contract_Channel_ToJson
  name: ToJson
  nameWithType: Channel.ToJson
  fullName: Picturepark.SDK.V1.Contract.Channel.ToJson
- uid: Picturepark.SDK.V1.Contract.Channel.FromJson*
  commentId: Overload:Picturepark.SDK.V1.Contract.Channel.FromJson
  href: Picturepark.SDK.V1.Contract.Channel.html#Picturepark_SDK_V1_Contract_Channel_FromJson_System_String_
  name: FromJson
  nameWithType: Channel.FromJson
  fullName: Picturepark.SDK.V1.Contract.Channel.FromJson
- uid: Picturepark.SDK.V1.Contract.Channel
  commentId: T:Picturepark.SDK.V1.Contract.Channel
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.Channel.html
  name: Channel
  nameWithType: Channel
  fullName: Picturepark.SDK.V1.Contract.Channel
