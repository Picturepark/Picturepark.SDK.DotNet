### YamlMime:ManagedReference
items:
- uid: Picturepark.SDK.V1.Contract.ContentFilterRequest
  commentId: T:Picturepark.SDK.V1.Contract.ContentFilterRequest
  id: ContentFilterRequest
  parent: Picturepark.SDK.V1.Contract
  children:
  - Picturepark.SDK.V1.Contract.ContentFilterRequest.BrokenDependenciesFilter
  - Picturepark.SDK.V1.Contract.ContentFilterRequest.ChannelId
  - Picturepark.SDK.V1.Contract.ContentFilterRequest.CollectionId
  - Picturepark.SDK.V1.Contract.ContentFilterRequest.Filter
  - Picturepark.SDK.V1.Contract.ContentFilterRequest.FromJson(System.String)
  - Picturepark.SDK.V1.Contract.ContentFilterRequest.LifeCycleFilter
  - Picturepark.SDK.V1.Contract.ContentFilterRequest.RightsFilter
  - Picturepark.SDK.V1.Contract.ContentFilterRequest.SearchLanguages
  - Picturepark.SDK.V1.Contract.ContentFilterRequest.SearchString
  - Picturepark.SDK.V1.Contract.ContentFilterRequest.SearchType
  - Picturepark.SDK.V1.Contract.ContentFilterRequest.ToJson
  langs:
  - csharp
  - vb
  name: ContentFilterRequest
  nameWithType: ContentFilterRequest
  fullName: Picturepark.SDK.V1.Contract.ContentFilterRequest
  type: Class
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: ContentFilterRequest
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 25364
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  syntax:
    content: >-
      [GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]

      public class ContentFilterRequest
    content.vb: >-
      <GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")>

      Public Class ContentFilterRequest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.CodeDom.Compiler.GeneratedCodeAttribute
    ctor: System.CodeDom.Compiler.GeneratedCodeAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: NJsonSchema
    - type: System.String
      value: 13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))
- uid: Picturepark.SDK.V1.Contract.ContentFilterRequest.ChannelId
  commentId: P:Picturepark.SDK.V1.Contract.ContentFilterRequest.ChannelId
  id: ChannelId
  parent: Picturepark.SDK.V1.Contract.ContentFilterRequest
  langs:
  - csharp
  - vb
  name: ChannelId
  nameWithType: ContentFilterRequest.ChannelId
  fullName: Picturepark.SDK.V1.Contract.ContentFilterRequest.ChannelId
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: ChannelId
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 25370
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Limits the simple search fields to the fields available in the specified channel.
  example: []
  syntax:
    content: >-
      [JsonProperty("channelId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public string ChannelId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("channelId", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property ChannelId As String
  overload: Picturepark.SDK.V1.Contract.ContentFilterRequest.ChannelId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: channelId
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.ContentFilterRequest.SearchLanguages
  commentId: P:Picturepark.SDK.V1.Contract.ContentFilterRequest.SearchLanguages
  id: SearchLanguages
  parent: Picturepark.SDK.V1.Contract.ContentFilterRequest
  langs:
  - csharp
  - vb
  name: SearchLanguages
  nameWithType: ContentFilterRequest.SearchLanguages
  fullName: Picturepark.SDK.V1.Contract.ContentFilterRequest.SearchLanguages
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: SearchLanguages
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 25376
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Only searches the specified language values. Defaults to all metadata languages of the language configuration.
  example: []
  syntax:
    content: >-
      [JsonProperty("searchLanguages", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public ICollection<string> SearchLanguages { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonProperty("searchLanguages", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property SearchLanguages As ICollection(Of String)
  overload: Picturepark.SDK.V1.Contract.ContentFilterRequest.SearchLanguages*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: searchLanguages
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.ContentFilterRequest.SearchString
  commentId: P:Picturepark.SDK.V1.Contract.ContentFilterRequest.SearchString
  id: SearchString
  parent: Picturepark.SDK.V1.Contract.ContentFilterRequest
  langs:
  - csharp
  - vb
  name: SearchString
  nameWithType: ContentFilterRequest.SearchString
  fullName: Picturepark.SDK.V1.Contract.ContentFilterRequest.SearchString
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: SearchString
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 25382
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Limits the search by using a query string filter. The Lucene query string syntax is supported.
  example: []
  syntax:
    content: >-
      [JsonProperty("searchString", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public string SearchString { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("searchString", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property SearchString As String
  overload: Picturepark.SDK.V1.Contract.ContentFilterRequest.SearchString*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: searchString
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.ContentFilterRequest.SearchType
  commentId: P:Picturepark.SDK.V1.Contract.ContentFilterRequest.SearchType
  id: SearchType
  parent: Picturepark.SDK.V1.Contract.ContentFilterRequest
  langs:
  - csharp
  - vb
  name: SearchType
  nameWithType: ContentFilterRequest.SearchType
  fullName: Picturepark.SDK.V1.Contract.ContentFilterRequest.SearchType
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: SearchType
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 25388
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: 'Type of search to be performed: against metadata, extracted fulltext from documents or both. Default to Metadata.'
  example: []
  syntax:
    content: >-
      [JsonProperty("searchType", Required = Required.Always)]

      [Required(AllowEmptyStrings = true)]

      [JsonConverter(typeof(StringEnumConverter))]

      public ContentSearchType SearchType { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.Contract.ContentSearchType
    content.vb: >-
      <JsonProperty("searchType", Required:=Required.Always)>

      <Required(AllowEmptyStrings:=True)>

      <JsonConverter(GetType(StringEnumConverter))>

      Public Property SearchType As ContentSearchType
  overload: Picturepark.SDK.V1.Contract.ContentFilterRequest.SearchType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: searchType
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: AllowEmptyStrings
      type: System.Boolean
      value: true
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Newtonsoft.Json.Converters.StringEnumConverter
- uid: Picturepark.SDK.V1.Contract.ContentFilterRequest.CollectionId
  commentId: P:Picturepark.SDK.V1.Contract.ContentFilterRequest.CollectionId
  id: CollectionId
  parent: Picturepark.SDK.V1.Contract.ContentFilterRequest
  langs:
  - csharp
  - vb
  name: CollectionId
  nameWithType: ContentFilterRequest.CollectionId
  fullName: Picturepark.SDK.V1.Contract.ContentFilterRequest.CollectionId
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: CollectionId
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 25396
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: The collection id.
  example: []
  syntax:
    content: >-
      [JsonProperty("collectionId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public string CollectionId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("collectionId", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property CollectionId As String
  overload: Picturepark.SDK.V1.Contract.ContentFilterRequest.CollectionId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: collectionId
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.ContentFilterRequest.Filter
  commentId: P:Picturepark.SDK.V1.Contract.ContentFilterRequest.Filter
  id: Filter
  parent: Picturepark.SDK.V1.Contract.ContentFilterRequest
  langs:
  - csharp
  - vb
  name: Filter
  nameWithType: ContentFilterRequest.Filter
  fullName: Picturepark.SDK.V1.Contract.ContentFilterRequest.Filter
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: Filter
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 25402
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: An optional search filter. Limits the content document result set.
  example: []
  syntax:
    content: >-
      [JsonProperty("filter", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public FilterBase Filter { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.Contract.FilterBase
    content.vb: >-
      <JsonProperty("filter", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Filter As FilterBase
  overload: Picturepark.SDK.V1.Contract.ContentFilterRequest.Filter*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: filter
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.Contract.ContentFilterRequest.LifeCycleFilter
  commentId: P:Picturepark.SDK.V1.Contract.ContentFilterRequest.LifeCycleFilter
  id: LifeCycleFilter
  parent: Picturepark.SDK.V1.Contract.ContentFilterRequest
  langs:
  - csharp
  - vb
  name: LifeCycleFilter
  nameWithType: ContentFilterRequest.LifeCycleFilter
  fullName: Picturepark.SDK.V1.Contract.ContentFilterRequest.LifeCycleFilter
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: LifeCycleFilter
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 25408
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Limits the content document result set to that life cycle state. Defaults to ActiveOnly.
  example: []
  syntax:
    content: >-
      [JsonProperty("lifeCycleFilter", Required = Required.Always)]

      [Required(AllowEmptyStrings = true)]

      [JsonConverter(typeof(StringEnumConverter))]

      public LifeCycleFilter LifeCycleFilter { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.Contract.LifeCycleFilter
    content.vb: >-
      <JsonProperty("lifeCycleFilter", Required:=Required.Always)>

      <Required(AllowEmptyStrings:=True)>

      <JsonConverter(GetType(StringEnumConverter))>

      Public Property LifeCycleFilter As LifeCycleFilter
  overload: Picturepark.SDK.V1.Contract.ContentFilterRequest.LifeCycleFilter*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: lifeCycleFilter
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: AllowEmptyStrings
      type: System.Boolean
      value: true
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Newtonsoft.Json.Converters.StringEnumConverter
- uid: Picturepark.SDK.V1.Contract.ContentFilterRequest.BrokenDependenciesFilter
  commentId: P:Picturepark.SDK.V1.Contract.ContentFilterRequest.BrokenDependenciesFilter
  id: BrokenDependenciesFilter
  parent: Picturepark.SDK.V1.Contract.ContentFilterRequest
  langs:
  - csharp
  - vb
  name: BrokenDependenciesFilter
  nameWithType: ContentFilterRequest.BrokenDependenciesFilter
  fullName: Picturepark.SDK.V1.Contract.ContentFilterRequest.BrokenDependenciesFilter
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: BrokenDependenciesFilter
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 25416
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Filter the content document result set to those that have or not have broken references
  example: []
  syntax:
    content: >-
      [JsonProperty("brokenDependenciesFilter", Required = Required.Always)]

      [Required(AllowEmptyStrings = true)]

      [JsonConverter(typeof(StringEnumConverter))]

      public BrokenDependenciesFilter BrokenDependenciesFilter { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.Contract.BrokenDependenciesFilter
    content.vb: >-
      <JsonProperty("brokenDependenciesFilter", Required:=Required.Always)>

      <Required(AllowEmptyStrings:=True)>

      <JsonConverter(GetType(StringEnumConverter))>

      Public Property BrokenDependenciesFilter As BrokenDependenciesFilter
  overload: Picturepark.SDK.V1.Contract.ContentFilterRequest.BrokenDependenciesFilter*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: brokenDependenciesFilter
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: AllowEmptyStrings
      type: System.Boolean
      value: true
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Newtonsoft.Json.Converters.StringEnumConverter
- uid: Picturepark.SDK.V1.Contract.ContentFilterRequest.RightsFilter
  commentId: P:Picturepark.SDK.V1.Contract.ContentFilterRequest.RightsFilter
  id: RightsFilter
  parent: Picturepark.SDK.V1.Contract.ContentFilterRequest
  langs:
  - csharp
  - vb
  name: RightsFilter
  nameWithType: ContentFilterRequest.RightsFilter
  fullName: Picturepark.SDK.V1.Contract.ContentFilterRequest.RightsFilter
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: RightsFilter
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 25424
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  summary: Limits the content document result set to specific ContentRights the user has
  example: []
  syntax:
    content: >-
      [JsonProperty("rightsFilter", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore, ItemConverterType = typeof(StringEnumConverter))]

      public ICollection<ContentRight> RightsFilter { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.ContentRight}
    content.vb: >-
      <JsonProperty("rightsFilter", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore, ItemConverterType:=GetType(StringEnumConverter))>

      Public Property RightsFilter As ICollection(Of ContentRight)
  overload: Picturepark.SDK.V1.Contract.ContentFilterRequest.RightsFilter*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: rightsFilter
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
    - name: ItemConverterType
      type: System.Type
      value: Newtonsoft.Json.Converters.StringEnumConverter
- uid: Picturepark.SDK.V1.Contract.ContentFilterRequest.ToJson
  commentId: M:Picturepark.SDK.V1.Contract.ContentFilterRequest.ToJson
  id: ToJson
  parent: Picturepark.SDK.V1.Contract.ContentFilterRequest
  langs:
  - csharp
  - vb
  name: ToJson()
  nameWithType: ContentFilterRequest.ToJson()
  fullName: Picturepark.SDK.V1.Contract.ContentFilterRequest.ToJson()
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: ToJson
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 25427
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  syntax:
    content: public string ToJson()
    return:
      type: System.String
    content.vb: Public Function ToJson() As String
  overload: Picturepark.SDK.V1.Contract.ContentFilterRequest.ToJson*
- uid: Picturepark.SDK.V1.Contract.ContentFilterRequest.FromJson(System.String)
  commentId: M:Picturepark.SDK.V1.Contract.ContentFilterRequest.FromJson(System.String)
  id: FromJson(System.String)
  parent: Picturepark.SDK.V1.Contract.ContentFilterRequest
  langs:
  - csharp
  - vb
  name: FromJson(string)
  nameWithType: ContentFilterRequest.FromJson(string)
  fullName: Picturepark.SDK.V1.Contract.ContentFilterRequest.FromJson(string)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
      branch: 11.14.x
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet.git
    id: FromJson
    path: ../../src/Picturepark.SDK.V1.Contract/Contracts.Generated.cs
    startLine: 25433
  assemblies:
  - Picturepark.SDK.V1.Contract
  namespace: Picturepark.SDK.V1.Contract
  syntax:
    content: public static ContentFilterRequest FromJson(string data)
    parameters:
    - id: data
      type: System.String
    return:
      type: Picturepark.SDK.V1.Contract.ContentFilterRequest
    content.vb: Public Shared Function FromJson(data As String) As ContentFilterRequest
  overload: Picturepark.SDK.V1.Contract.ContentFilterRequest.FromJson*
  nameWithType.vb: ContentFilterRequest.FromJson(String)
  fullName.vb: Picturepark.SDK.V1.Contract.ContentFilterRequest.FromJson(String)
  name.vb: FromJson(String)
references:
- uid: Picturepark.SDK.V1.Contract
  commentId: N:Picturepark.SDK.V1.Contract
  href: Picturepark.html
  name: Picturepark.SDK.V1.Contract
  nameWithType: Picturepark.SDK.V1.Contract
  fullName: Picturepark.SDK.V1.Contract
  spec.csharp:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.Contract
    name: Contract
    href: Picturepark.SDK.V1.Contract.html
  spec.vb:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.Contract
    name: Contract
    href: Picturepark.SDK.V1.Contract.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Picturepark.SDK.V1.Contract.ContentFilterRequest.ChannelId*
  commentId: Overload:Picturepark.SDK.V1.Contract.ContentFilterRequest.ChannelId
  href: Picturepark.SDK.V1.Contract.ContentFilterRequest.html#Picturepark_SDK_V1_Contract_ContentFilterRequest_ChannelId
  name: ChannelId
  nameWithType: ContentFilterRequest.ChannelId
  fullName: Picturepark.SDK.V1.Contract.ContentFilterRequest.ChannelId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Picturepark.SDK.V1.Contract.ContentFilterRequest.SearchLanguages*
  commentId: Overload:Picturepark.SDK.V1.Contract.ContentFilterRequest.SearchLanguages
  href: Picturepark.SDK.V1.Contract.ContentFilterRequest.html#Picturepark_SDK_V1_Contract_ContentFilterRequest_SearchLanguages
  name: SearchLanguages
  nameWithType: ContentFilterRequest.SearchLanguages
  fullName: Picturepark.SDK.V1.Contract.ContentFilterRequest.SearchLanguages
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<string>
  nameWithType: ICollection<string>
  fullName: System.Collections.Generic.ICollection<string>
  nameWithType.vb: ICollection(Of String)
  fullName.vb: System.Collections.Generic.ICollection(Of String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Picturepark.SDK.V1.Contract.ContentFilterRequest.SearchString*
  commentId: Overload:Picturepark.SDK.V1.Contract.ContentFilterRequest.SearchString
  href: Picturepark.SDK.V1.Contract.ContentFilterRequest.html#Picturepark_SDK_V1_Contract_ContentFilterRequest_SearchString
  name: SearchString
  nameWithType: ContentFilterRequest.SearchString
  fullName: Picturepark.SDK.V1.Contract.ContentFilterRequest.SearchString
- uid: Picturepark.SDK.V1.Contract.ContentFilterRequest.SearchType*
  commentId: Overload:Picturepark.SDK.V1.Contract.ContentFilterRequest.SearchType
  href: Picturepark.SDK.V1.Contract.ContentFilterRequest.html#Picturepark_SDK_V1_Contract_ContentFilterRequest_SearchType
  name: SearchType
  nameWithType: ContentFilterRequest.SearchType
  fullName: Picturepark.SDK.V1.Contract.ContentFilterRequest.SearchType
- uid: Picturepark.SDK.V1.Contract.ContentSearchType
  commentId: T:Picturepark.SDK.V1.Contract.ContentSearchType
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ContentSearchType.html
  name: ContentSearchType
  nameWithType: ContentSearchType
  fullName: Picturepark.SDK.V1.Contract.ContentSearchType
- uid: Picturepark.SDK.V1.Contract.ContentFilterRequest.CollectionId*
  commentId: Overload:Picturepark.SDK.V1.Contract.ContentFilterRequest.CollectionId
  href: Picturepark.SDK.V1.Contract.ContentFilterRequest.html#Picturepark_SDK_V1_Contract_ContentFilterRequest_CollectionId
  name: CollectionId
  nameWithType: ContentFilterRequest.CollectionId
  fullName: Picturepark.SDK.V1.Contract.ContentFilterRequest.CollectionId
- uid: Picturepark.SDK.V1.Contract.ContentFilterRequest.Filter*
  commentId: Overload:Picturepark.SDK.V1.Contract.ContentFilterRequest.Filter
  href: Picturepark.SDK.V1.Contract.ContentFilterRequest.html#Picturepark_SDK_V1_Contract_ContentFilterRequest_Filter
  name: Filter
  nameWithType: ContentFilterRequest.Filter
  fullName: Picturepark.SDK.V1.Contract.ContentFilterRequest.Filter
- uid: Picturepark.SDK.V1.Contract.FilterBase
  commentId: T:Picturepark.SDK.V1.Contract.FilterBase
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.FilterBase.html
  name: FilterBase
  nameWithType: FilterBase
  fullName: Picturepark.SDK.V1.Contract.FilterBase
- uid: Picturepark.SDK.V1.Contract.ContentFilterRequest.LifeCycleFilter*
  commentId: Overload:Picturepark.SDK.V1.Contract.ContentFilterRequest.LifeCycleFilter
  href: Picturepark.SDK.V1.Contract.ContentFilterRequest.html#Picturepark_SDK_V1_Contract_ContentFilterRequest_LifeCycleFilter
  name: LifeCycleFilter
  nameWithType: ContentFilterRequest.LifeCycleFilter
  fullName: Picturepark.SDK.V1.Contract.ContentFilterRequest.LifeCycleFilter
- uid: Picturepark.SDK.V1.Contract.LifeCycleFilter
  commentId: T:Picturepark.SDK.V1.Contract.LifeCycleFilter
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.LifeCycleFilter.html
  name: LifeCycleFilter
  nameWithType: LifeCycleFilter
  fullName: Picturepark.SDK.V1.Contract.LifeCycleFilter
- uid: Picturepark.SDK.V1.Contract.ContentFilterRequest.BrokenDependenciesFilter*
  commentId: Overload:Picturepark.SDK.V1.Contract.ContentFilterRequest.BrokenDependenciesFilter
  href: Picturepark.SDK.V1.Contract.ContentFilterRequest.html#Picturepark_SDK_V1_Contract_ContentFilterRequest_BrokenDependenciesFilter
  name: BrokenDependenciesFilter
  nameWithType: ContentFilterRequest.BrokenDependenciesFilter
  fullName: Picturepark.SDK.V1.Contract.ContentFilterRequest.BrokenDependenciesFilter
- uid: Picturepark.SDK.V1.Contract.BrokenDependenciesFilter
  commentId: T:Picturepark.SDK.V1.Contract.BrokenDependenciesFilter
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.BrokenDependenciesFilter.html
  name: BrokenDependenciesFilter
  nameWithType: BrokenDependenciesFilter
  fullName: Picturepark.SDK.V1.Contract.BrokenDependenciesFilter
- uid: Picturepark.SDK.V1.Contract.ContentFilterRequest.RightsFilter*
  commentId: Overload:Picturepark.SDK.V1.Contract.ContentFilterRequest.RightsFilter
  href: Picturepark.SDK.V1.Contract.ContentFilterRequest.html#Picturepark_SDK_V1_Contract_ContentFilterRequest_RightsFilter
  name: RightsFilter
  nameWithType: ContentFilterRequest.RightsFilter
  fullName: Picturepark.SDK.V1.Contract.ContentFilterRequest.RightsFilter
- uid: System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.ContentRight}
  commentId: T:System.Collections.Generic.ICollection{Picturepark.SDK.V1.Contract.ContentRight}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<ContentRight>
  nameWithType: ICollection<ContentRight>
  fullName: System.Collections.Generic.ICollection<Picturepark.SDK.V1.Contract.ContentRight>
  nameWithType.vb: ICollection(Of ContentRight)
  fullName.vb: System.Collections.Generic.ICollection(Of Picturepark.SDK.V1.Contract.ContentRight)
  name.vb: ICollection(Of ContentRight)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Picturepark.SDK.V1.Contract.ContentRight
    name: ContentRight
    href: Picturepark.SDK.V1.Contract.ContentRight.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Picturepark.SDK.V1.Contract.ContentRight
    name: ContentRight
    href: Picturepark.SDK.V1.Contract.ContentRight.html
  - name: )
- uid: Picturepark.SDK.V1.Contract.ContentFilterRequest.ToJson*
  commentId: Overload:Picturepark.SDK.V1.Contract.ContentFilterRequest.ToJson
  href: Picturepark.SDK.V1.Contract.ContentFilterRequest.html#Picturepark_SDK_V1_Contract_ContentFilterRequest_ToJson
  name: ToJson
  nameWithType: ContentFilterRequest.ToJson
  fullName: Picturepark.SDK.V1.Contract.ContentFilterRequest.ToJson
- uid: Picturepark.SDK.V1.Contract.ContentFilterRequest.FromJson*
  commentId: Overload:Picturepark.SDK.V1.Contract.ContentFilterRequest.FromJson
  href: Picturepark.SDK.V1.Contract.ContentFilterRequest.html#Picturepark_SDK_V1_Contract_ContentFilterRequest_FromJson_System_String_
  name: FromJson
  nameWithType: ContentFilterRequest.FromJson
  fullName: Picturepark.SDK.V1.Contract.ContentFilterRequest.FromJson
- uid: Picturepark.SDK.V1.Contract.ContentFilterRequest
  commentId: T:Picturepark.SDK.V1.Contract.ContentFilterRequest
  parent: Picturepark.SDK.V1.Contract
  href: Picturepark.SDK.V1.Contract.ContentFilterRequest.html
  name: ContentFilterRequest
  nameWithType: ContentFilterRequest
  fullName: Picturepark.SDK.V1.Contract.ContentFilterRequest
