### YamlMime:ManagedReference
items:
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot
  commentId: T:Picturepark.SDK.V1.CloudManager.Contract.Snapshot
  id: Snapshot
  parent: Picturepark.SDK.V1.CloudManager.Contract
  children:
  - Picturepark.SDK.V1.CloudManager.Contract.Snapshot.DurationInMilliseconds
  - Picturepark.SDK.V1.CloudManager.Contract.Snapshot.EndTime
  - Picturepark.SDK.V1.CloudManager.Contract.Snapshot.EndTimeInMilliseconds
  - Picturepark.SDK.V1.CloudManager.Contract.Snapshot.EntityId
  - Picturepark.SDK.V1.CloudManager.Contract.Snapshot.EntityType
  - Picturepark.SDK.V1.CloudManager.Contract.Snapshot.Failures
  - Picturepark.SDK.V1.CloudManager.Contract.Snapshot.FromJson(System.String)
  - Picturepark.SDK.V1.CloudManager.Contract.Snapshot.Indices
  - Picturepark.SDK.V1.CloudManager.Contract.Snapshot.Name
  - Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RepositoryExpiry
  - Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RepositoryIsArchived
  - Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RepositoryName
  - Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RepositoryStartTime
  - Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RestoreDate
  - Picturepark.SDK.V1.CloudManager.Contract.Snapshot.StartTime
  - Picturepark.SDK.V1.CloudManager.Contract.Snapshot.StartTimeInMilliseconds
  - Picturepark.SDK.V1.CloudManager.Contract.Snapshot.State
  - Picturepark.SDK.V1.CloudManager.Contract.Snapshot.ToJson
  langs:
  - csharp
  - vb
  name: Snapshot
  nameWithType: Snapshot
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot
  type: Class
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Snapshot
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 16216
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  syntax:
    content: >-
      [GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")]

      public class Snapshot
    content.vb: >-
      <GeneratedCode("NJsonSchema", "13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))")>

      Public Class Snapshot
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.CodeDom.Compiler.GeneratedCodeAttribute
    ctor: System.CodeDom.Compiler.GeneratedCodeAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: NJsonSchema
    - type: System.String
      value: 13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.DurationInMilliseconds
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.DurationInMilliseconds
  id: DurationInMilliseconds
  parent: Picturepark.SDK.V1.CloudManager.Contract.Snapshot
  langs:
  - csharp
  - vb
  name: DurationInMilliseconds
  nameWithType: Snapshot.DurationInMilliseconds
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.DurationInMilliseconds
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: DurationInMilliseconds
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 16222
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: The snapshot creation DurationInMilliseconds.
  example: []
  syntax:
    content: >-
      [JsonProperty("durationInMilliseconds", Required = Required.Always)]

      public long DurationInMilliseconds { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: >-
      <JsonProperty("durationInMilliseconds", Required:=Required.Always)>

      Public Property DurationInMilliseconds As Long
  overload: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.DurationInMilliseconds*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: durationInMilliseconds
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.EndTime
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.EndTime
  id: EndTime
  parent: Picturepark.SDK.V1.CloudManager.Contract.Snapshot
  langs:
  - csharp
  - vb
  name: EndTime
  nameWithType: Snapshot.EndTime
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.EndTime
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: EndTime
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 16228
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: The snapshot EndTime.
  example: []
  syntax:
    content: >-
      [JsonProperty("endTime", Required = Required.Always)]

      [Required(AllowEmptyStrings = true)]

      public DateTime EndTime { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonProperty("endTime", Required:=Required.Always)>

      <Required(AllowEmptyStrings:=True)>

      Public Property EndTime As Date
  overload: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.EndTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: endTime
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: AllowEmptyStrings
      type: System.Boolean
      value: true
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.EndTimeInMilliseconds
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.EndTimeInMilliseconds
  id: EndTimeInMilliseconds
  parent: Picturepark.SDK.V1.CloudManager.Contract.Snapshot
  langs:
  - csharp
  - vb
  name: EndTimeInMilliseconds
  nameWithType: Snapshot.EndTimeInMilliseconds
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.EndTimeInMilliseconds
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: EndTimeInMilliseconds
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 16235
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: The snapshot EndTimeInMilliseconds.
  example: []
  syntax:
    content: >-
      [JsonProperty("endTimeInMilliseconds", Required = Required.Always)]

      public long EndTimeInMilliseconds { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: >-
      <JsonProperty("endTimeInMilliseconds", Required:=Required.Always)>

      Public Property EndTimeInMilliseconds As Long
  overload: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.EndTimeInMilliseconds*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: endTimeInMilliseconds
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.Failures
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.Failures
  id: Failures
  parent: Picturepark.SDK.V1.CloudManager.Contract.Snapshot
  langs:
  - csharp
  - vb
  name: Failures
  nameWithType: Snapshot.Failures
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.Failures
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Failures
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 16241
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: The snapshot elastic search shard failures.
  example: []
  syntax:
    content: >-
      [JsonProperty("failures", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public ICollection<SnapshotShardFailure> Failures { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Picturepark.SDK.V1.CloudManager.Contract.SnapshotShardFailure}
    content.vb: >-
      <JsonProperty("failures", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Failures As ICollection(Of SnapshotShardFailure)
  overload: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.Failures*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: failures
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.Indices
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.Indices
  id: Indices
  parent: Picturepark.SDK.V1.CloudManager.Contract.Snapshot
  langs:
  - csharp
  - vb
  name: Indices
  nameWithType: Snapshot.Indices
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.Indices
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Indices
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 16247
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: The snapshot Indices.
  example: []
  syntax:
    content: >-
      [JsonProperty("indices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public ICollection<string> Indices { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonProperty("indices", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Indices As ICollection(Of String)
  overload: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.Indices*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: indices
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.Name
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.Name
  id: Name
  parent: Picturepark.SDK.V1.CloudManager.Contract.Snapshot
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Snapshot.Name
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.Name
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: Name
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 16253
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: The snapshot Name.
  example: []
  syntax:
    content: >-
      [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("name", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Name As String
  overload: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: name
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RepositoryName
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RepositoryName
  id: RepositoryName
  parent: Picturepark.SDK.V1.CloudManager.Contract.Snapshot
  langs:
  - csharp
  - vb
  name: RepositoryName
  nameWithType: Snapshot.RepositoryName
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RepositoryName
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: RepositoryName
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 16259
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: The repository name.
  example: []
  syntax:
    content: >-
      [JsonProperty("repositoryName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public string RepositoryName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("repositoryName", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property RepositoryName As String
  overload: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RepositoryName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: repositoryName
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RepositoryStartTime
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RepositoryStartTime
  id: RepositoryStartTime
  parent: Picturepark.SDK.V1.CloudManager.Contract.Snapshot
  langs:
  - csharp
  - vb
  name: RepositoryStartTime
  nameWithType: Snapshot.RepositoryStartTime
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RepositoryStartTime
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: RepositoryStartTime
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 16265
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: The repository start time.
  example: []
  syntax:
    content: >-
      [JsonProperty("repositoryStartTime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public DateTime? RepositoryStartTime { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: >-
      <JsonProperty("repositoryStartTime", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property RepositoryStartTime As Date?
  overload: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RepositoryStartTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: repositoryStartTime
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RepositoryExpiry
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RepositoryExpiry
  id: RepositoryExpiry
  parent: Picturepark.SDK.V1.CloudManager.Contract.Snapshot
  langs:
  - csharp
  - vb
  name: RepositoryExpiry
  nameWithType: Snapshot.RepositoryExpiry
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RepositoryExpiry
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: RepositoryExpiry
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 16271
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: The repository expiration.
  example: []
  syntax:
    content: >-
      [JsonProperty("repositoryExpiry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public DateTime? RepositoryExpiry { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: >-
      <JsonProperty("repositoryExpiry", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property RepositoryExpiry As Date?
  overload: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RepositoryExpiry*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: repositoryExpiry
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RepositoryIsArchived
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RepositoryIsArchived
  id: RepositoryIsArchived
  parent: Picturepark.SDK.V1.CloudManager.Contract.Snapshot
  langs:
  - csharp
  - vb
  name: RepositoryIsArchived
  nameWithType: Snapshot.RepositoryIsArchived
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RepositoryIsArchived
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: RepositoryIsArchived
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 16277
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: Is the repository already archived?
  example: []
  syntax:
    content: >-
      [JsonProperty("repositoryIsArchived", Required = Required.Always)]

      public bool RepositoryIsArchived { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("repositoryIsArchived", Required:=Required.Always)>

      Public Property RepositoryIsArchived As Boolean
  overload: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RepositoryIsArchived*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: repositoryIsArchived
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.StartTime
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.StartTime
  id: StartTime
  parent: Picturepark.SDK.V1.CloudManager.Contract.Snapshot
  langs:
  - csharp
  - vb
  name: StartTime
  nameWithType: Snapshot.StartTime
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.StartTime
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: StartTime
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 16283
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: The snapshot StartTime.
  example: []
  syntax:
    content: >-
      [JsonProperty("startTime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public DateTime? StartTime { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: >-
      <JsonProperty("startTime", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property StartTime As Date?
  overload: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.StartTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: startTime
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.StartTimeInMilliseconds
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.StartTimeInMilliseconds
  id: StartTimeInMilliseconds
  parent: Picturepark.SDK.V1.CloudManager.Contract.Snapshot
  langs:
  - csharp
  - vb
  name: StartTimeInMilliseconds
  nameWithType: Snapshot.StartTimeInMilliseconds
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.StartTimeInMilliseconds
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: StartTimeInMilliseconds
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 16289
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: The snapshot StartTimeInMilliseconds.
  example: []
  syntax:
    content: >-
      [JsonProperty("startTimeInMilliseconds", Required = Required.Always)]

      public long StartTimeInMilliseconds { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: >-
      <JsonProperty("startTimeInMilliseconds", Required:=Required.Always)>

      Public Property StartTimeInMilliseconds As Long
  overload: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.StartTimeInMilliseconds*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: startTimeInMilliseconds
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.State
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.State
  id: State
  parent: Picturepark.SDK.V1.CloudManager.Contract.Snapshot
  langs:
  - csharp
  - vb
  name: State
  nameWithType: Snapshot.State
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.State
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: State
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 16295
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  summary: The snapshot State.
  example: []
  syntax:
    content: >-
      [JsonProperty("state", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public string State { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("state", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property State As String
  overload: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.State*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: state
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.EntityId
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.EntityId
  id: EntityId
  parent: Picturepark.SDK.V1.CloudManager.Contract.Snapshot
  langs:
  - csharp
  - vb
  name: EntityId
  nameWithType: Snapshot.EntityId
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.EntityId
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: EntityId
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 16298
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  syntax:
    content: >-
      [JsonProperty("entityId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]

      public string EntityId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("entityId", Required:=Required.Default, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property EntityId As String
  overload: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.EntityId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: entityId
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 0
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.EntityType
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.EntityType
  id: EntityType
  parent: Picturepark.SDK.V1.CloudManager.Contract.Snapshot
  langs:
  - csharp
  - vb
  name: EntityType
  nameWithType: Snapshot.EntityType
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.EntityType
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: EntityType
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 16301
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  syntax:
    content: >-
      [JsonProperty("entityType", Required = Required.Always)]

      [Required(AllowEmptyStrings = true)]

      [JsonConverter(typeof(StringEnumConverter))]

      public BackupEntityType EntityType { get; set; }
    parameters: []
    return:
      type: Picturepark.SDK.V1.CloudManager.Contract.BackupEntityType
    content.vb: >-
      <JsonProperty("entityType", Required:=Required.Always)>

      <Required(AllowEmptyStrings:=True)>

      <JsonConverter(GetType(StringEnumConverter))>

      Public Property EntityType As BackupEntityType
  overload: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.EntityType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: entityType
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: AllowEmptyStrings
      type: System.Boolean
      value: true
  - type: Newtonsoft.Json.JsonConverterAttribute
    ctor: Newtonsoft.Json.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Newtonsoft.Json.Converters.StringEnumConverter
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RestoreDate
  commentId: P:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RestoreDate
  id: RestoreDate
  parent: Picturepark.SDK.V1.CloudManager.Contract.Snapshot
  langs:
  - csharp
  - vb
  name: RestoreDate
  nameWithType: Snapshot.RestoreDate
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RestoreDate
  type: Property
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: RestoreDate
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 16306
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  syntax:
    content: >-
      [JsonProperty("restoreDate", Required = Required.Always)]

      [Required(AllowEmptyStrings = true)]

      public DateTime RestoreDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonProperty("restoreDate", Required:=Required.Always)>

      <Required(AllowEmptyStrings:=True)>

      Public Property RestoreDate As Date
  overload: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RestoreDate*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: restoreDate
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: AllowEmptyStrings
      type: System.Boolean
      value: true
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.ToJson
  commentId: M:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.ToJson
  id: ToJson
  parent: Picturepark.SDK.V1.CloudManager.Contract.Snapshot
  langs:
  - csharp
  - vb
  name: ToJson()
  nameWithType: Snapshot.ToJson()
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.ToJson()
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: ToJson
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 16310
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  syntax:
    content: public string ToJson()
    return:
      type: System.String
    content.vb: Public Function ToJson() As String
  overload: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.ToJson*
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.FromJson(System.String)
  commentId: M:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.FromJson(System.String)
  id: FromJson(System.String)
  parent: Picturepark.SDK.V1.CloudManager.Contract.Snapshot
  langs:
  - csharp
  - vb
  name: FromJson(string)
  nameWithType: Snapshot.FromJson(string)
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.FromJson(string)
  type: Method
  source:
    remote:
      path: src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
      branch: release-prep/PP9-21763-regenerate-docs
      repo: https://github.com/Picturepark/Picturepark.SDK.DotNet
    id: FromJson
    path: ../../src/Picturepark.SDK.V1.CloudManager/Generated/Contracts.Generated.cs
    startLine: 16316
  assemblies:
  - Picturepark.SDK.V1.CloudManager
  namespace: Picturepark.SDK.V1.CloudManager.Contract
  syntax:
    content: public static Snapshot FromJson(string data)
    parameters:
    - id: data
      type: System.String
    return:
      type: Picturepark.SDK.V1.CloudManager.Contract.Snapshot
    content.vb: Public Shared Function FromJson(data As String) As Snapshot
  overload: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.FromJson*
  nameWithType.vb: Snapshot.FromJson(String)
  fullName.vb: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.FromJson(String)
  name.vb: FromJson(String)
references:
- uid: Picturepark.SDK.V1.CloudManager.Contract
  commentId: N:Picturepark.SDK.V1.CloudManager.Contract
  href: Picturepark.html
  name: Picturepark.SDK.V1.CloudManager.Contract
  nameWithType: Picturepark.SDK.V1.CloudManager.Contract
  fullName: Picturepark.SDK.V1.CloudManager.Contract
  spec.csharp:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.CloudManager
    name: CloudManager
    href: Picturepark.SDK.V1.CloudManager.html
  - name: .
  - uid: Picturepark.SDK.V1.CloudManager.Contract
    name: Contract
    href: Picturepark.SDK.V1.CloudManager.Contract.html
  spec.vb:
  - uid: Picturepark
    name: Picturepark
    href: Picturepark.html
  - name: .
  - uid: Picturepark.SDK
    name: SDK
    href: Picturepark.SDK.html
  - name: .
  - uid: Picturepark.SDK.V1
    name: V1
    href: Picturepark.SDK.V1.html
  - name: .
  - uid: Picturepark.SDK.V1.CloudManager
    name: CloudManager
    href: Picturepark.SDK.V1.CloudManager.html
  - name: .
  - uid: Picturepark.SDK.V1.CloudManager.Contract
    name: Contract
    href: Picturepark.SDK.V1.CloudManager.Contract.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.DurationInMilliseconds*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.DurationInMilliseconds
  href: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.html#Picturepark_SDK_V1_CloudManager_Contract_Snapshot_DurationInMilliseconds
  name: DurationInMilliseconds
  nameWithType: Snapshot.DurationInMilliseconds
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.DurationInMilliseconds
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.EndTime*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.EndTime
  href: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.html#Picturepark_SDK_V1_CloudManager_Contract_Snapshot_EndTime
  name: EndTime
  nameWithType: Snapshot.EndTime
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.EndTime
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.EndTimeInMilliseconds*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.EndTimeInMilliseconds
  href: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.html#Picturepark_SDK_V1_CloudManager_Contract_Snapshot_EndTimeInMilliseconds
  name: EndTimeInMilliseconds
  nameWithType: Snapshot.EndTimeInMilliseconds
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.EndTimeInMilliseconds
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.Failures*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.Failures
  href: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.html#Picturepark_SDK_V1_CloudManager_Contract_Snapshot_Failures
  name: Failures
  nameWithType: Snapshot.Failures
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.Failures
- uid: System.Collections.Generic.ICollection{Picturepark.SDK.V1.CloudManager.Contract.SnapshotShardFailure}
  commentId: T:System.Collections.Generic.ICollection{Picturepark.SDK.V1.CloudManager.Contract.SnapshotShardFailure}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<SnapshotShardFailure>
  nameWithType: ICollection<SnapshotShardFailure>
  fullName: System.Collections.Generic.ICollection<Picturepark.SDK.V1.CloudManager.Contract.SnapshotShardFailure>
  nameWithType.vb: ICollection(Of SnapshotShardFailure)
  fullName.vb: System.Collections.Generic.ICollection(Of Picturepark.SDK.V1.CloudManager.Contract.SnapshotShardFailure)
  name.vb: ICollection(Of SnapshotShardFailure)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Picturepark.SDK.V1.CloudManager.Contract.SnapshotShardFailure
    name: SnapshotShardFailure
    href: Picturepark.SDK.V1.CloudManager.Contract.SnapshotShardFailure.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Picturepark.SDK.V1.CloudManager.Contract.SnapshotShardFailure
    name: SnapshotShardFailure
    href: Picturepark.SDK.V1.CloudManager.Contract.SnapshotShardFailure.html
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.Indices*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.Indices
  href: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.html#Picturepark_SDK_V1_CloudManager_Contract_Snapshot_Indices
  name: Indices
  nameWithType: Snapshot.Indices
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.Indices
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<string>
  nameWithType: ICollection<string>
  fullName: System.Collections.Generic.ICollection<string>
  nameWithType.vb: ICollection(Of String)
  fullName.vb: System.Collections.Generic.ICollection(Of String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.Name*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.Name
  href: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.html#Picturepark_SDK_V1_CloudManager_Contract_Snapshot_Name
  name: Name
  nameWithType: Snapshot.Name
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RepositoryName*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RepositoryName
  href: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.html#Picturepark_SDK_V1_CloudManager_Contract_Snapshot_RepositoryName
  name: RepositoryName
  nameWithType: Snapshot.RepositoryName
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RepositoryName
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RepositoryStartTime*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RepositoryStartTime
  href: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.html#Picturepark_SDK_V1_CloudManager_Contract_Snapshot_RepositoryStartTime
  name: RepositoryStartTime
  nameWithType: Snapshot.RepositoryStartTime
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RepositoryStartTime
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime?
  nameWithType: DateTime?
  fullName: System.DateTime?
  nameWithType.vb: Date?
  fullName.vb: Date?
  name.vb: Date?
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
  spec.vb:
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RepositoryExpiry*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RepositoryExpiry
  href: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.html#Picturepark_SDK_V1_CloudManager_Contract_Snapshot_RepositoryExpiry
  name: RepositoryExpiry
  nameWithType: Snapshot.RepositoryExpiry
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RepositoryExpiry
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RepositoryIsArchived*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RepositoryIsArchived
  href: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.html#Picturepark_SDK_V1_CloudManager_Contract_Snapshot_RepositoryIsArchived
  name: RepositoryIsArchived
  nameWithType: Snapshot.RepositoryIsArchived
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RepositoryIsArchived
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.StartTime*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.StartTime
  href: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.html#Picturepark_SDK_V1_CloudManager_Contract_Snapshot_StartTime
  name: StartTime
  nameWithType: Snapshot.StartTime
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.StartTime
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.StartTimeInMilliseconds*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.StartTimeInMilliseconds
  href: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.html#Picturepark_SDK_V1_CloudManager_Contract_Snapshot_StartTimeInMilliseconds
  name: StartTimeInMilliseconds
  nameWithType: Snapshot.StartTimeInMilliseconds
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.StartTimeInMilliseconds
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.State*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.State
  href: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.html#Picturepark_SDK_V1_CloudManager_Contract_Snapshot_State
  name: State
  nameWithType: Snapshot.State
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.State
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.EntityId*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.EntityId
  href: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.html#Picturepark_SDK_V1_CloudManager_Contract_Snapshot_EntityId
  name: EntityId
  nameWithType: Snapshot.EntityId
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.EntityId
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.EntityType*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.EntityType
  href: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.html#Picturepark_SDK_V1_CloudManager_Contract_Snapshot_EntityType
  name: EntityType
  nameWithType: Snapshot.EntityType
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.EntityType
- uid: Picturepark.SDK.V1.CloudManager.Contract.BackupEntityType
  commentId: T:Picturepark.SDK.V1.CloudManager.Contract.BackupEntityType
  parent: Picturepark.SDK.V1.CloudManager.Contract
  href: Picturepark.SDK.V1.CloudManager.Contract.BackupEntityType.html
  name: BackupEntityType
  nameWithType: BackupEntityType
  fullName: Picturepark.SDK.V1.CloudManager.Contract.BackupEntityType
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RestoreDate*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RestoreDate
  href: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.html#Picturepark_SDK_V1_CloudManager_Contract_Snapshot_RestoreDate
  name: RestoreDate
  nameWithType: Snapshot.RestoreDate
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.RestoreDate
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.ToJson*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.ToJson
  href: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.html#Picturepark_SDK_V1_CloudManager_Contract_Snapshot_ToJson
  name: ToJson
  nameWithType: Snapshot.ToJson
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.ToJson
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.FromJson*
  commentId: Overload:Picturepark.SDK.V1.CloudManager.Contract.Snapshot.FromJson
  href: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.html#Picturepark_SDK_V1_CloudManager_Contract_Snapshot_FromJson_System_String_
  name: FromJson
  nameWithType: Snapshot.FromJson
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.FromJson
- uid: Picturepark.SDK.V1.CloudManager.Contract.Snapshot
  commentId: T:Picturepark.SDK.V1.CloudManager.Contract.Snapshot
  parent: Picturepark.SDK.V1.CloudManager.Contract
  href: Picturepark.SDK.V1.CloudManager.Contract.Snapshot.html
  name: Snapshot
  nameWithType: Snapshot
  fullName: Picturepark.SDK.V1.CloudManager.Contract.Snapshot
